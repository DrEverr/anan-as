(module
 (type $0 (func (param i32) (result i32)))
 (type $1 (func (param i32 i32)))
 (type $2 (func (param i32 i32 i32) (result i32)))
 (type $3 (func (param i32 i32) (result i32)))
 (type $4 (func (param i32 i32 i32)))
 (type $5 (func (param i32 i32 i32 i32) (result i32)))
 (type $6 (func (param i32)))
 (type $7 (func))
 (type $8 (func (param i32) (result i64)))
 (type $9 (func (param i32 i64)))
 (type $10 (func (result i32)))
 (type $11 (func (param i64 i64) (result i64)))
 (type $12 (func (param i64 i32) (result i32)))
 (type $13 (func (param i32 i64) (result i32)))
 (type $14 (func (param i64) (result i32)))
 (type $15 (func (param i32 i32 i64 i32)))
 (type $16 (func (param i32 i32 i32 i32)))
 (type $17 (func (param i32 f64 i64 i32 i32)))
 (type $18 (func (param i32 i32 i32 i32 i64 i32)))
 (type $19 (func (param i64 i32 i32) (result i32)))
 (type $20 (func (param i32 i64 i32 i32 i32) (result i32)))
 (type $21 (func (param i32 i32 i64) (result i32)))
 (type $22 (func (param i32 i32 i64)))
 (type $23 (func (param i32 i64 i32)))
 (type $24 (func (param i32 i32) (result i64)))
 (type $25 (func (param i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $26 (func (param i32 i32 i64 i32) (result i32)))
 (type $27 (func (param i64) (result i64)))
 (type $28 (func (param i32 i32 i32 i32 i32)))
 (type $29 (func (param i32 i64 i32 i32)))
 (type $30 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $31 (func (result i64)))
 (type $32 (func (param i64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (global $assembly/arguments/Arguments.Zero i32 (i32.const 0))
 (global $assembly/arguments/Arguments.OneImm i32 (i32.const 1))
 (global $assembly/arguments/Arguments.TwoImm i32 (i32.const 2))
 (global $assembly/arguments/Arguments.OneOff i32 (i32.const 3))
 (global $assembly/arguments/Arguments.OneRegOneImm i32 (i32.const 4))
 (global $assembly/arguments/Arguments.OneRegOneExtImm i32 (i32.const 5))
 (global $assembly/arguments/Arguments.OneRegTwoImm i32 (i32.const 6))
 (global $assembly/arguments/Arguments.OneRegOneImmOneOff i32 (i32.const 7))
 (global $assembly/arguments/Arguments.TwoReg i32 (i32.const 8))
 (global $assembly/arguments/Arguments.TwoRegOneImm i32 (i32.const 9))
 (global $assembly/arguments/Arguments.TwoRegOneOff i32 (i32.const 10))
 (global $assembly/arguments/Arguments.TwoRegTwoImm i32 (i32.const 11))
 (global $assembly/arguments/Arguments.ThreeReg i32 (i32.const 12))
 (global $assembly/arguments/RELEVANT_ARGS i32 (i32.const 112))
 (global $assembly/arguments/REQUIRED_BYTES i32 (i32.const 240))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $assembly/arguments/DECODERS i32 (i32.const 1248))
 (global $assembly/instructions/MISSING_INSTRUCTION (mut i32) (i32.const 0))
 (global $assembly/instructions/SBRK (mut i32) (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $assembly/instructions/INSTRUCTIONS (mut i32) (i32.const 0))
 (global $assembly/registers/NO_OF_REGISTERS i32 (i32.const 13))
 (global $assembly/registers/REG_SIZE_BYTES i32 (i32.const 8))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $assembly/memory-page/PAGE_SIZE (mut i32) (i32.const 0))
 (global $assembly/memory-page/PAGE_SIZE_SHIFT i32 (i32.const 12))
 (global $assembly/memory-page/SEGMENT_SIZE (mut i32) (i32.const 0))
 (global $assembly/memory-page/SEGMENT_SIZE_SHIFT i32 (i32.const 16))
 (global $assembly/memory-page/RESERVED_MEMORY (mut i32) (i32.const 0))
 (global $assembly/memory-page/RESERVED_PAGES (mut i32) (i32.const 0))
 (global $assembly/memory-page/ALLOCATE_EAGERLY (mut i32) (i32.const 0))
 (global $assembly/memory-page/Access.None i32 (i32.const 0))
 (global $assembly/memory-page/Access.Read i32 (i32.const 1))
 (global $assembly/memory-page/Access.Write i32 (i32.const 2))
 (global $assembly/memory/NO_PAGE_FAULT (mut i32) (i32.const 0))
 (global $assembly/memory/MEMORY_SIZE i64 (i64.const 4294967296))
 (global $assembly/memory/EMPTY_UINT8ARRAY (mut i32) (i32.const 0))
 (global $assembly/memory/EMPTY_PAGE (mut i32) (i32.const 0))
 (global $assembly/instructions/outcome/Result.PANIC i32 (i32.const 0))
 (global $assembly/instructions/outcome/Result.FAULT i32 (i32.const 1))
 (global $assembly/instructions/outcome/Result.FAULT_ACCESS i32 (i32.const 2))
 (global $assembly/instructions/outcome/Result.HOST i32 (i32.const 3))
 (global $assembly/instructions/outcome/Outcome.Ok i32 (i32.const 0))
 (global $assembly/instructions/outcome/Outcome.StaticJump i32 (i32.const 1))
 (global $assembly/instructions/outcome/Outcome.DynamicJump i32 (i32.const 2))
 (global $assembly/instructions/outcome/Outcome.Result i32 (i32.const 3))
 (global $assembly/instructions/bit/count_set_bits_64 i32 (i32.const 8352))
 (global $assembly/instructions/bit/count_set_bits_32 i32 (i32.const 8384))
 (global $assembly/instructions/bit/leading_zero_bits_64 i32 (i32.const 8416))
 (global $assembly/instructions/bit/leading_zero_bits_32 i32 (i32.const 8448))
 (global $assembly/instructions/bit/trailing_zero_bits_64 i32 (i32.const 8480))
 (global $assembly/instructions/bit/trailing_zero_bits_32 i32 (i32.const 8512))
 (global $assembly/instructions/bit/sign_extend_8 i32 (i32.const 8544))
 (global $assembly/instructions/bit/sign_extend_16 i32 (i32.const 8576))
 (global $assembly/instructions/bit/zero_extend_16 i32 (i32.const 8608))
 (global $assembly/instructions/bit/reverse_bytes i32 (i32.const 8640))
 (global $assembly/instructions/branch/branch_eq_imm i32 (i32.const 8672))
 (global $assembly/instructions/branch/branch_ne_imm i32 (i32.const 8704))
 (global $assembly/instructions/branch/branch_lt_u_imm i32 (i32.const 8736))
 (global $assembly/instructions/branch/branch_le_u_imm i32 (i32.const 8768))
 (global $assembly/instructions/branch/branch_ge_u_imm i32 (i32.const 8800))
 (global $assembly/instructions/branch/branch_gt_u_imm i32 (i32.const 8832))
 (global $assembly/instructions/branch/branch_lt_s_imm i32 (i32.const 8864))
 (global $assembly/instructions/branch/branch_le_s_imm i32 (i32.const 8896))
 (global $assembly/instructions/branch/branch_ge_s_imm i32 (i32.const 8928))
 (global $assembly/instructions/branch/branch_gt_s_imm i32 (i32.const 8960))
 (global $assembly/instructions/branch/branch_eq i32 (i32.const 8992))
 (global $assembly/instructions/branch/branch_ne i32 (i32.const 9024))
 (global $assembly/instructions/branch/branch_lt_u i32 (i32.const 9056))
 (global $assembly/instructions/branch/branch_lt_s i32 (i32.const 9088))
 (global $assembly/instructions/branch/branch_ge_u i32 (i32.const 9120))
 (global $assembly/instructions/branch/branch_ge_s i32 (i32.const 9152))
 (global $assembly/instructions/jump/jump i32 (i32.const 9184))
 (global $assembly/instructions/jump/jump_ind i32 (i32.const 9216))
 (global $assembly/instructions/jump/load_imm_jump i32 (i32.const 9248))
 (global $assembly/instructions/jump/load_imm_jump_ind i32 (i32.const 9280))
 (global $assembly/instructions/load/load_imm_64 i32 (i32.const 9312))
 (global $assembly/instructions/load/load_imm i32 (i32.const 9344))
 (global $assembly/instructions/load/load_u8 i32 (i32.const 9696))
 (global $assembly/instructions/load/load_i8 i32 (i32.const 9728))
 (global $assembly/instructions/load/load_u16 i32 (i32.const 9760))
 (global $assembly/instructions/load/load_i16 i32 (i32.const 9792))
 (global $assembly/instructions/load/load_u32 i32 (i32.const 9824))
 (global $assembly/instructions/load/load_i32 i32 (i32.const 9856))
 (global $assembly/instructions/load/load_u64 i32 (i32.const 9888))
 (global $assembly/instructions/load/load_ind_u8 i32 (i32.const 9920))
 (global $assembly/instructions/load/load_ind_i8 i32 (i32.const 9952))
 (global $assembly/instructions/load/load_ind_u16 i32 (i32.const 9984))
 (global $assembly/instructions/load/load_ind_i16 i32 (i32.const 10016))
 (global $assembly/instructions/load/load_ind_u32 i32 (i32.const 10048))
 (global $assembly/instructions/load/load_ind_i32 i32 (i32.const 10080))
 (global $assembly/instructions/load/load_ind_u64 i32 (i32.const 10112))
 (global $assembly/instructions/logic/and_imm i32 (i32.const 10144))
 (global $assembly/instructions/logic/xor_imm i32 (i32.const 10176))
 (global $assembly/instructions/logic/or_imm i32 (i32.const 10208))
 (global $assembly/instructions/logic/and i32 (i32.const 10240))
 (global $assembly/instructions/logic/xor i32 (i32.const 10272))
 (global $assembly/instructions/logic/or i32 (i32.const 10304))
 (global $assembly/instructions/logic/and_inv i32 (i32.const 10336))
 (global $assembly/instructions/logic/or_inv i32 (i32.const 10368))
 (global $assembly/instructions/logic/xnor i32 (i32.const 10400))
 (global $assembly/instructions/math/add_imm_32 i32 (i32.const 10432))
 (global $assembly/instructions/math/mul_imm_32 i32 (i32.const 10464))
 (global $assembly/instructions/math/neg_add_imm_32 i32 (i32.const 10496))
 (global $assembly/instructions/math/add_imm i32 (i32.const 10528))
 (global $assembly/instructions/math/mul_imm i32 (i32.const 10560))
 (global $assembly/instructions/math/neg_add_imm i32 (i32.const 10592))
 (global $assembly/instructions/math/add_32 i32 (i32.const 10624))
 (global $assembly/instructions/math/sub_32 i32 (i32.const 10656))
 (global $assembly/instructions/math/mul_32 i32 (i32.const 10688))
 (global $~lib/builtins/u64.MAX_VALUE i64 (i64.const -1))
 (global $assembly/instructions/math/div_u_32 i32 (i32.const 10720))
 (global $~lib/builtins/i32.MIN_VALUE i32 (i32.const -2147483648))
 (global $assembly/instructions/math/div_s_32 i32 (i32.const 10752))
 (global $assembly/instructions/math/rem_u_32 i32 (i32.const 10784))
 (global $assembly/instructions/math/rem_s_32 i32 (i32.const 10816))
 (global $assembly/instructions/math/add_64 i32 (i32.const 10848))
 (global $assembly/instructions/math/sub i32 (i32.const 10880))
 (global $assembly/instructions/math/mul i32 (i32.const 10912))
 (global $assembly/instructions/math/div_u i32 (i32.const 10944))
 (global $~lib/builtins/i64.MIN_VALUE i64 (i64.const -9223372036854775808))
 (global $assembly/instructions/math/div_s i32 (i32.const 10976))
 (global $assembly/instructions/math/rem_u i32 (i32.const 11008))
 (global $assembly/instructions/math/rem_s i32 (i32.const 11040))
 (global $assembly/instructions/math/mul_upper_s_s i32 (i32.const 11072))
 (global $assembly/instructions/math/mul_upper_u_u i32 (i32.const 11104))
 (global $assembly/instructions/math/mul_upper_s_u i32 (i32.const 11136))
 (global $assembly/instructions/math/max i32 (i32.const 11168))
 (global $assembly/instructions/math/max_u i32 (i32.const 11200))
 (global $assembly/instructions/math/min i32 (i32.const 11232))
 (global $assembly/instructions/math/min_u i32 (i32.const 11264))
 (global $assembly/instructions/misc/INVALID i32 (i32.const 11296))
 (global $assembly/instructions/misc/trap i32 (i32.const 11328))
 (global $assembly/instructions/misc/fallthrough i32 (i32.const 11360))
 (global $assembly/instructions/misc/ecalli i32 (i32.const 11392))
 (global $assembly/instructions/misc/sbrk i32 (i32.const 11568))
 (global $assembly/instructions/mov/move_reg i32 (i32.const 11600))
 (global $assembly/instructions/mov/cmov_iz_imm i32 (i32.const 11632))
 (global $assembly/instructions/mov/cmov_nz_imm i32 (i32.const 11664))
 (global $assembly/instructions/mov/cmov_iz i32 (i32.const 11696))
 (global $assembly/instructions/mov/cmov_nz i32 (i32.const 11728))
 (global $assembly/instructions/rot/rot_r_64_imm i32 (i32.const 11760))
 (global $assembly/instructions/rot/rot_r_64_imm_alt i32 (i32.const 11792))
 (global $assembly/instructions/rot/rot_r_32_imm i32 (i32.const 11824))
 (global $assembly/instructions/rot/rot_r_32_imm_alt i32 (i32.const 11856))
 (global $assembly/instructions/rot/rot_l_64 i32 (i32.const 11888))
 (global $assembly/instructions/rot/rot_l_32 i32 (i32.const 11920))
 (global $assembly/instructions/rot/rot_r_64 i32 (i32.const 11952))
 (global $assembly/instructions/rot/rot_r_32 i32 (i32.const 11984))
 (global $assembly/instructions/set/set_lt_u_imm i32 (i32.const 12016))
 (global $assembly/instructions/set/set_lt_s_imm i32 (i32.const 12048))
 (global $assembly/instructions/set/set_gt_u_imm i32 (i32.const 12080))
 (global $assembly/instructions/set/set_gt_s_imm i32 (i32.const 12112))
 (global $assembly/instructions/set/set_lt_u i32 (i32.const 12144))
 (global $assembly/instructions/set/set_lt_s i32 (i32.const 12176))
 (global $assembly/instructions/shift/MAX_SHIFT_64 i32 (i32.const 64))
 (global $assembly/instructions/shift/MAX_SHIFT_32 i32 (i32.const 32))
 (global $assembly/instructions/shift/shlo_l_imm_32 i32 (i32.const 12208))
 (global $assembly/instructions/shift/shlo_r_imm_32 i32 (i32.const 12240))
 (global $assembly/instructions/shift/shar_r_imm_32 i32 (i32.const 12272))
 (global $assembly/instructions/shift/shlo_l_imm_alt_32 i32 (i32.const 12304))
 (global $assembly/instructions/shift/shlo_r_imm_alt_32 i32 (i32.const 12336))
 (global $assembly/instructions/shift/shar_r_imm_alt_32 i32 (i32.const 12368))
 (global $assembly/instructions/shift/shlo_l_imm i32 (i32.const 12400))
 (global $assembly/instructions/shift/shlo_r_imm i32 (i32.const 12432))
 (global $assembly/instructions/shift/shar_r_imm i32 (i32.const 12464))
 (global $assembly/instructions/shift/shlo_l_imm_alt i32 (i32.const 12496))
 (global $assembly/instructions/shift/shlo_r_imm_alt i32 (i32.const 12528))
 (global $assembly/instructions/shift/shar_r_imm_alt i32 (i32.const 12560))
 (global $assembly/instructions/shift/shlo_l_32 i32 (i32.const 12592))
 (global $assembly/instructions/shift/shlo_r_32 i32 (i32.const 12624))
 (global $assembly/instructions/shift/shar_r_32 i32 (i32.const 12656))
 (global $assembly/instructions/shift/shlo_l i32 (i32.const 12688))
 (global $assembly/instructions/shift/shlo_r i32 (i32.const 12720))
 (global $assembly/instructions/shift/shar_r i32 (i32.const 12752))
 (global $assembly/instructions/store/store_imm_u8 i32 (i32.const 12784))
 (global $assembly/instructions/store/store_imm_u16 i32 (i32.const 12816))
 (global $assembly/instructions/store/store_imm_u32 i32 (i32.const 12848))
 (global $assembly/instructions/store/store_imm_u64 i32 (i32.const 12880))
 (global $assembly/instructions/store/store_u8 i32 (i32.const 12912))
 (global $assembly/instructions/store/store_u16 i32 (i32.const 12944))
 (global $assembly/instructions/store/store_u32 i32 (i32.const 12976))
 (global $assembly/instructions/store/store_u64 i32 (i32.const 13008))
 (global $assembly/instructions/store/store_imm_ind_u8 i32 (i32.const 13040))
 (global $assembly/instructions/store/store_imm_ind_u16 i32 (i32.const 13072))
 (global $assembly/instructions/store/store_imm_ind_u32 i32 (i32.const 13104))
 (global $assembly/instructions/store/store_imm_ind_u64 i32 (i32.const 13136))
 (global $assembly/instructions/store/store_ind_u8 i32 (i32.const 13168))
 (global $assembly/instructions/store/store_ind_u16 i32 (i32.const 13200))
 (global $assembly/instructions/store/store_ind_u32 i32 (i32.const 13232))
 (global $assembly/instructions/store/store_ind_u64 i32 (i32.const 13264))
 (global $assembly/instructions-exe/RUN i32 (i32.const 14240))
 (global $assembly/codec/MASKS i32 (i32.const 14320))
 (global $assembly/codec/variableLength i32 (i32.const 14368))
 (global $assembly/program/MAX_SKIP i32 (i32.const 24))
 (global $assembly/program/BasicBlock.NONE i32 (i32.const 0))
 (global $assembly/program/BasicBlock.START i32 (i32.const 2))
 (global $assembly/program/BasicBlock.END i32 (i32.const 4))
 (global $assembly/interpreter/Status.OK i32 (i32.const -1))
 (global $assembly/interpreter/Status.HALT i32 (i32.const 0))
 (global $assembly/interpreter/Status.PANIC i32 (i32.const 1))
 (global $assembly/interpreter/Status.FAULT i32 (i32.const 2))
 (global $assembly/interpreter/Status.HOST i32 (i32.const 3))
 (global $assembly/interpreter/Status.OOG i32 (i32.const 4))
 (global $assembly/interpreter/DjumpStatus.OK i32 (i32.const 0))
 (global $assembly/interpreter/DjumpStatus.HALT i32 (i32.const 1))
 (global $assembly/interpreter/DjumpStatus.PANIC i32 (i32.const 2))
 (global $assembly/interpreter/EXIT i32 (i32.const -65536))
 (global $assembly/interpreter/JUMP_ALIGMENT_FACTOR i32 (i32.const 2))
 (global $assembly/interpreter/MAX_U32 (mut i64) (i64.const 0))
 (global $assembly/spi/MAX_ARGS_LEN (mut i32) (i32.const 0))
 (global $assembly/spi/ARGS_SEGMENT_START (mut i32) (i32.const 0))
 (global $assembly/spi/STACK_SEGMENT_END (mut i32) (i32.const 0))
 (global $assembly/api-debugger/interpreter (mut i32) (i32.const 0))
 (global $assembly/api-utils/InputKind.Generic i32 (i32.const 0))
 (global $assembly/api-utils/InputKind.SPI i32 (i32.const 1))
 (global $assembly/api-utils/HasMetadata.Yes i32 (i32.const 0))
 (global $assembly/api-utils/HasMetadata.No i32 (i32.const 1))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/rt/__rtti_base i32 (i32.const 20480))
 (global $~lib/memory/__data_end i32 (i32.const 20740))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 53508))
 (global $~lib/memory/__heap_base i32 (i32.const 53508))
 (memory $0 1)
 (data $0 (i32.const 12) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data $1 (i32.const 92) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00 \00\00\00 \00\00\004\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $2 (i32.const 140) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\01\00\00\00\t\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data $3 (i32.const 220) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00\a0\00\00\00\a0\00\00\004\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $4 (i32.const 268) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data $5 (i32.const 332) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $6 (i32.const 400) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $7 (i32.const 432) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $8 (i32.const 460) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data $9 (i32.const 524) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data $10 (i32.const 576) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $11 (i32.const 604) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $12 (i32.const 668) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data $13 (i32.const 700) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data $14 (i32.const 764) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data $15 (i32.const 796) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data $16 (i32.const 828) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data $17 (i32.const 860) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data $18 (i32.const 892) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data $19 (i32.const 924) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data $20 (i32.const 956) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data $21 (i32.const 988) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data $22 (i32.const 1020) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data $23 (i32.const 1052) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data $24 (i32.const 1084) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data $25 (i32.const 1116) "\1c\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data $26 (i32.const 1148) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00\b0\02\00\00\10\03\00\000\03\00\00P\03\00\00p\03\00\00\90\03\00\00\b0\03\00\00\d0\03\00\00\f0\03\00\00\10\04\00\000\04\00\00P\04\00\00p\04\00\00\00\00\00\00\00\00\00\00")
 (data $27 (i32.const 1228) ",\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\10\00\00\00\90\04\00\00\90\04\00\004\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $28 (i32.const 1276) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00I\00N\00V\00A\00L\00I\00D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $29 (i32.const 1324) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00S\00B\00R\00K\00\00\00\00\00")
 (data $30 (i32.const 1356) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00T\00R\00A\00P\00\00\00\00\00")
 (data $31 (i32.const 1388) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00F\00A\00L\00L\00T\00H\00R\00O\00U\00G\00H\00\00\00\00\00\00\00")
 (data $32 (i32.const 1436) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00E\00C\00A\00L\00L\00I\00")
 (data $33 (i32.const 1468) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00L\00O\00A\00D\00_\00I\00M\00M\00_\006\004\00\00\00\00\00\00\00")
 (data $34 (i32.const 1516) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00U\008\00\00\00\00\00")
 (data $35 (i32.const 1564) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00U\001\006\00\00\00")
 (data $36 (i32.const 1612) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00U\003\002\00\00\00")
 (data $37 (i32.const 1660) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00U\006\004\00\00\00")
 (data $38 (i32.const 1708) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00J\00U\00M\00P\00\00\00\00\00")
 (data $39 (i32.const 1740) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00J\00U\00M\00P\00_\00I\00N\00D\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $40 (i32.const 1788) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00L\00O\00A\00D\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $41 (i32.const 1836) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00L\00O\00A\00D\00_\00U\008\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $42 (i32.const 1884) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00L\00O\00A\00D\00_\00I\008\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $43 (i32.const 1932) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00L\00O\00A\00D\00_\00U\001\006\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $44 (i32.const 1980) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00L\00O\00A\00D\00_\00I\001\006\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $45 (i32.const 2028) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00L\00O\00A\00D\00_\00U\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $46 (i32.const 2076) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00L\00O\00A\00D\00_\00I\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $47 (i32.const 2124) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00L\00O\00A\00D\00_\00U\006\004\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $48 (i32.const 2172) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00S\00T\00O\00R\00E\00_\00U\008\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $49 (i32.const 2220) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00T\00O\00R\00E\00_\00U\001\006\00\00\00\00\00\00\00\00\00\00\00")
 (data $50 (i32.const 2268) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00T\00O\00R\00E\00_\00U\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $51 (i32.const 2316) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00T\00O\00R\00E\00_\00U\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $52 (i32.const 2364) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00I\00N\00D\00_\00U\008\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $53 (i32.const 2428) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00I\00N\00D\00_\00U\001\006\00\00\00\00\00\00\00\00\00\00\00")
 (data $54 (i32.const 2492) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00I\00N\00D\00_\00U\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $55 (i32.const 2556) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00T\00O\00R\00E\00_\00I\00M\00M\00_\00I\00N\00D\00_\00U\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $56 (i32.const 2620) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00L\00O\00A\00D\00_\00I\00M\00M\00_\00J\00U\00M\00P\00\00\00")
 (data $57 (i32.const 2668) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00B\00R\00A\00N\00C\00H\00_\00E\00Q\00_\00I\00M\00M\00\00\00")
 (data $58 (i32.const 2716) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00B\00R\00A\00N\00C\00H\00_\00N\00E\00_\00I\00M\00M\00\00\00")
 (data $59 (i32.const 2764) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00L\00T\00_\00U\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $60 (i32.const 2828) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00L\00E\00_\00U\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $61 (i32.const 2892) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00G\00E\00_\00U\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $62 (i32.const 2956) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00G\00T\00_\00U\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $63 (i32.const 3020) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00L\00T\00_\00S\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $64 (i32.const 3084) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00L\00E\00_\00S\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $65 (i32.const 3148) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00G\00E\00_\00S\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $66 (i32.const 3212) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00B\00R\00A\00N\00C\00H\00_\00G\00T\00_\00S\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $67 (i32.const 3276) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00M\00O\00V\00E\00_\00R\00E\00G\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $68 (i32.const 3324) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00C\00O\00U\00N\00T\00_\00S\00E\00T\00_\00B\00I\00T\00S\00_\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $69 (i32.const 3388) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00C\00O\00U\00N\00T\00_\00S\00E\00T\00_\00B\00I\00T\00S\00_\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $70 (i32.const 3452) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00L\00E\00A\00D\00I\00N\00G\00_\00Z\00E\00R\00O\00_\00B\00I\00T\00S\00_\006\004\00\00\00\00\00")
 (data $71 (i32.const 3516) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00L\00E\00A\00D\00I\00N\00G\00_\00Z\00E\00R\00O\00_\00B\00I\00T\00S\00_\003\002\00\00\00\00\00")
 (data $72 (i32.const 3580) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00T\00R\00A\00I\00L\00I\00N\00G\00_\00Z\00E\00R\00O\00_\00B\00I\00T\00S\00_\006\004\00\00\00")
 (data $73 (i32.const 3644) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00T\00R\00A\00I\00L\00I\00N\00G\00_\00Z\00E\00R\00O\00_\00B\00I\00T\00S\00_\003\002\00\00\00")
 (data $74 (i32.const 3708) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00I\00G\00N\00_\00E\00X\00T\00E\00N\00D\00_\008\00\00\00")
 (data $75 (i32.const 3756) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00S\00I\00G\00N\00_\00E\00X\00T\00E\00N\00D\00_\001\006\00")
 (data $76 (i32.const 3804) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00Z\00E\00R\00O\00_\00E\00X\00T\00E\00N\00D\00_\001\006\00")
 (data $77 (i32.const 3852) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00R\00E\00V\00E\00R\00S\00E\00_\00B\00Y\00T\00E\00S\00\00\00")
 (data $78 (i32.const 3900) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00S\00T\00O\00R\00E\00_\00I\00N\00D\00_\00U\008\00\00\00\00\00")
 (data $79 (i32.const 3948) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00T\00O\00R\00E\00_\00I\00N\00D\00_\00U\001\006\00\00\00")
 (data $80 (i32.const 3996) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00T\00O\00R\00E\00_\00I\00N\00D\00_\00U\003\002\00\00\00")
 (data $81 (i32.const 4044) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00T\00O\00R\00E\00_\00I\00N\00D\00_\00U\006\004\00\00\00")
 (data $82 (i32.const 4092) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00L\00O\00A\00D\00_\00I\00N\00D\00_\00U\008\00\00\00\00\00\00\00")
 (data $83 (i32.const 4140) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00L\00O\00A\00D\00_\00I\00N\00D\00_\00I\008\00\00\00\00\00\00\00")
 (data $84 (i32.const 4188) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00L\00O\00A\00D\00_\00I\00N\00D\00_\00U\001\006\00\00\00\00\00")
 (data $85 (i32.const 4236) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00L\00O\00A\00D\00_\00I\00N\00D\00_\00I\001\006\00\00\00\00\00")
 (data $86 (i32.const 4284) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00L\00O\00A\00D\00_\00I\00N\00D\00_\00U\003\002\00\00\00\00\00")
 (data $87 (i32.const 4332) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00L\00O\00A\00D\00_\00I\00N\00D\00_\00I\003\002\00\00\00\00\00")
 (data $88 (i32.const 4380) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00L\00O\00A\00D\00_\00I\00N\00D\00_\00U\006\004\00\00\00\00\00")
 (data $89 (i32.const 4428) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00A\00D\00D\00_\00I\00M\00M\00_\003\002\00\00\00\00\00\00\00\00\00")
 (data $90 (i32.const 4476) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00A\00N\00D\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $91 (i32.const 4524) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00X\00O\00R\00_\00I\00M\00M\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $92 (i32.const 4572) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00O\00R\00_\00I\00M\00M\00")
 (data $93 (i32.const 4604) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00M\00U\00L\00_\00I\00M\00M\00_\003\002\00\00\00\00\00\00\00\00\00")
 (data $94 (i32.const 4652) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00S\00E\00T\00_\00L\00T\00_\00U\00_\00I\00M\00M\00\00\00\00\00")
 (data $95 (i32.const 4700) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00S\00E\00T\00_\00L\00T\00_\00S\00_\00I\00M\00M\00\00\00\00\00")
 (data $96 (i32.const 4748) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00H\00L\00O\00_\00L\00_\00I\00M\00M\00_\003\002\00\00\00")
 (data $97 (i32.const 4796) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00H\00L\00O\00_\00R\00_\00I\00M\00M\00_\003\002\00\00\00")
 (data $98 (i32.const 4844) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00H\00A\00R\00_\00R\00_\00I\00M\00M\00_\003\002\00\00\00")
 (data $99 (i32.const 4892) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00N\00E\00G\00_\00A\00D\00D\00_\00I\00M\00M\00_\003\002\00")
 (data $100 (i32.const 4940) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00S\00E\00T\00_\00G\00T\00_\00U\00_\00I\00M\00M\00\00\00\00\00")
 (data $101 (i32.const 4988) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00S\00E\00T\00_\00G\00T\00_\00S\00_\00I\00M\00M\00\00\00\00\00")
 (data $102 (i32.const 5036) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00H\00L\00O\00_\00L\00_\00I\00M\00M\00_\00A\00L\00T\00_\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $103 (i32.const 5100) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00H\00L\00O\00_\00R\00_\00I\00M\00M\00_\00A\00L\00T\00_\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $104 (i32.const 5164) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00H\00A\00R\00_\00R\00_\00I\00M\00M\00_\00A\00L\00T\00_\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $105 (i32.const 5228) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00C\00M\00O\00V\00_\00I\00Z\00_\00I\00M\00M\00\00\00\00\00\00\00")
 (data $106 (i32.const 5276) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00C\00M\00O\00V\00_\00N\00Z\00_\00I\00M\00M\00\00\00\00\00\00\00")
 (data $107 (i32.const 5324) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00A\00D\00D\00_\00I\00M\00M\00_\006\004\00\00\00\00\00\00\00\00\00")
 (data $108 (i32.const 5372) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\14\00\00\00M\00U\00L\00_\00I\00M\00M\00_\006\004\00\00\00\00\00\00\00\00\00")
 (data $109 (i32.const 5420) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00H\00L\00O\00_\00L\00_\00I\00M\00M\00_\006\004\00\00\00")
 (data $110 (i32.const 5468) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00H\00L\00O\00_\00R\00_\00I\00M\00M\00_\006\004\00\00\00")
 (data $111 (i32.const 5516) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00S\00H\00A\00R\00_\00R\00_\00I\00M\00M\00_\006\004\00\00\00")
 (data $112 (i32.const 5564) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00N\00E\00G\00_\00A\00D\00D\00_\00I\00M\00M\00_\006\004\00")
 (data $113 (i32.const 5612) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00H\00L\00O\00_\00L\00_\00I\00M\00M\00_\00A\00L\00T\00_\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $114 (i32.const 5676) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00H\00L\00O\00_\00R\00_\00I\00M\00M\00_\00A\00L\00T\00_\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $115 (i32.const 5740) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00S\00H\00A\00R\00_\00R\00_\00I\00M\00M\00_\00A\00L\00T\00_\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $116 (i32.const 5804) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00R\00O\00T\00_\00R\00_\006\004\00_\00I\00M\00M\00\00\00\00\00")
 (data $117 (i32.const 5852) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00R\00O\00T\00_\00R\00_\006\004\00_\00I\00M\00M\00_\00A\00L\00T\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $118 (i32.const 5916) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00R\00O\00T\00_\00R\00_\003\002\00_\00I\00M\00M\00\00\00\00\00")
 (data $119 (i32.const 5964) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00R\00O\00T\00_\00R\00_\003\002\00_\00I\00M\00M\00_\00A\00L\00T\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $120 (i32.const 6028) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00B\00R\00A\00N\00C\00H\00_\00E\00Q\00\00\00\00\00\00\00\00\00\00\00")
 (data $121 (i32.const 6076) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00B\00R\00A\00N\00C\00H\00_\00N\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data $122 (i32.const 6124) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00B\00R\00A\00N\00C\00H\00_\00L\00T\00_\00U\00\00\00\00\00\00\00")
 (data $123 (i32.const 6172) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00B\00R\00A\00N\00C\00H\00_\00L\00T\00_\00S\00\00\00\00\00\00\00")
 (data $124 (i32.const 6220) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00B\00R\00A\00N\00C\00H\00_\00G\00E\00_\00U\00\00\00\00\00\00\00")
 (data $125 (i32.const 6268) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00B\00R\00A\00N\00C\00H\00_\00G\00E\00_\00S\00\00\00\00\00\00\00")
 (data $126 (i32.const 6316) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00L\00O\00A\00D\00_\00I\00M\00M\00_\00J\00U\00M\00P\00_\00I\00N\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data $127 (i32.const 6380) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00A\00D\00D\00_\003\002\00")
 (data $128 (i32.const 6412) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00S\00U\00B\00_\003\002\00")
 (data $129 (i32.const 6444) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00M\00U\00L\00_\003\002\00")
 (data $130 (i32.const 6476) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00D\00I\00V\00_\00U\00_\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $131 (i32.const 6524) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00D\00I\00V\00_\00S\00_\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $132 (i32.const 6572) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00E\00M\00_\00U\00_\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $133 (i32.const 6620) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00E\00M\00_\00S\00_\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $134 (i32.const 6668) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00H\00L\00O\00_\00L\00_\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $135 (i32.const 6716) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00H\00L\00O\00_\00R\00_\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $136 (i32.const 6764) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00H\00A\00R\00_\00R\00_\003\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $137 (i32.const 6812) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00A\00D\00D\00_\006\004\00")
 (data $138 (i32.const 6844) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00S\00U\00B\00_\006\004\00")
 (data $139 (i32.const 6876) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00M\00U\00L\00_\006\004\00")
 (data $140 (i32.const 6908) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00D\00I\00V\00_\00U\00_\006\004\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $141 (i32.const 6956) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00D\00I\00V\00_\00S\00_\006\004\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $142 (i32.const 7004) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00E\00M\00_\00U\00_\006\004\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $143 (i32.const 7052) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00E\00M\00_\00S\00_\006\004\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $144 (i32.const 7100) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00H\00L\00O\00_\00L\00_\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $145 (i32.const 7148) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00H\00L\00O\00_\00R\00_\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $146 (i32.const 7196) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00H\00A\00R\00_\00R\00_\006\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $147 (i32.const 7244) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00A\00N\00D\00\00\00\00\00\00\00")
 (data $148 (i32.const 7276) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00X\00O\00R\00\00\00\00\00\00\00")
 (data $149 (i32.const 7308) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00O\00R\00\00\00\00\00\00\00\00\00")
 (data $150 (i32.const 7340) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00M\00U\00L\00_\00U\00P\00P\00E\00R\00_\00S\00_\00S\00\00\00")
 (data $151 (i32.const 7388) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00M\00U\00L\00_\00U\00P\00P\00E\00R\00_\00U\00_\00U\00\00\00")
 (data $152 (i32.const 7436) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00M\00U\00L\00_\00U\00P\00P\00E\00R\00_\00S\00_\00U\00\00\00")
 (data $153 (i32.const 7484) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00S\00E\00T\00_\00L\00T\00_\00U\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $154 (i32.const 7532) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00S\00E\00T\00_\00L\00T\00_\00S\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $155 (i32.const 7580) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00C\00M\00O\00V\00_\00I\00Z\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $156 (i32.const 7628) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00C\00M\00O\00V\00_\00N\00Z\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $157 (i32.const 7676) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00O\00T\00_\00L\00_\006\004\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $158 (i32.const 7724) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00O\00T\00_\00L\00_\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $159 (i32.const 7772) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00O\00T\00_\00R\00_\006\004\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $160 (i32.const 7820) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00R\00O\00T\00_\00R\00_\003\002\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $161 (i32.const 7868) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00A\00N\00D\00_\00I\00N\00V\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $162 (i32.const 7916) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00O\00R\00_\00I\00N\00V\00")
 (data $163 (i32.const 7948) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00X\00N\00O\00R\00\00\00\00\00")
 (data $164 (i32.const 7980) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00M\00A\00X\00\00\00\00\00\00\00")
 (data $165 (i32.const 8012) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00M\00A\00X\00_\00U\00\00\00")
 (data $166 (i32.const 8044) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\06\00\00\00M\00I\00N\00\00\00\00\00\00\00")
 (data $167 (i32.const 8076) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00M\00I\00N\00_\00U\00\00\00")
 (data $168 (i32.const 8108) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data $169 (i32.const 8156) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data $170 (i32.const 8204) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data $171 (i32.const 8268) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00")
 (data $172 (i32.const 8332) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data $173 (i32.const 8364) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data $174 (i32.const 8396) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data $175 (i32.const 8428) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data $176 (i32.const 8460) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data $177 (i32.const 8492) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data $178 (i32.const 8524) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data $179 (i32.const 8556) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data $180 (i32.const 8588) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data $181 (i32.const 8620) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data $182 (i32.const 8652) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data $183 (i32.const 8684) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data $184 (i32.const 8716) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data $185 (i32.const 8748) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data $186 (i32.const 8780) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data $187 (i32.const 8812) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data $188 (i32.const 8844) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data $189 (i32.const 8876) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data $190 (i32.const 8908) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data $191 (i32.const 8940) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data $192 (i32.const 8972) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data $193 (i32.const 9004) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data $194 (i32.const 9036) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data $195 (i32.const 9068) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data $196 (i32.const 9100) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data $197 (i32.const 9132) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data $198 (i32.const 9164) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data $199 (i32.const 9196) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data $200 (i32.const 9228) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data $201 (i32.const 9260) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data $202 (i32.const 9292) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data $203 (i32.const 9324) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data $204 (i32.const 9356) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data $205 (i32.const 9420) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data $206 (i32.const 9468) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $207 (i32.const 9596) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00e\00m\00o\00r\00y\00-\00p\00a\00g\00e\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $208 (i32.const 9676) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data $209 (i32.const 9708) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data $210 (i32.const 9740) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data $211 (i32.const 9772) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data $212 (i32.const 9804) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data $213 (i32.const 9836) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data $214 (i32.const 9868) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data $215 (i32.const 9900) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data $216 (i32.const 9932) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data $217 (i32.const 9964) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data $218 (i32.const 9996) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data $219 (i32.const 10028) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data $220 (i32.const 10060) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data $221 (i32.const 10092) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data $222 (i32.const 10124) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data $223 (i32.const 10156) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data $224 (i32.const 10188) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data $225 (i32.const 10220) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00?\00\00\00\00\00\00\00\00\00\00\00")
 (data $226 (i32.const 10252) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00@\00\00\00\00\00\00\00\00\00\00\00")
 (data $227 (i32.const 10284) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data $228 (i32.const 10316) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00B\00\00\00\00\00\00\00\00\00\00\00")
 (data $229 (i32.const 10348) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data $230 (i32.const 10380) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data $231 (i32.const 10412) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data $232 (i32.const 10444) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00F\00\00\00\00\00\00\00\00\00\00\00")
 (data $233 (i32.const 10476) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00G\00\00\00\00\00\00\00\00\00\00\00")
 (data $234 (i32.const 10508) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00H\00\00\00\00\00\00\00\00\00\00\00")
 (data $235 (i32.const 10540) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00I\00\00\00\00\00\00\00\00\00\00\00")
 (data $236 (i32.const 10572) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00J\00\00\00\00\00\00\00\00\00\00\00")
 (data $237 (i32.const 10604) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00K\00\00\00\00\00\00\00\00\00\00\00")
 (data $238 (i32.const 10636) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data $239 (i32.const 10668) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00M\00\00\00\00\00\00\00\00\00\00\00")
 (data $240 (i32.const 10700) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data $241 (i32.const 10732) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00O\00\00\00\00\00\00\00\00\00\00\00")
 (data $242 (i32.const 10764) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00P\00\00\00\00\00\00\00\00\00\00\00")
 (data $243 (i32.const 10796) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00Q\00\00\00\00\00\00\00\00\00\00\00")
 (data $244 (i32.const 10828) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00R\00\00\00\00\00\00\00\00\00\00\00")
 (data $245 (i32.const 10860) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00S\00\00\00\00\00\00\00\00\00\00\00")
 (data $246 (i32.const 10892) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data $247 (i32.const 10924) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00U\00\00\00\00\00\00\00\00\00\00\00")
 (data $248 (i32.const 10956) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00V\00\00\00\00\00\00\00\00\00\00\00")
 (data $249 (i32.const 10988) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00W\00\00\00\00\00\00\00\00\00\00\00")
 (data $250 (i32.const 11020) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00X\00\00\00\00\00\00\00\00\00\00\00")
 (data $251 (i32.const 11052) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00Y\00\00\00\00\00\00\00\00\00\00\00")
 (data $252 (i32.const 11084) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00Z\00\00\00\00\00\00\00\00\00\00\00")
 (data $253 (i32.const 11116) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00[\00\00\00\00\00\00\00\00\00\00\00")
 (data $254 (i32.const 11148) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\\\00\00\00\00\00\00\00\00\00\00\00")
 (data $255 (i32.const 11180) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data $256 (i32.const 11212) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00^\00\00\00\00\00\00\00\00\00\00\00")
 (data $257 (i32.const 11244) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00_\00\00\00\00\00\00\00\00\00\00\00")
 (data $258 (i32.const 11276) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00`\00\00\00\00\00\00\00\00\00\00\00")
 (data $259 (i32.const 11308) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data $260 (i32.const 11340) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data $261 (i32.const 11372) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00c\00\00\00\00\00\00\00\00\00\00\00")
 (data $262 (i32.const 11404) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data $263 (i32.const 11452) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00W\00a\00r\00n\00i\00n\00g\00:\00 \00R\00u\00n\00 \00o\00u\00t\00 \00o\00f\00 \00p\00a\00g\00e\00s\00!\00 \00A\00l\00l\00o\00c\00a\00t\00i\00n\00g\00.\00")
 (data $264 (i32.const 11548) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data $265 (i32.const 11580) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data $266 (i32.const 11612) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00f\00\00\00\00\00\00\00\00\00\00\00")
 (data $267 (i32.const 11644) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data $268 (i32.const 11676) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data $269 (i32.const 11708) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00i\00\00\00\00\00\00\00\00\00\00\00")
 (data $270 (i32.const 11740) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00j\00\00\00\00\00\00\00\00\00\00\00")
 (data $271 (i32.const 11772) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00k\00\00\00\00\00\00\00\00\00\00\00")
 (data $272 (i32.const 11804) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00l\00\00\00\00\00\00\00\00\00\00\00")
 (data $273 (i32.const 11836) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00m\00\00\00\00\00\00\00\00\00\00\00")
 (data $274 (i32.const 11868) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data $275 (i32.const 11900) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00o\00\00\00\00\00\00\00\00\00\00\00")
 (data $276 (i32.const 11932) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00p\00\00\00\00\00\00\00\00\00\00\00")
 (data $277 (i32.const 11964) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00q\00\00\00\00\00\00\00\00\00\00\00")
 (data $278 (i32.const 11996) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data $279 (i32.const 12028) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data $280 (i32.const 12060) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data $281 (i32.const 12092) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data $282 (i32.const 12124) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00v\00\00\00\00\00\00\00\00\00\00\00")
 (data $283 (i32.const 12156) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00w\00\00\00\00\00\00\00\00\00\00\00")
 (data $284 (i32.const 12188) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00x\00\00\00\00\00\00\00\00\00\00\00")
 (data $285 (i32.const 12220) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data $286 (i32.const 12252) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00z\00\00\00\00\00\00\00\00\00\00\00")
 (data $287 (i32.const 12284) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data $288 (i32.const 12316) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00|\00\00\00\00\00\00\00\00\00\00\00")
 (data $289 (i32.const 12348) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data $290 (i32.const 12380) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00~\00\00\00\00\00\00\00\00\00\00\00")
 (data $291 (i32.const 12412) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00")
 (data $292 (i32.const 12444) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00")
 (data $293 (i32.const 12476) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\81\00\00\00\00\00\00\00\00\00\00\00")
 (data $294 (i32.const 12508) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\82\00\00\00\00\00\00\00\00\00\00\00")
 (data $295 (i32.const 12540) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\83\00\00\00\00\00\00\00\00\00\00\00")
 (data $296 (i32.const 12572) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\84\00\00\00\00\00\00\00\00\00\00\00")
 (data $297 (i32.const 12604) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\85\00\00\00\00\00\00\00\00\00\00\00")
 (data $298 (i32.const 12636) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\86\00\00\00\00\00\00\00\00\00\00\00")
 (data $299 (i32.const 12668) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\87\00\00\00\00\00\00\00\00\00\00\00")
 (data $300 (i32.const 12700) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\88\00\00\00\00\00\00\00\00\00\00\00")
 (data $301 (i32.const 12732) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\89\00\00\00\00\00\00\00\00\00\00\00")
 (data $302 (i32.const 12764) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\8a\00\00\00\00\00\00\00\00\00\00\00")
 (data $303 (i32.const 12796) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\8b\00\00\00\00\00\00\00\00\00\00\00")
 (data $304 (i32.const 12828) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\8c\00\00\00\00\00\00\00\00\00\00\00")
 (data $305 (i32.const 12860) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\8d\00\00\00\00\00\00\00\00\00\00\00")
 (data $306 (i32.const 12892) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\8e\00\00\00\00\00\00\00\00\00\00\00")
 (data $307 (i32.const 12924) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\8f\00\00\00\00\00\00\00\00\00\00\00")
 (data $308 (i32.const 12956) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\90\00\00\00\00\00\00\00\00\00\00\00")
 (data $309 (i32.const 12988) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\91\00\00\00\00\00\00\00\00\00\00\00")
 (data $310 (i32.const 13020) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\92\00\00\00\00\00\00\00\00\00\00\00")
 (data $311 (i32.const 13052) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\93\00\00\00\00\00\00\00\00\00\00\00")
 (data $312 (i32.const 13084) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\94\00\00\00\00\00\00\00\00\00\00\00")
 (data $313 (i32.const 13116) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\95\00\00\00\00\00\00\00\00\00\00\00")
 (data $314 (i32.const 13148) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\96\00\00\00\00\00\00\00\00\00\00\00")
 (data $315 (i32.const 13180) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\97\00\00\00\00\00\00\00\00\00\00\00")
 (data $316 (i32.const 13212) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\98\00\00\00\00\00\00\00\00\00\00\00")
 (data $317 (i32.const 13244) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\99\00\00\00\00\00\00\00\00\00\00\00")
 (data $318 (i32.const 13276) "\ac\03\00\00\00\00\00\00\00\00\00\00\01\00\00\00\9c\03\00\00@,\00\00`,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00\80,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00`$\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00\f01\00\00\102\00\0002\00\00P2\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00\e0#\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00\00$\00\00\80$\00\00\e0%\00\00\00&\00\00 &\00\00@&\00\00`&\00\00\80&\00\00\a0&\00\00p2\00\00\902\00\00\b02\00\00\d02\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00\f02\00\00\103\00\0003\00\00P3\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 $\00\00\e0!\00\00\00\"\00\00 \"\00\00@\"\00\00`\"\00\00\80\"\00\00\a0\"\00\00\c0\"\00\00\e0\"\00\00\00#\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00P-\00\000-\00\00\a0 \00\00\c0 \00\00\e0 \00\00\00!\00\00 !\00\00@!\00\00`!\00\00\80!\00\00\a0!\00\00\c0!\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00p3\00\00\903\00\00\b03\00\00\d03\00\00\c0&\00\00\e0&\00\00\00\'\00\00 \'\00\00@\'\00\00`\'\00\00\80\'\00\00\c0(\00\00\a0\'\00\00\c0\'\00\00\e0\'\00\00\e0(\00\00\f0.\00\00\10/\00\00\b0/\00\00\d0/\00\00\f0/\00\00\00)\00\000/\00\00P/\00\00\100\00\0000\00\00P0\00\00p-\00\00\90-\00\00 )\00\00@)\00\00p0\00\00\900\00\00\b00\00\00`)\00\00\d00\00\00\f00\00\00\101\00\00\f0-\00\00\10.\00\000.\00\00P.\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 #\00\00@#\00\00`#\00\00\80#\00\00\a0#\00\00\c0#\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00@$\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00 ,\00\00\80)\00\00\a0)\00\00\c0)\00\00\e0)\00\00\00*\00\00 *\00\00@*\00\0001\00\00P1\00\00p1\00\00`*\00\00\80*\00\00\a0*\00\00\c0*\00\00\e0*\00\00\00+\00\00 +\00\00\901\00\00\b01\00\00\d01\00\00\00(\00\00 (\00\00@(\00\00@+\00\00`+\00\00\80+\00\00p/\00\00\90/\00\00\b0-\00\00\d0-\00\00p.\00\00\90.\00\00\b0.\00\00\d0.\00\00`(\00\00\80(\00\00\a0(\00\00\a0+\00\00\c0+\00\00\e0+\00\00\00,\00\00")
 (data $319 (i32.const 14220) ",\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\10\00\00\00\f03\00\00\f03\00\00\9c\03\00\00\e7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $320 (i32.const 14268) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00\ff\fe\fc\f8\f0\e0\c0\80\00\00\00\00")
 (data $321 (i32.const 14300) ",\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\10\00\00\00\d07\00\00\d07\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $322 (i32.const 14348) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\9a\00\00\00\00\00\00\00\00\00\00\00")
 (data $323 (i32.const 14380) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00<\00s\00e\00e\00m\00s\00 \00t\00h\00a\00t\00 \00t\00h\00e\00r\00e\00 \00i\00s\00 \00n\00o\00 \00c\00o\00d\00e\00>\00\00\00")
 (data $324 (i32.const 14460) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $325 (i32.const 14492) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00R\00\00\00W\00e\00 \00s\00h\00o\00u\00l\00d\00 \00i\00t\00e\00r\00a\00t\00e\00 \00o\00n\00l\00y\00 \00o\00v\00e\00r\00 \00i\00n\00s\00t\00r\00u\00c\00t\00i\00o\00n\00s\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data $326 (i32.const 14604) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\000\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00p\00i\00-\00i\00n\00t\00e\00r\00n\00a\00l\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $327 (i32.const 14684) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $328 (i32.const 14812) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data $329 (i32.const 14844) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data $330 (i32.const 14972) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data $331 (i32.const 15036) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data $332 (i32.const
 (data $333 (i32.const 15468) "\1c\04\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $334 (i32.const 16524) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data $335 (i32.const 16620) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00:\00 \00\00\00\00\00\00\00\00\00")
 (data $336 (i32.const 16652) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data $337 (i32.const 16684) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data $338 (i32.const 16716) "\1c\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\0c\00\00\00 A\00\00\00\00\00\00@A\00\00")
 (data $339 (i32.const 16748) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data $340 (i32.const 16780) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00,\00 \00\00\00\00\00\00\00\00\00")
 (data $341 (i32.const 16812) "\1c\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\0c\00\00\00\80A\00\00\00\00\00\00\a0A\00\00")
 (data $342 (i32.const 16844) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\004\00\00\00U\00n\00h\00a\00n\00d\00l\00e\00d\00 \00a\00r\00g\00u\00m\00e\00n\00t\00s\00 \00k\00i\00n\00d\00:\00 \00\00\00\00\00\00\00\00\00")
 (data $343 (i32.const 16924) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00r\00o\00g\00r\00a\00m\00-\00b\00u\00i\00l\00d\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data $344 (i32.const 17004) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $345 (i32.const 17036) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00d\00a\00t\00a\00v\00i\00e\00w\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $346 (i32.const 17100) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\006\00\00\00U\00n\00h\00a\00n\00d\00l\00e\00d\00 \00n\00u\00m\00b\00e\00r\00 \00e\00n\00c\00o\00d\00i\00n\00g\00:\00 \00\00\00\00\00\00\00")
 (data $347 (i32.const 17180) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\"\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00d\00e\00c\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data $348 (i32.const 17244) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00:\00\00\00N\00o\00t\00 \00e\00n\00o\00u\00g\00h\00 \00b\00y\00t\00e\00s\00 \00l\00e\00f\00t\00.\00 \00N\00e\00e\00d\00:\00 \00\00\00")
 (data $349 (i32.const 17324) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00,\00 \00l\00e\00f\00t\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $350 (i32.const 17372) ",\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\10\00\00\00pC\00\00\00\00\00\00\c0C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $351 (i32.const 17420) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00T\00\00\00N\00o\00t\00 \00e\00n\00o\00u\00g\00h\00 \00b\00y\00t\00e\00s\00 \00t\00o\00 \00d\00e\00c\00o\00d\00e\00 \00\'\00v\00a\00r\00U\003\002\00\'\00.\00 \00N\00e\00e\00d\00 \00\00\00\00\00\00\00\00\00")
 (data $352 (i32.const 17532) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00,\00 \00g\00o\00t\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $353 (i32.const 17580) ",\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\10\00\00\00 D\00\00\00\00\00\00\90D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $354 (i32.const 17628) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00A\00r\00g\00u\00m\00e\00n\00t\00s\00 \00l\00e\00n\00g\00t\00h\00 \00i\00s\00 \00t\00o\00o\00 \00b\00i\00g\00.\00 \00G\00o\00t\00:\00 \00\00\00\00\00\00\00\00\00")
 (data $355 (i32.const 17724) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0e\00\00\00,\00 \00m\00a\00x\00:\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $356 (i32.const 17772) ",\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\10\00\00\00\f0D\00\00\00\00\00\00PE\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $357 (i32.const 17820) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1e\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00s\00p\00i\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $358 (i32.const 17884) "|\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00f\00\00\00E\00x\00p\00e\00c\00t\00i\00n\00g\00 \00t\00o\00 \00u\00s\00e\00 \00a\00l\00l\00 \00b\00y\00t\00e\00s\00 \00f\00r\00o\00m\00 \00t\00h\00e\00 \00d\00e\00c\00o\00d\00e\00r\00.\00 \00L\00e\00f\00t\00:\00 \00\00\00\00\00\00\00")
 (data $359 (i32.const 18012) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $360 (i32.const 18044) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00L\00\00\00A\00t\00t\00e\00m\00p\00t\00i\00n\00g\00 \00t\00o\00 \00a\00l\00l\00o\00c\00a\00t\00e\00 \00r\00e\00s\00e\00r\00v\00e\00d\00 \00p\00a\00g\00e\00:\00 \00")
 (data $361 (i32.const 18140) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00$\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00e\00m\00o\00r\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data $362 (i32.const 18204) "l\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00V\00\00\00s\00b\00r\00k\00 \00w\00i\00t\00h\00i\00n\00 \00r\00e\00s\00e\00r\00v\00e\00d\00 \00m\00e\00m\00o\00r\00y\00 \00i\00s\00 \00n\00o\00t\00 \00a\00l\00l\00o\00w\00e\00d\00!\00\00\00\00\00\00\00")
 (data $363 (i32.const 18316) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\000\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00p\00i\00-\00d\00e\00b\00u\00g\00g\00e\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $364 (i32.const 18396) "\\\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00D\00\00\00M\00i\00s\00m\00a\00t\00c\00h\00i\00n\00g\00 \00 \00r\00e\00g\00i\00s\00t\00e\00r\00s\00 \00s\00i\00z\00e\00,\00 \00g\00o\00t\00:\00 \00\00\00\00\00\00\00\00\00")
 (data $365 (i32.const 18492) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00,\00 \00e\00x\00p\00e\00c\00t\00e\00d\00:\00 \00\00\00\00\00")
 (data $366 (i32.const 18540) ",\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\10\00\00\00\f0G\00\00\00\00\00\00PH\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $367 (i32.const 18588) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $368 (i32.const 18620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $369 (i32.const 18652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $370 (i32.const 18684) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00r\00e\00s\00u\00l\00t\00")
 (data $371 (i32.const 18732) "L\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00.\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00p\00r\00e\00t\00e\00r\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $372 (i32.const 18812) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $373 (i32.const 18844) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $374 (i32.const 18876) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $375 (i32.const 18908) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $376 (i32.const 18940) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00k\00i\00n\00d\00:\00 \00")
 (data $377 (i32.const 18988) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00p\00i\00-\00u\00t\00i\00l\00s\00.\00t\00s\00\00\00")
 (data $378 (i32.const 19052) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00g\00a\00s\00-\00c\00o\00s\00t\00s\00.\00t\00s\00\00\00")
 (data $379 (i32.const 19116) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $380 (i32.const 19148) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $381 (i32.const 19180) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $382 (i32.const 19212) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $383 (i32.const 19244) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\16\00\00\00M\00e\00t\00a\00d\00a\00t\00a\00:\00 \00\n\00\00\00\00\00\00\00")
 (data $384 (i32.const 19292) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\000\00x\00\00\00\00\00\00\00\00\00")
 (data $385 (i32.const 19324) "\1c\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\08\00\00\00\9b\00\00\00\00\00\00\00\00\00\00\00")
 (data $386 (i32.const 19356) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\n\00\n\00\00\00\00\00\00\00\00\00")
 (data $387 (i32.const 19388) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\18\00\00\00R\00E\00G\00I\00S\00T\00E\00R\00S\00 \00=\00 \00\00\00\00\00")
 (data $388 (i32.const 19436) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\10\00\00\00 \00(\00f\00i\00n\00a\00l\00)\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $389 (i32.const 19484) "\1c\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\0c\00\00\00\d0K\00\00\00\00\00\00\00L\00\00")
 (data $390 (i32.const 19516) "\1c\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\0c\00\00\00\d0K\00\00\00\00\00\00\00L\00\00")
 (data $391 (i32.const 19548) "\1c\00\00\00\00\00\00\00\00\00\00\00>\00\00\00\08\00\00\00\9c\00\00\00\00\00\00\00\00\00\00\00")
 (data $392 (i32.const 19580) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00,\00\00\00F\00i\00n\00i\00s\00h\00e\00d\00 \00w\00i\00t\00h\00 \00s\00t\00a\00t\00u\00s\00:\00 \00")
 (data $393 (i32.const 19644) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00P\00C\00 \00=\00 \00\00\00")
 (data $394 (i32.const 19676) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00G\00A\00S\00 \00=\00 \00")
 (data $395 (i32.const 19708) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\12\00\00\00S\00T\00A\00T\00U\00S\00 \00=\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data $396 (i32.const 19756) "\1c\00\00\00\00\00\00\00\00\00\00\00>\00\00\00\08\00\00\00\9d\00\00\00\00\00\00\00\00\00\00\00")
 (data $397 (i32.const 19788) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1c\00\00\00I\00N\00S\00T\00R\00U\00C\00T\00I\00O\00N\00 \00=\00 \00")
 (data $398 (i32.const 19836) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00 \00(\00\00\00\00\00\00\00\00\00")
 (data $399 (i32.const 19868) ",\00\00\00\03\00\00\00\00\00\00\00%\00\00\00\14\00\00\00`M\00\00\00\00\00\00\90M\00\00\00\00\00\00@A\00\00\00\00\00\00\00\00\00\00")
 (data $400 (i32.const 19916) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00&\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00r\00o\00g\00r\00a\00m\00.\00t\00s\00\00\00\00\00\00\00")
 (data $401 (i32.const 19980) ",\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\1a\00\00\00A\00R\00G\00U\00M\00E\00N\00T\00S\00:\00\n\00 \00 \00\00\00")
 (data $402 (i32.const 20028) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\0c\00\00\00)\00 \00=\00 \000\00x\00")
 (data $403 (i32.const 20060) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\n\00\00\00,\00 \00\n\00 \00 \00\00\00")
 (data $404 (i32.const 20092) "\1c\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\08\00\00\00,\00\n\00 \00 \00\00\00\00\00")
 (data $405 (i32.const 20124) "|\00\00\00\03\00\00\00\00\00\00\00%\00\00\00`\00\00\00 N\00\00\00\00\00\00\90M\00\00\00\00\00\00PN\00\00\00\00\00\00pN\00\00\00\00\00\00\90M\00\00\00\00\00\00PN\00\00\00\00\00\00\90N\00\00\00\00\00\00\90M\00\00\00\00\00\00PN\00\00\00\00\00\00\90N\00\00\00\00\00\00\90M\00\00\00\00\00\00PN\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $406 (i32.const 20252) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $407 (i32.const 20284) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $408 (i32.const 20316) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data $409 (i32.const 20348) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d\00\00\00")
 (data $410 (i32.const 20412) "<\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d\00\00\00\00\00")
 (data $411 (i32.const 20480) "@\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\02\t\00\00A\00\00\00 \00\00\00\02A\00\00\00\00\00\00 \00\00\00\02\01\00\00 \00\00\00\00\00\00\00\00\00\00\00$\02\00\00\00\00\00\00\00\00\00\00\02A\00\00\10A\02\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00d\00\00\00\00\00\00\00\00\00\00\00\02A\00\00B\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00$\01\00\00\00\00\00\00\00\00\00\00$\t\00\00 \00\00\00\04A\00\00\02\01\00\00d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00 \00\00\00\02A\00\00 \00\00\00\02A\00\00\00\00\00\00\02A\00\00 \00\00\00 \00\00\00 \00\00\00\02A\00\00\02\02\00\00\10A\02\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00")
 (table $0 158 158 funcref)
 (elem $0 (i32.const 1) $start:assembly/arguments~anonymous|0 $start:assembly/arguments~anonymous|1 $start:assembly/arguments~anonymous|2 $start:assembly/arguments~anonymous|3 $start:assembly/arguments~anonymous|4 $start:assembly/arguments~anonymous|5 $start:assembly/arguments~anonymous|6 $start:assembly/arguments~anonymous|7 $start:assembly/arguments~anonymous|8 $start:assembly/arguments~anonymous|9 $start:assembly/arguments~anonymous|10 $start:assembly/arguments~anonymous|11 $start:assembly/arguments~anonymous|12 $start:assembly/instructions/bit~anonymous|0 $start:assembly/instructions/bit~anonymous|1 $start:assembly/instructions/bit~anonymous|2 $start:assembly/instructions/bit~anonymous|3 $start:assembly/instructions/bit~anonymous|4 $start:assembly/instructions/bit~anonymous|5 $start:assembly/instructions/bit~anonymous|6 $start:assembly/instructions/bit~anonymous|7 $start:assembly/instructions/bit~anonymous|8 $start:assembly/instructions/bit~anonymous|9 $start:assembly/instructions/branch~anonymous|0 $start:assembly/instructions/branch~anonymous|1 $start:assembly/instructions/branch~anonymous|2 $start:assembly/instructions/branch~anonymous|3 $start:assembly/instructions/branch~anonymous|4 $start:assembly/instructions/branch~anonymous|5 $start:assembly/instructions/branch~anonymous|6 $start:assembly/instructions/branch~anonymous|7 $start:assembly/instructions/branch~anonymous|8 $start:assembly/instructions/branch~anonymous|9 $start:assembly/instructions/branch~anonymous|10 $start:assembly/instructions/branch~anonymous|11 $start:assembly/instructions/branch~anonymous|12 $start:assembly/instructions/branch~anonymous|13 $start:assembly/instructions/branch~anonymous|14 $start:assembly/instructions/branch~anonymous|15 $start:assembly/instructions/jump~anonymous|0 $start:assembly/instructions/jump~anonymous|1 $start:assembly/instructions/jump~anonymous|2 $start:assembly/instructions/jump~anonymous|3 $start:assembly/instructions/load~anonymous|0 $start:assembly/instructions/load~anonymous|1 $start:assembly/instructions/load~anonymous|2 $start:assembly/instructions/load~anonymous|3 $start:assembly/instructions/load~anonymous|4 $start:assembly/instructions/load~anonymous|5 $start:assembly/instructions/load~anonymous|6 $start:assembly/instructions/load~anonymous|7 $start:assembly/instructions/load~anonymous|8 $start:assembly/instructions/load~anonymous|9 $start:assembly/instructions/load~anonymous|10 $start:assembly/instructions/load~anonymous|11 $start:assembly/instructions/load~anonymous|12 $start:assembly/instructions/load~anonymous|13 $start:assembly/instructions/load~anonymous|14 $start:assembly/instructions/load~anonymous|15 $start:assembly/instructions/logic~anonymous|0 $start:assembly/instructions/logic~anonymous|1 $start:assembly/instructions/logic~anonymous|2 $start:assembly/instructions/logic~anonymous|3 $start:assembly/instructions/logic~anonymous|4 $start:assembly/instructions/logic~anonymous|5 $start:assembly/instructions/logic~anonymous|6 $start:assembly/instructions/logic~anonymous|7 $start:assembly/instructions/logic~anonymous|8 $start:assembly/instructions/math~anonymous|0 $start:assembly/instructions/math~anonymous|1 $start:assembly/instructions/math~anonymous|2 $start:assembly/instructions/math~anonymous|3 $start:assembly/instructions/math~anonymous|4 $start:assembly/instructions/math~anonymous|5 $start:assembly/instructions/math~anonymous|6 $start:assembly/instructions/math~anonymous|7 $start:assembly/instructions/math~anonymous|8 $start:assembly/instructions/math~anonymous|9 $start:assembly/instructions/math~anonymous|10 $start:assembly/instructions/math~anonymous|11 $start:assembly/instructions/math~anonymous|12 $start:assembly/instructions/math~anonymous|13 $start:assembly/instructions/math~anonymous|14 $start:assembly/instructions/math~anonymous|15 $start:assembly/instructions/math~anonymous|16 $start:assembly/instructions/math~anonymous|17 $start:assembly/instructions/math~anonymous|18 $start:assembly/instructions/math~anonymous|19 $start:assembly/instructions/math~anonymous|20 $start:assembly/instructions/math~anonymous|21 $start:assembly/instructions/math~anonymous|22 $start:assembly/instructions/math~anonymous|23 $start:assembly/instructions/math~anonymous|24 $start:assembly/instructions/math~anonymous|25 $start:assembly/instructions/math~anonymous|26 $start:assembly/instructions/misc~anonymous|0 $start:assembly/instructions/misc~anonymous|1 $start:assembly/instructions/misc~anonymous|2 $start:assembly/instructions/misc~anonymous|3 $start:assembly/instructions/misc~anonymous|4 $start:assembly/instructions/mov~anonymous|0 $start:assembly/instructions/mov~anonymous|1 $start:assembly/instructions/mov~anonymous|2 $start:assembly/instructions/mov~anonymous|3 $start:assembly/instructions/mov~anonymous|4 $start:assembly/instructions/rot~anonymous|0 $start:assembly/instructions/rot~anonymous|1 $start:assembly/instructions/rot~anonymous|2 $start:assembly/instructions/rot~anonymous|3 $start:assembly/instructions/rot~anonymous|4 $start:assembly/instructions/rot~anonymous|5 $start:assembly/instructions/rot~anonymous|6 $start:assembly/instructions/rot~anonymous|7 $start:assembly/instructions/set~anonymous|0 $start:assembly/instructions/set~anonymous|1 $start:assembly/instructions/set~anonymous|2 $start:assembly/instructions/set~anonymous|3 $start:assembly/instructions/set~anonymous|4 $start:assembly/instructions/set~anonymous|5 $start:assembly/instructions/shift~anonymous|0 $start:assembly/instructions/shift~anonymous|1 $start:assembly/instructions/shift~anonymous|2 $start:assembly/instructions/shift~anonymous|3 $start:assembly/instructions/shift~anonymous|4 $start:assembly/instructions/shift~anonymous|5 $start:assembly/instructions/shift~anonymous|6 $start:assembly/instructions/shift~anonymous|7 $start:assembly/instructions/shift~anonymous|8 $start:assembly/instructions/shift~anonymous|9 $start:assembly/instructions/shift~anonymous|10 $start:assembly/instructions/shift~anonymous|11 $start:assembly/instructions/shift~anonymous|12 $start:assembly/instructions/shift~anonymous|13 $start:assembly/instructions/shift~anonymous|14 $start:assembly/instructions/shift~anonymous|15 $start:assembly/instructions/shift~anonymous|16 $start:assembly/instructions/shift~anonymous|17 $start:assembly/instructions/store~anonymous|0 $start:assembly/instructions/store~anonymous|1 $start:assembly/instructions/store~anonymous|2 $start:assembly/instructions/store~anonymous|3 $start:assembly/instructions/store~anonymous|4 $start:assembly/instructions/store~anonymous|5 $start:assembly/instructions/store~anonymous|6 $start:assembly/instructions/store~anonymous|7 $start:assembly/instructions/store~anonymous|8 $start:assembly/instructions/store~anonymous|9 $start:assembly/instructions/store~anonymous|10 $start:assembly/instructions/store~anonymous|11 $start:assembly/instructions/store~anonymous|12 $start:assembly/instructions/store~anonymous|13 $start:assembly/instructions/store~anonymous|14 $start:assembly/instructions/store~anonymous|15 $start:assembly/codec~anonymous|0 $assembly/api-utils/disassemble~anonymous|0 $assembly/api-internal/executeProgram~anonymous|0 $assembly/api-internal/executeProgram~anonymous|1)
 (export "nextStep" (func $assembly/api-debugger/nextStep))
 (export "nSteps" (func $assembly/api-debugger/nSteps))
 (export "getProgramCounter" (func $assembly/api-debugger/getProgramCounter))
 (export "setNextProgramCounter" (func $assembly/api-debugger/setNextProgramCounter))
 (export "getStatus" (func $assembly/api-debugger/getStatus))
 (export "getExitArg" (func $assembly/api-debugger/getExitArg))
 (export "getGasLeft" (func $assembly/api-debugger/getGasLeft))
 (export "setGasLeft" (func $assembly/api-debugger/setGasLeft))
 (export "getRegisters" (func $assembly/api-debugger/getRegisters))
 (export "getPageDump" (func $assembly/api-debugger/getPageDump))
 (export "InputKind.Generic" (global $assembly/api-utils/InputKind.Generic))
 (export "InputKind.SPI" (global $assembly/api-utils/InputKind.SPI))
 (export "HasMetadata.Yes" (global $assembly/api-utils/HasMetadata.Yes))
 (export "HasMetadata.No" (global $assembly/api-utils/HasMetadata.No))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "__setArgumentsLength" (func $~setArgumentsLength))
 (export "getAssembly" (func $export:assembly/api-internal/getAssembly))
 (export "wrapAsProgram" (func $export:assembly/program-build/wrapAsProgram))
 (export "resetJAM" (func $export:assembly/api-debugger/resetJAM@varargs))
 (export "resetGeneric" (func $export:assembly/api-debugger/resetGeneric@varargs))
 (export "resetGenericWithMemory" (func $export:assembly/api-debugger/resetGenericWithMemory@varargs))
 (export "setRegisters" (func $export:assembly/api-debugger/setRegisters))
 (export "setMemory" (func $export:assembly/api-debugger/setMemory))
 (export "getGasCosts" (func $export:assembly/api-utils/getGasCosts))
 (export "disassemble" (func $export:assembly/api-utils/disassemble))
 (export "prepareProgram" (func $export:assembly/api-utils/prepareProgram))
 (export "runProgram" (func $export:assembly/api-utils/runProgram@varargs))
 (start $~start)
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $this i32) (param $nextWithColor i32)
  local.get $this
  local.get $nextWithColor
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
  return
 )
 (func $~lib/rt/itcms/Object#get:nextWithColor (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/rt/itcms/Object#get:next (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  return
 )
 (func $~lib/rt/itcms/Object#get:color (param $this i32) (result i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  return
 )
 (func $~lib/rt/itcms/visitRoots (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 352
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/rt/itcms/Object#set:next (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  call $~lib/rt/itcms/Object#get:nextWithColor
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 352
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $this
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   i32.const 0
   i32.const 352
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/itcms/Object#get:rtId (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/shared/typeinfo/Typeinfo#get:flags (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/__typeinfo (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load
  i32.gt_u
  if
   i32.const 480
   i32.const 544
   i32.const 21
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 4
  i32.mul
  i32.add
  call $~lib/shared/typeinfo/Typeinfo#get:flags
  return
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:rtId
  local.set $rtId
  local.get $rtId
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
  return
 )
 (func $~lib/rt/itcms/Object#linkTo (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  call $~lib/rt/itcms/Object#get:prev
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $this i32)
  (local $1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   call $~lib/rt/itcms/Object#get:prev
   local.tee $1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 352
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $cookie i32)
  (local $ptr i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   if
    local.get $ptr
    i32.load
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/common/BLOCK#get:mmInfo (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/itcms/Object#get:size (param $this i32) (result i32)
  i32.const 4
  local.get $this
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  return
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $this i32) (param $flMap i32)
  local.get $this
  local.get $flMap
  i32.store
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $this i32) (param $mmInfo i32)
  local.get $this
  local.get $mmInfo
  i32.store
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $this i32) (param $prev i32)
  local.get $this
  local.get $prev
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $this i32) (param $next i32)
  local.get $this
  local.get $next
  i32.store offset=8
 )
 (func $~lib/rt/tlsf/Block#get:prev (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/rt/tlsf/Block#get:next (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/rt/tlsf/Root#get:flMap (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/tlsf/removeBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $6 i32)
  (local $7 i32)
  (local $boundedSize i32)
  (local $prev i32)
  (local $next i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $root|14 i32)
  (local $fl|15 i32)
  (local $sl|16 i32)
  (local $head i32)
  (local $root|18 i32)
  (local $fl|19 i32)
  (local $slMap i32)
  (local $root|21 i32)
  (local $fl|22 i32)
  (local $slMap|23 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/tlsf/Block#get:prev
  local.set $prev
  local.get $block
  call $~lib/rt/tlsf/Block#get:next
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  block $~lib/rt/tlsf/GETHEAD|inlined.0 (result i32)
   local.get $root
   local.set $root|11
   local.get $fl
   local.set $fl|12
   local.get $sl
   local.set $sl|13
   local.get $root|11
   local.get $fl|12
   i32.const 4
   i32.shl
   local.get $sl|13
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.0
  end
  i32.eq
  if
   local.get $root
   local.set $root|14
   local.get $fl
   local.set $fl|15
   local.get $sl
   local.set $sl|16
   local.get $next
   local.set $head
   local.get $root|14
   local.get $fl|15
   i32.const 4
   i32.shl
   local.get $sl|16
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $head
   i32.store offset=96
   local.get $next
   i32.eqz
   if
    block $~lib/rt/tlsf/GETSL|inlined.0 (result i32)
     local.get $root
     local.set $root|18
     local.get $fl
     local.set $fl|19
     local.get $root|18
     local.get $fl|19
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     br $~lib/rt/tlsf/GETSL|inlined.0
    end
    local.set $slMap
    local.get $root
    local.set $root|21
    local.get $fl
    local.set $fl|22
    local.get $slMap
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $slMap
    local.set $slMap|23
    local.get $root|21
    local.get $fl|22
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap|23
    i32.store offset=4
    local.get $slMap
    i32.eqz
    if
     local.get $root
     local.get $root
     call $~lib/rt/tlsf/Root#get:flMap
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $block|3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $block|6 i32)
  (local $block|7 i32)
  (local $left i32)
  (local $leftInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $13 i32)
  (local $14 i32)
  (local $boundedSize i32)
  (local $root|16 i32)
  (local $fl|17 i32)
  (local $sl|18 i32)
  (local $head i32)
  (local $root|20 i32)
  (local $fl|21 i32)
  (local $sl|22 i32)
  (local $head|23 i32)
  (local $root|24 i32)
  (local $fl|25 i32)
  (local $root|26 i32)
  (local $fl|27 i32)
  (local $slMap i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETRIGHT|inlined.0 (result i32)
   local.get $block
   local.set $block|3
   local.get $block|3
   i32.const 4
   i32.add
   local.get $block|3
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   br $~lib/rt/tlsf/GETRIGHT|inlined.0
  end
  local.set $right
  local.get $right
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.1 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.1
   end
   local.set $right
   local.get $right
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   block $~lib/rt/tlsf/GETFREELEFT|inlined.0 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.sub
    i32.load
    br $~lib/rt/tlsf/GETFREELEFT|inlined.0
   end
   local.set $left
   local.get $left
   call $~lib/rt/common/BLOCK#get:mmInfo
   local.set $leftInfo
   i32.const 1
   drop
   local.get $leftInfo
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 624
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $root
   local.get $left
   call $~lib/rt/tlsf/removeBlock
   local.get $left
   local.set $block
   local.get $block
   local.get $leftInfo
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $13
   i32.const 1073741820
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETHEAD|inlined.1 (result i32)
   local.get $root
   local.set $root|16
   local.get $fl
   local.set $fl|17
   local.get $sl
   local.set $sl|18
   local.get $root|16
   local.get $fl|17
   i32.const 4
   i32.shl
   local.get $sl|18
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
   br $~lib/rt/tlsf/GETHEAD|inlined.1
  end
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $root|20
  local.get $fl
  local.set $fl|21
  local.get $sl
  local.set $sl|22
  local.get $block
  local.set $head|23
  local.get $root|20
  local.get $fl|21
  i32.const 4
  i32.shl
  local.get $sl|22
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $head|23
  i32.store offset=96
  local.get $root
  local.get $root
  call $~lib/rt/tlsf/Root#get:flMap
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|26
  local.get $fl
  local.set $fl|27
  block $~lib/rt/tlsf/GETSL|inlined.1 (result i32)
   local.get $root
   local.set $root|24
   local.get $fl
   local.set $fl|25
   local.get $root|24
   local.get $fl|25
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=4
   br $~lib/rt/tlsf/GETSL|inlined.1
  end
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $slMap
  local.get $root|26
  local.get $fl|27
  i32.const 2
  i32.shl
  i32.add
  local.get $slMap
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $root i32) (param $start i32) (param $endU64 i64) (result i32)
  (local $end i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $root|10 i32)
  (local $tail|11 i32)
  local.get $endU64
  i32.wrap_i64
  local.set $end
  i32.const 1
  drop
  local.get $start
  i64.extend_i32_u
  local.get $endU64
  i64.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 382
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  block $~lib/rt/tlsf/GETTAIL|inlined.0 (result i32)
   local.get $root
   local.set $root|4
   local.get $root|4
   i32.load offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.0
  end
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 624
    i32.const 389
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    call $~lib/rt/common/BLOCK#get:mmInfo
    local.set $tailInfo
   else
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 624
    i32.const 402
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $root|10
  local.get $tail
  local.set $tail|11
  local.get $root|10
  local.get $tail|11
  i32.store offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
  return
 )
 (func $~lib/rt/tlsf/initialize
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $fl i32)
  (local $root|7 i32)
  (local $fl|8 i32)
  (local $slMap i32)
  (local $sl i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $head i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|4
  i32.const 0
  local.set $tail
  local.get $root|4
  local.get $tail
  i32.store offset=1568
  i32.const 0
  local.set $fl
  loop $for-loop|0
   local.get $fl
   i32.const 23
   i32.lt_u
   if
    local.get $root
    local.set $root|7
    local.get $fl
    local.set $fl|8
    i32.const 0
    local.set $slMap
    local.get $root|7
    local.get $fl|8
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap
    i32.store offset=4
    i32.const 0
    local.set $sl
    loop $for-loop|1
     local.get $sl
     i32.const 16
     i32.lt_u
     if
      local.get $root
      local.set $root|11
      local.get $fl
      local.set $fl|12
      local.get $sl
      local.set $sl|13
      i32.const 0
      local.set $head
      local.get $root|11
      local.get $fl|12
      i32.const 4
      i32.shl
      local.get $sl|13
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $head
      i32.store offset=96
      local.get $sl
      i32.const 1
      i32.add
      local.set $sl
      br $for-loop|1
     end
    end
    local.get $fl
    i32.const 1
    i32.add
    local.set $fl
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size
  i64.extend_i32_s
  i64.const 16
  i64.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 562
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/freeBlock (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $obj i32)
  (local $1 i32)
  (local $black i32)
  (local $from i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $black
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $black
      i32.ne
      if
       local.get $obj
       local.get $black
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $black
       i32.ne
       if
        local.get $obj
        local.get $black
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $from
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $from
     global.set $~lib/rt/itcms/toSpace
     local.get $black
     global.set $~lib/rt/itcms/white
     local.get $from
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 352
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
  return
 )
 (func $~lib/rt/itcms/interrupt
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
  return
 )
 (func $~lib/rt/tlsf/prepareSize (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 288
   i32.const 624
   i32.const 461
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
  return
 )
 (func $~lib/rt/tlsf/roundSize (param $size i32) (result i32)
  local.get $size
  i32.const 536870910
  i32.lt_u
  if (result i32)
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
  else
   local.get $size
  end
  return
 )
 (func $~lib/rt/tlsf/searchBlock (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $requestSize i32)
  (local $root|5 i32)
  (local $fl|6 i32)
  (local $slMap i32)
  (local $head i32)
  (local $flMap i32)
  (local $root|10 i32)
  (local $fl|11 i32)
  (local $root|12 i32)
  (local $fl|13 i32)
  (local $sl|14 i32)
  (local $root|15 i32)
  (local $fl|16 i32)
  (local $sl|17 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   call $~lib/rt/tlsf/roundSize
   local.set $requestSize
   i32.const 4
   i32.const 8
   i32.mul
   i32.const 1
   i32.sub
   local.get $requestSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $requestSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 334
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  block $~lib/rt/tlsf/GETSL|inlined.2 (result i32)
   local.get $root
   local.set $root|5
   local.get $fl
   local.set $fl|6
   local.get $root|5
   local.get $fl|6
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=4
   br $~lib/rt/tlsf/GETSL|inlined.2
  end
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   call $~lib/rt/tlsf/Root#get:flMap
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $flMap
   local.get $flMap
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $flMap
    i32.ctz
    local.set $fl
    block $~lib/rt/tlsf/GETSL|inlined.3 (result i32)
     local.get $root
     local.set $root|10
     local.get $fl
     local.set $fl|11
     local.get $root|10
     local.get $fl|11
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     br $~lib/rt/tlsf/GETSL|inlined.3
    end
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     i32.const 0
     i32.const 624
     i32.const 347
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    block $~lib/rt/tlsf/GETHEAD|inlined.2 (result i32)
     local.get $root
     local.set $root|12
     local.get $fl
     local.set $fl|13
     local.get $slMap
     i32.ctz
     local.set $sl|14
     local.get $root|12
     local.get $fl|13
     i32.const 4
     i32.shl
     local.get $sl|14
     i32.add
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=96
     br $~lib/rt/tlsf/GETHEAD|inlined.2
    end
    local.set $head
   end
  else
   block $~lib/rt/tlsf/GETHEAD|inlined.3 (result i32)
    local.get $root
    local.set $root|15
    local.get $fl
    local.set $fl|16
    local.get $slMap
    i32.ctz
    local.set $sl|17
    local.get $root|15
    local.get $fl|16
    i32.const 4
    i32.shl
    local.get $sl|17
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
    br $~lib/rt/tlsf/GETHEAD|inlined.3
   end
   local.set $head
  end
  local.get $head
  return
 )
 (func $~lib/rt/tlsf/growMemory (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $root|3 i32)
  (local $pagesNeeded i32)
  (local $5 i32)
  (local $6 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 256
  i32.ge_u
  if
   local.get $size
   call $~lib/rt/tlsf/roundSize
   local.set $size
  end
  memory.size
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  block $~lib/rt/tlsf/GETTAIL|inlined.1 (result i32)
   local.get $root
   local.set $root|3
   local.get $root|3
   i32.load offset=1568
   br $~lib/rt/tlsf/GETTAIL|inlined.1
  end
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $5
  local.get $pagesNeeded
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i64.extend_i32_s
  i64.const 16
  i64.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $spare i32)
  (local $block|6 i32)
  (local $block|7 i32)
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 361
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $spare
   local.get $spare
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $spare
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   block $~lib/rt/tlsf/GETRIGHT|inlined.3 (result i32)
    local.get $block
    local.set $block|7
    local.get $block|7
    i32.const 4
    i32.add
    local.get $block|7
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.3
   end
   block $~lib/rt/tlsf/GETRIGHT|inlined.2 (result i32)
    local.get $block
    local.set $block|6
    local.get $block|6
    i32.const 4
    i32.add
    local.get $block|6
    call $~lib/rt/common/BLOCK#get:mmInfo
    i32.const 3
    i32.const -1
    i32.xor
    i32.and
    i32.add
    br $~lib/rt/tlsf/GETRIGHT|inlined.2
   end
   call $~lib/rt/common/BLOCK#get:mmInfo
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    i32.const 0
    i32.const 624
    i32.const 499
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 624
   i32.const 501
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
  return
 )
 (func $~lib/rt/tlsf/__alloc (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  return
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $this i32) (param $rtId i32)
  local.get $this
  local.get $rtId
  i32.store offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $this i32) (param $rtSize i32)
  local.get $this
  local.get $rtSize
  i32.store offset=16
 )
 (func $~lib/rt/itcms/__new (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 288
   i32.const 352
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill
  local.get $ptr
  return
 )
 (func $assembly/arguments/Args#set:a (param $this i32) (param $a i32)
  local.get $this
  local.get $a
  i32.store
 )
 (func $assembly/arguments/Args#set:b (param $this i32) (param $b i32)
  local.get $this
  local.get $b
  i32.store offset=4
 )
 (func $assembly/arguments/Args#set:c (param $this i32) (param $c i32)
  local.get $this
  local.get $c
  i32.store offset=8
 )
 (func $assembly/arguments/Args#set:d (param $this i32) (param $d i32)
  local.get $this
  local.get $d
  i32.store offset=12
 )
 (func $start:assembly/arguments~anonymous|0 (param $_d i32) (param $_l i32) (result i32)
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/arguments/Args.from
  return
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/rt/itcms/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $parent i32)
  (local $parentColor i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   i32.const 0
   i32.const 352
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $parent
   local.get $parent
   call $~lib/rt/itcms/Object#get:color
   local.set $parentColor
   local.get $parentColor
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $parent
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $parentColor
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/arguments/Nibbles#set:low (param $this i32) (param $low i32)
  local.get $this
  local.get $low
  i32.store8
 )
 (func $assembly/arguments/Nibbles#set:hig (param $this i32) (param $hig i32)
  local.get $this
  local.get $hig
  i32.store8 offset=1
 )
 (func $assembly/arguments/Nibbles#get:low (param $this i32) (result i32)
  local.get $this
  i32.load8_u
 )
 (func $assembly/arguments/Nibbles#get:hig (param $this i32) (result i32)
  local.get $this
  i32.load8_u offset=1
 )
 (func $assembly/arguments/Args#get:a (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/arguments/Args#get:b (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $start:assembly/arguments
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  memory.size
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 400
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 432
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 576
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
 )
 (func $assembly/instructions/Instruction#set:namePtr (param $this i32) (param $namePtr i32)
  local.get $this
  local.get $namePtr
  i32.store
 )
 (func $assembly/instructions/Instruction#set:kind (param $this i32) (param $kind i32)
  local.get $this
  local.get $kind
  i32.store offset=4
 )
 (func $assembly/instructions/Instruction#set:gas (param $this i32) (param $gas i64)
  local.get $this
  local.get $gas
  i64.store offset=8
 )
 (func $assembly/instructions/Instruction#set:isTerminating (param $this i32) (param $isTerminating i32)
  local.get $this
  local.get $isTerminating
  i32.store8 offset=16
 )
 (func $assembly/instructions/Instruction#constructor (param $this i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 17
   call $~lib/rt/tlsf/__alloc
   local.set $this
  end
  local.get $this
  i32.const 0
  call $assembly/instructions/Instruction#set:namePtr
  local.get $this
  global.get $assembly/arguments/Arguments.Zero
  call $assembly/instructions/Instruction#set:kind
  local.get $this
  i64.const 0
  call $assembly/instructions/Instruction#set:gas
  local.get $this
  i32.const 0
  call $assembly/instructions/Instruction#set:isTerminating
  local.get $this
 )
 (func $assembly/instructions/instruction (param $name i32) (param $kind i32) (param $gas i64) (param $isTerminating i32) (result i32)
  (local $i i32)
  i32.const 0
  call $assembly/instructions/Instruction#constructor
  local.set $i
  local.get $i
  local.get $name
  call $assembly/instructions/Instruction#set:namePtr
  local.get $i
  local.get $kind
  call $assembly/instructions/Instruction#set:kind
  local.get $i
  local.get $gas
  call $assembly/instructions/Instruction#set:gas
  local.get $i
  local.get $isTerminating
  call $assembly/instructions/Instruction#set:isTerminating
  local.get $i
  return
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy
  end
  local.get $buffer
  return
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/rt/itcms/Object#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $~lib/rt/itcms/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $4 i32)
  (local $5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  call $~lib/rt/common/BLOCK#get:mmInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtId
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $4
  local.get $oldObj
  call $~lib/rt/itcms/Object#get:rtSize
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy
  local.get $newPtr
  return
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/math/ipow32 (param $x i32) (param $e i32) (result i32)
  (local $out i32)
  (local $log i32)
  (local $4 i32)
  i32.const 1
  local.set $out
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $x
  i32.const 2
  i32.eq
  if
   i32.const 1
   local.get $e
   i32.shl
   i32.const 0
   local.get $e
   i32.const 32
   i32.lt_u
   select
   return
  end
  local.get $e
  i32.const 0
  i32.le_s
  if
   local.get $x
   i32.const -1
   i32.eq
   if
    i32.const -1
    i32.const 1
    local.get $e
    i32.const 1
    i32.and
    select
    return
   end
   local.get $e
   i32.const 0
   i32.eq
   local.get $x
   i32.const 1
   i32.eq
   i32.or
   return
  else
   local.get $e
   i32.const 1
   i32.eq
   if
    local.get $x
    return
   else
    local.get $e
    i32.const 2
    i32.eq
    if
     local.get $x
     local.get $x
     i32.mul
     return
    else
     local.get $e
     i32.const 32
     i32.lt_s
     if
      i32.const 32
      local.get $e
      i32.clz
      i32.sub
      local.set $log
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            local.get $log
            local.set $4
            local.get $4
            i32.const 5
            i32.eq
            br_if $case0|0
            local.get $4
            i32.const 4
            i32.eq
            br_if $case1|0
            local.get $4
            i32.const 3
            i32.eq
            br_if $case2|0
            local.get $4
            i32.const 2
            i32.eq
            br_if $case3|0
            local.get $4
            i32.const 1
            i32.eq
            br_if $case4|0
            br $break|0
           end
           local.get $e
           i32.const 1
           i32.and
           if
            local.get $out
            local.get $x
            i32.mul
            local.set $out
           end
           local.get $e
           i32.const 1
           i32.shr_u
           local.set $e
           local.get $x
           local.get $x
           i32.mul
           local.set $x
          end
          local.get $e
          i32.const 1
          i32.and
          if
           local.get $out
           local.get $x
           i32.mul
           local.set $out
          end
          local.get $e
          i32.const 1
          i32.shr_u
          local.set $e
          local.get $x
          local.get $x
          i32.mul
          local.set $x
         end
         local.get $e
         i32.const 1
         i32.and
         if
          local.get $out
          local.get $x
          i32.mul
          local.set $out
         end
         local.get $e
         i32.const 1
         i32.shr_u
         local.set $e
         local.get $x
         local.get $x
         i32.mul
         local.set $x
        end
        local.get $e
        i32.const 1
        i32.and
        if
         local.get $out
         local.get $x
         i32.mul
         local.set $out
        end
        local.get $e
        i32.const 1
        i32.shr_u
        local.set $e
        local.get $x
        local.get $x
        i32.mul
        local.set $x
       end
       local.get $e
       i32.const 1
       i32.and
       if
        local.get $out
        local.get $x
        i32.mul
        local.set $out
       end
      end
      local.get $out
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $e
   if
    local.get $e
    i32.const 1
    i32.and
    if
     local.get $out
     local.get $x
     i32.mul
     local.set $out
    end
    local.get $e
    i32.const 1
    i32.shr_u
    local.set $e
    local.get $x
    local.get $x
    i32.mul
    local.set $x
    br $while-continue|1
   end
  end
  local.get $out
  return
 )
 (func $start:assembly/memory-page
  i32.const 2
  i32.const 12
  call $~lib/math/ipow32
  global.set $assembly/memory-page/PAGE_SIZE
  i32.const 2
  i32.const 16
  call $~lib/math/ipow32
  global.set $assembly/memory-page/SEGMENT_SIZE
  i32.const 2
  i32.const 16
  call $~lib/math/ipow32
  global.set $assembly/memory-page/RESERVED_MEMORY
  global.get $assembly/memory-page/RESERVED_MEMORY
  global.get $assembly/memory-page/PAGE_SIZE
  i32.div_u
  global.set $assembly/memory-page/RESERVED_PAGES
  i32.const 2
  i32.const 29
  call $~lib/math/ipow32
  global.set $assembly/memory-page/ALLOCATE_EAGERLY
 )
 (func $assembly/memory/MaybePageFault#set:isFault (param $this i32) (param $isFault i32)
  local.get $this
  local.get $isFault
  i32.store8
 )
 (func $assembly/memory/MaybePageFault#set:isAccess (param $this i32) (param $isAccess i32)
  local.get $this
  local.get $isAccess
  i32.store8 offset=1
 )
 (func $assembly/memory/MaybePageFault#set:fault (param $this i32) (param $fault i32)
  local.get $this
  local.get $fault
  i32.store offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store offset=8
 )
 (func $assembly/memory-page/Page#set:access (param $this i32) (param $access i32)
  local.get $this
  local.get $access
  i32.store
 )
 (func $assembly/memory-page/Page#set:raw (param $this i32) (param $raw i32)
  local.get $this
  local.get $raw
  i32.store offset=4
  local.get $this
  local.get $raw
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory-page/RawPage#set:id (param $this i32) (param $id i32)
  local.get $this
  local.get $id
  i32.store
 )
 (func $assembly/memory-page/RawPage#set:page (param $this i32) (param $page i32)
  local.get $this
  local.get $page
  i32.store offset=4
  local.get $this
  local.get $page
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $start:assembly/instructions/outcome
  call $start:assembly/memory
 )
 (func $assembly/instructions/utils/reg (param $v i64) (result i32)
  local.get $v
  global.get $assembly/registers/NO_OF_REGISTERS
  i64.extend_i32_s
  i64.ge_u
  if (result i32)
   global.get $assembly/registers/NO_OF_REGISTERS
   i32.const 1
   i32.sub
  else
   local.get $v
   i32.wrap_i64
  end
  return
 )
 (func $~lib/rt/common/OBJECT#get:rtSize (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $~lib/staticarray/StaticArray<u64>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 3
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<u64>#__uset (param $this i32) (param $index i32) (param $value i64)
  local.get $this
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store
  i32.const 0
  drop
 )
 (func $assembly/instructions/outcome/OutcomeData#set:outcome (param $this i32) (param $outcome i32)
  local.get $this
  local.get $outcome
  i32.store
 )
 (func $assembly/instructions/outcome/OutcomeData#set:staticJump (param $this i32) (param $staticJump i32)
  local.get $this
  local.get $staticJump
  i32.store offset=4
 )
 (func $assembly/instructions/outcome/OutcomeData#set:dJump (param $this i32) (param $dJump i32)
  local.get $this
  local.get $dJump
  i32.store offset=8
 )
 (func $assembly/instructions/outcome/OutcomeData#set:result (param $this i32) (param $result i32)
  local.get $this
  local.get $result
  i32.store offset=12
 )
 (func $assembly/instructions/outcome/OutcomeData#set:exitCode (param $this i32) (param $exitCode i32)
  local.get $this
  local.get $exitCode
  i32.store offset=16
 )
 (func $assembly/instructions/outcome/ok (result i32)
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#constructor
  return
 )
 (func $assembly/instructions/utils/u8SignExtend (param $v i32) (result i64)
  local.get $v
  i32.extend8_s
  i64.extend_i32_s
  return
 )
 (func $assembly/instructions/utils/u16SignExtend (param $v i32) (result i64)
  local.get $v
  i32.extend16_s
  i64.extend_i32_s
  return
 )
 (func $~lib/polyfills/bswap<u64> (param $value i64) (result i64)
  (local $a i64)
  (local $b i64)
  (local $v i64)
  i32.const 1
  drop
  i32.const 8
  i32.const 1
  i32.eq
  drop
  i32.const 8
  i32.const 2
  i32.eq
  drop
  i32.const 8
  i32.const 4
  i32.eq
  drop
  i32.const 8
  i32.const 8
  i32.eq
  drop
  local.get $value
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.set $a
  local.get $value
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  local.set $b
  local.get $a
  local.get $b
  i64.or
  local.set $v
  local.get $v
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.set $a
  local.get $v
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  local.set $b
  local.get $a
  local.get $b
  i64.or
  i64.const 32
  i64.rotr
  return
 )
 (func $assembly/instructions/utils/u32SignExtend (param $v i32) (result i64)
  local.get $v
  i64.extend_i32_s
  return
 )
 (func $assembly/arguments/Args#get:c (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $assembly/arguments/Args#get:d (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $assembly/memory/Chunks#set:fault (param $this i32) (param $fault i32)
  local.get $this
  local.get $fault
  i32.store
  local.get $this
  local.get $fault
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/Chunks#set:first (param $this i32) (param $first i32)
  local.get $this
  local.get $first
  i32.store offset=4
  local.get $this
  local.get $first
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/Chunks#set:second (param $this i32) (param $second i32)
  local.get $this
  local.get $second
  i32.store offset=8
  local.get $this
  local.get $second
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/Memory#get:pages (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/util/hash/HASH<u32> (param $key i32) (result i32)
  (local $key|1 i32)
  (local $len i32)
  (local $h i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  block $~lib/util/hash/hash32|inlined.0 (result i32)
   local.get $key
   local.set $key|1
   i32.const 4
   local.set $len
   i32.const 0
   i32.const 374761393
   i32.add
   local.get $len
   i32.add
   local.set $h
   local.get $h
   local.get $key|1
   i32.const -1028477379
   i32.mul
   i32.add
   local.set $h
   local.get $h
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 15
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -2048144777
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 13
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   i32.const -1028477379
   i32.mul
   local.set $h
   local.get $h
   local.get $h
   i32.const 16
   i32.shr_u
   i32.xor
   local.set $h
   local.get $h
   br $~lib/util/hash/hash32|inlined.0
  end
  return
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#get:buckets" (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#get:bucketsMask" (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:taggedNext" (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:key" (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/memory/PageData#set:fault (param $this i32) (param $fault i32)
  local.get $this
  local.get $fault
  i32.store
  local.get $this
  local.get $fault
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/PageData#set:page (param $this i32) (param $page i32)
  local.get $this
  local.get $page
  i32.store offset=4
  local.get $this
  local.get $page
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/PageData#set:relativeAddress (param $this i32) (param $relativeAddress i32)
  local.get $this
  local.get $relativeAddress
  i32.store offset=8
 )
 (func $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:value" (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory-page/Page#get:access (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/memory/PageData#get:fault (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/memory/MaybePageFault#get:isFault (param $this i32) (result i32)
  local.get $this
  i32.load8_u
 )
 (func $assembly/memory/PageData#get:page (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory/PageData#get:relativeAddress (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $assembly/memory-page/Page#get:raw (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory-page/RawPage#get:page (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/util/bytes/FILL<u8> (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $start
  local.get $end
  i32.lt_s
  if
   local.get $ptr
   local.get $start
   i32.add
   local.get $value
   local.get $end
   local.get $start
   i32.sub
   memory.fill
  end
 )
 (func $assembly/memory/Chunks#get:fault (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/memory/ChunkBytes#set:fault (param $this i32) (param $fault i32)
  local.get $this
  local.get $fault
  i32.store
  local.get $this
  local.get $fault
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/ChunkBytes#set:bytes (param $this i32) (param $bytes i32)
  local.get $this
  local.get $bytes
  i32.store offset=4
  local.get $this
  local.get $bytes
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/Chunks#get:first (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory/Chunks#get:second (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/staticarray/StaticArray<u8>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 0
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<u8>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8
  i32.const 0
  drop
 )
 (func $assembly/memory/Result#set:ok (param $this i32) (param $ok i64)
  local.get $this
  local.get $ok
  i64.store
 )
 (func $assembly/memory/Result#set:fault (param $this i32) (param $fault i32)
  local.get $this
  local.get $fault
  i32.store offset=8
  local.get $this
  local.get $fault
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/ChunkBytes#get:fault (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/memory/ChunkBytes#get:bytes (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory/Result#get:fault (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $assembly/memory/Result#get:ok (param $this i32) (result i64)
  local.get $this
  i64.load
 )
 (func $assembly/memory/MaybePageFault#get:isAccess (param $this i32) (result i32)
  local.get $this
  i32.load8_u offset=1
 )
 (func $assembly/memory/MaybePageFault#get:fault (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/math/ipow64 (param $x i64) (param $e i64) (result i64)
  (local $out i64)
  (local $log i32)
  (local $4 i32)
  i64.const 1
  local.set $out
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  local.get $x
  i64.const 2
  i64.eq
  if
   i64.const 1
   local.get $e
   i64.shl
   i64.const 0
   local.get $e
   i64.const 64
   i64.lt_u
   select
   return
  end
  local.get $e
  i64.const 0
  i64.le_s
  if
   local.get $x
   i64.const -1
   i64.eq
   if
    i64.const -1
    i64.const 1
    local.get $e
    i64.const 1
    i64.and
    i64.const 0
    i64.ne
    select
    return
   end
   local.get $e
   i64.const 0
   i64.eq
   i64.extend_i32_u
   local.get $x
   i64.const 1
   i64.eq
   i64.extend_i32_u
   i64.or
   return
  else
   local.get $e
   i64.const 1
   i64.eq
   if
    local.get $x
    return
   else
    local.get $e
    i64.const 2
    i64.eq
    if
     local.get $x
     local.get $x
     i64.mul
     return
    else
     local.get $e
     i64.const 64
     i64.lt_s
     if
      i32.const 64
      local.get $e
      i64.clz
      i32.wrap_i64
      i32.sub
      local.set $log
      block $break|0
       block $case5|0
        block $case4|0
         block $case3|0
          block $case2|0
           block $case1|0
            block $case0|0
             local.get $log
             local.set $4
             local.get $4
             i32.const 6
             i32.eq
             br_if $case0|0
             local.get $4
             i32.const 5
             i32.eq
             br_if $case1|0
             local.get $4
             i32.const 4
             i32.eq
             br_if $case2|0
             local.get $4
             i32.const 3
             i32.eq
             br_if $case3|0
             local.get $4
             i32.const 2
             i32.eq
             br_if $case4|0
             local.get $4
             i32.const 1
             i32.eq
             br_if $case5|0
             br $break|0
            end
            local.get $e
            i64.const 1
            i64.and
            i64.const 0
            i64.ne
            if
             local.get $out
             local.get $x
             i64.mul
             local.set $out
            end
            local.get $e
            i64.const 1
            i64.shr_u
            local.set $e
            local.get $x
            local.get $x
            i64.mul
            local.set $x
           end
           local.get $e
           i64.const 1
           i64.and
           i64.const 0
           i64.ne
           if
            local.get $out
            local.get $x
            i64.mul
            local.set $out
           end
           local.get $e
           i64.const 1
           i64.shr_u
           local.set $e
           local.get $x
           local.get $x
           i64.mul
           local.set $x
          end
          local.get $e
          i64.const 1
          i64.and
          i64.const 0
          i64.ne
          if
           local.get $out
           local.get $x
           i64.mul
           local.set $out
          end
          local.get $e
          i64.const 1
          i64.shr_u
          local.set $e
          local.get $x
          local.get $x
          i64.mul
          local.set $x
         end
         local.get $e
         i64.const 1
         i64.and
         i64.const 0
         i64.ne
         if
          local.get $out
          local.get $x
          i64.mul
          local.set $out
         end
         local.get $e
         i64.const 1
         i64.shr_u
         local.set $e
         local.get $x
         local.get $x
         i64.mul
         local.set $x
        end
        local.get $e
        i64.const 1
        i64.and
        i64.const 0
        i64.ne
        if
         local.get $out
         local.get $x
         i64.mul
         local.set $out
        end
        local.get $e
        i64.const 1
        i64.shr_u
        local.set $e
        local.get $x
        local.get $x
        i64.mul
        local.set $x
       end
       local.get $e
       i64.const 1
       i64.and
       i64.const 0
       i64.ne
       if
        local.get $out
        local.get $x
        i64.mul
        local.set $out
       end
      end
      local.get $out
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $e
   i64.const 0
   i64.ne
   if
    local.get $e
    i64.const 1
    i64.and
    i64.const 0
    i64.ne
    if
     local.get $out
     local.get $x
     i64.mul
     local.set $out
    end
    local.get $e
    i64.const 1
    i64.shr_u
    local.set $e
    local.get $x
    local.get $x
    i64.mul
    local.set $x
    br $while-continue|1
   end
  end
  local.get $out
  return
 )
 (func $assembly/instructions/utils/mulUpperUnsigned (param $a i64) (param $b i64) (result i64)
  (local $aHigh i64)
  (local $aLow i64)
  (local $bHigh i64)
  (local $bLow i64)
  (local $lowLow i64)
  (local $lowHigh i64)
  (local $highLow i64)
  (local $highHigh i64)
  (local $carry i64)
  local.get $a
  i64.const 32
  i64.shr_u
  local.set $aHigh
  local.get $a
  i64.const 4294967295
  i64.and
  local.set $aLow
  local.get $b
  i64.const 32
  i64.shr_u
  local.set $bHigh
  local.get $b
  i64.const 4294967295
  i64.and
  local.set $bLow
  local.get $aLow
  local.get $bLow
  i64.mul
  local.set $lowLow
  local.get $aLow
  local.get $bHigh
  i64.mul
  local.set $lowHigh
  local.get $aHigh
  local.get $bLow
  i64.mul
  local.set $highLow
  local.get $aHigh
  local.get $bHigh
  i64.mul
  local.set $highHigh
  local.get $lowLow
  i64.const 32
  i64.shr_u
  local.get $lowHigh
  i64.const 4294967295
  i64.and
  i64.add
  local.get $highLow
  i64.const 4294967295
  i64.and
  i64.add
  local.set $carry
  local.get $highHigh
  local.get $lowHigh
  i64.const 32
  i64.shr_u
  i64.add
  local.get $highLow
  i64.const 32
  i64.shr_u
  i64.add
  local.get $carry
  i64.const 32
  i64.shr_u
  i64.add
  return
 )
 (func $assembly/instructions/utils/mulUpperSigned (param $a i64) (param $b i64) (result i64)
  (local $isResultNegative i32)
  (local $aAbs i64)
  (local $bAbs i64)
  (local $upper i64)
  (local $lower i64)
  i32.const 0
  local.set $isResultNegative
  local.get $a
  local.set $aAbs
  local.get $b
  local.set $bAbs
  local.get $a
  i64.const 0
  i64.lt_s
  if
   local.get $isResultNegative
   i32.eqz
   local.set $isResultNegative
   local.get $a
   i64.const -1
   i64.xor
   i64.const 1
   i64.add
   local.set $aAbs
  end
  local.get $b
  i64.const 0
  i64.lt_s
  if
   local.get $isResultNegative
   i32.eqz
   local.set $isResultNegative
   local.get $b
   i64.const -1
   i64.xor
   i64.const 1
   i64.add
   local.set $bAbs
  end
  local.get $isResultNegative
  if
   local.get $aAbs
   local.get $bAbs
   call $assembly/instructions/utils/mulUpperUnsigned
   local.set $upper
   local.get $aAbs
   local.get $bAbs
   i64.mul
   local.set $lower
   local.get $upper
   i64.const -1
   i64.xor
   local.get $lower
   i64.const 0
   i64.eq
   if (result i64)
    i64.const 1
   else
    i64.const 0
   end
   i64.add
   return
  end
  local.get $aAbs
  local.get $bAbs
  call $assembly/instructions/utils/mulUpperUnsigned
  return
 )
 (func $assembly/instructions/utils/mulUpperSignedUnsigned (param $a i64) (param $b i64) (result i64)
  (local $aAbs i64)
  (local $upper i64)
  (local $lower i64)
  local.get $a
  i64.const 0
  i64.lt_s
  if
   local.get $a
   i64.const -1
   i64.xor
   i64.const 1
   i64.add
   local.set $aAbs
   local.get $aAbs
   local.get $b
   call $assembly/instructions/utils/mulUpperUnsigned
   local.set $upper
   local.get $aAbs
   local.get $b
   i64.mul
   local.set $lower
   local.get $upper
   i64.const -1
   i64.xor
   local.get $lower
   i64.const 0
   i64.eq
   if (result i64)
    i64.const 1
   else
    i64.const 0
   end
   i64.add
   return
  end
  local.get $a
  local.get $b
  call $assembly/instructions/utils/mulUpperUnsigned
  return
 )
 (func $assembly/instructions/outcome/panic (result i32)
  global.get $assembly/instructions/outcome/Result.PANIC
  call $assembly/instructions/outcome/status
  return
 )
 (func $start:assembly/instructions/misc~anonymous|0 (param $$0 i32) (param $$1 i32) (param $$2 i32) (result i32)
  call $assembly/instructions/outcome/panic
 )
 (func $start:assembly/instructions/misc~anonymous|1 (param $$0 i32) (param $$1 i32) (param $$2 i32) (result i32)
  call $assembly/instructions/outcome/panic
 )
 (func $start:assembly/instructions/misc~anonymous|2 (param $$0 i32) (param $$1 i32) (param $$2 i32) (result i32)
  call $assembly/instructions/outcome/ok
 )
 (func $assembly/memory/Memory#get:sbrkAddress (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $assembly/memory/Memory#set:sbrkAddress (param $this i32) (param $sbrkAddress i32)
  local.get $this
  local.get $sbrkAddress
  i32.store offset=12
 )
 (func $assembly/memory/Memory#get:lastAllocatedPage (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/memory/Memory#get:arena (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory-page/Arena#get:free (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $assembly/memory-page/Arena#get:extraPageIndex (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $assembly/memory-page/Arena#get:arenaBytes (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory-page/Arena#set:extraPageIndex (param $this i32) (param $extraPageIndex i32)
  local.get $this
  local.get $extraPageIndex
  i32.store offset=8
 )
 (func $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:value" (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store offset=4
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesOffset" (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesCapacity" (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesCount" (param $this i32) (result i32)
  local.get $this
  i32.load offset=20
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entries" (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:key" (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store
 )
 (func $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:taggedNext" (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store offset=8
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#set:buckets" (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#set:bucketsMask" (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store offset=4
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entries" (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCapacity" (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store offset=12
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesOffset" (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store offset=16
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCount" (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store offset=20
 )
 (func $assembly/memory/Memory#set:lastAllocatedPage (param $this i32) (param $lastAllocatedPage i32)
  local.get $this
  local.get $lastAllocatedPage
  i32.store
 )
 (func $assembly/instructions/rot/math.rot_r (param $v i64) (param $shift i64) (result i64)
  local.get $v
  local.get $shift
  i64.rotr
  return
 )
 (func $assembly/instructions/rot/math.rot_r_32 (param $v i32) (param $shift i32) (result i32)
  local.get $v
  local.get $shift
  i32.rotr
  return
 )
 (func $assembly/instructions/rot/math.rot_l (param $v i64) (param $shift i64) (result i64)
  local.get $v
  local.get $shift
  i64.rotl
  return
 )
 (func $assembly/instructions/rot/math.rot_l_32 (param $v i32) (param $shift i32) (result i32)
  local.get $v
  local.get $shift
  i32.rotl
  return
 )
 (func $~lib/array/Array<u8>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<u8>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $start:assembly/interpreter
  call $start:assembly/instructions/outcome
  i64.const 2
  i64.const 32
  call $~lib/math/ipow64
  global.set $assembly/interpreter/MAX_U32
 )
 (func $start:assembly/api-internal
  call $start:assembly/arguments
  call $start:assembly/instructions
  call $start:assembly/interpreter
 )
 (func $start:assembly/spi
  i32.const 2
  i32.const 24
  call $~lib/math/ipow32
  global.set $assembly/spi/MAX_ARGS_LEN
  i32.const 2
  i32.const 32
  call $~lib/math/ipow32
  global.get $assembly/memory-page/SEGMENT_SIZE
  i32.sub
  global.get $assembly/spi/MAX_ARGS_LEN
  i32.sub
  global.set $assembly/spi/ARGS_SEGMENT_START
  global.get $assembly/spi/ARGS_SEGMENT_START
  global.get $assembly/memory-page/SEGMENT_SIZE
  i32.sub
  global.set $assembly/spi/STACK_SEGMENT_END
 )
 (func $start:assembly/api-debugger
  call $start:assembly/api-internal
  call $start:assembly/spi
 )
 (func $start:assembly/index
  call $start:assembly/api-debugger
 )
 (func $assembly/program/Program#get:code (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/program/Program#get:mask (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/program/Mask#get:bytesToSkip (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/staticarray/StaticArray<u32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/string/String#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 1
  i32.shr_u
  return
 )
 (func $~lib/util/number/decimalCount32 (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $buffer i32) (param $num i32) (param $offset i32)
  (local $t i32)
  (local $r i32)
  (local $d1 i32)
  (local $d2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  (local $t|9 i32)
  (local $d1|10 i32)
  (local $digits i32)
  (local $digits|12 i32)
  (local $digit i32)
  loop $while-continue|0
   local.get $num
   i32.const 10000
   i32.ge_u
   if
    local.get $num
    i32.const 10000
    i32.div_u
    local.set $t
    local.get $num
    i32.const 10000
    i32.rem_u
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 100
    i32.div_u
    local.set $d1
    local.get $r
    i32.const 100
    i32.rem_u
    local.set $d2
    i32.const 15068
    local.get $d1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits1
    i32.const 15068
    local.get $d2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $num
  i32.const 100
  i32.ge_u
  if
   local.get $num
   i32.const 100
   i32.div_u
   local.set $t|9
   local.get $num
   i32.const 100
   i32.rem_u
   local.set $d1|10
   local.get $t|9
   local.set $num
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 15068
   local.get $d1|10
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $digits
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits
   i32.store
  end
  local.get $num
  i32.const 10
  i32.ge_u
  if
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 15068
   local.get $num
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $digits|12
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digits|12
   i32.store
  else
   local.get $offset
   i32.const 1
   i32.sub
   local.set $offset
   i32.const 48
   local.get $num
   i32.add
   local.set $digit
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $digit
   i32.store16
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $buffer i32) (param $num i64) (param $offset i32)
  loop $while-continue|0
   local.get $offset
   i32.const 2
   i32.ge_u
   if
    local.get $offset
    i32.const 2
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 15488
    local.get $num
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $num
    i64.const 8
    i64.shr_u
    local.set $num
    br $while-continue|0
   end
  end
  local.get $offset
  i32.const 1
  i32.and
  if
   local.get $buffer
   i32.const 15488
   local.get $num
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u
   i32.store16
  end
 )
 (func $~lib/util/number/ulog_base (param $num i64) (param $base i32) (result i32)
  (local $value i32)
  (local $b64 i64)
  (local $b i64)
  (local $e i32)
  block $~lib/util/number/isPowerOf2<i32>|inlined.0 (result i32)
   local.get $base
   local.set $value
   local.get $value
   i32.popcnt
   i32.const 1
   i32.eq
   br $~lib/util/number/isPowerOf2<i32>|inlined.0
  end
  if
   i32.const 63
   local.get $num
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $base
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $base
  i64.extend_i32_s
  local.set $b64
  local.get $b64
  local.set $b
  i32.const 1
  local.set $e
  loop $while-continue|0
   local.get $num
   local.get $b
   i64.ge_u
   if
    local.get $num
    local.get $b
    i64.div_u
    local.set $num
    local.get $b
    local.get $b
    i64.mul
    local.set $b
    local.get $e
    i32.const 1
    i32.shl
    local.set $e
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $num
   i64.const 1
   i64.ge_u
   if
    local.get $num
    local.get $b64
    i64.div_u
    local.set $num
    local.get $e
    i32.const 1
    i32.add
    local.set $e
    br $while-continue|1
   end
  end
  local.get $e
  i32.const 1
  i32.sub
  return
 )
 (func $~lib/util/number/utoa64_any_core (param $buffer i32) (param $num i64) (param $offset i32) (param $radix i32)
  (local $base i64)
  (local $shift i64)
  (local $mask i64)
  (local $q i64)
  local.get $radix
  i64.extend_i32_s
  local.set $base
  local.get $radix
  local.get $radix
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $radix
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $shift
   local.get $base
   i64.const 1
   i64.sub
   local.set $mask
   loop $do-loop|0
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 16544
    local.get $num
    local.get $mask
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $num
    local.get $shift
    i64.shr_u
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $num
    local.get $base
    i64.div_u
    local.set $q
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 16544
    local.get $num
    local.get $q
    local.get $base
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $q
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/number/I32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/itoa32
  return
 )
 (func $assembly/instructions/Instruction#get:namePtr (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/number/U8#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  i32.const 255
  i32.and
  local.get $radix
  call $~lib/util/number/utoa32
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $assembly/instructions/Instruction#get:kind (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<i32>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<i32>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<u32>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<u32>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $~lib/array/Array<u32>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/number/U32#toString (param $this i32) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/utoa32
  return
 )
 (func $~lib/staticarray/StaticArray<bool>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 0
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<bool>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8
  i32.const 0
  drop
 )
 (func $assembly/program-build/immBytes (param $dataLength i32) (param $required i32) (result i32)
  (local $value1 f64)
  (local $value2 f64)
  local.get $dataLength
  local.get $required
  i32.lt_s
  if
   i32.const 0
   return
  end
  block $~lib/math/NativeMath.min|inlined.4 (result f64)
   f64.const 4
   local.set $value1
   local.get $dataLength
   local.get $required
   i32.sub
   f64.convert_i32_s
   local.set $value2
   local.get $value1
   local.get $value2
   f64.min
   br $~lib/math/NativeMath.min|inlined.4
  end
  i32.trunc_sat_f64_s
  return
 )
 (func $~lib/array/Array<u8>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  return
 )
 (func $~lib/dataview/DataView#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/dataview/DataView#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store offset=4
 )
 (func $~lib/dataview/DataView#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store offset=8
 )
 (func $~lib/dataview/DataView#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/dataview/DataView#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/util/number/decimalCount64High (param $value i64) (result i32)
  local.get $value
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $value
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 10
    local.get $value
    i64.const 100000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 13
    local.get $value
    i64.const 100000000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    local.get $value
    i64.const 10000000000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 18
    local.get $value
    i64.const -8446744073709551616
    i64.ge_u
    i32.add
    local.get $value
    i64.const 1000000000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_dec_lut (param $buffer i32) (param $num i64) (param $offset i32)
  (local $t i64)
  (local $r i32)
  (local $b i32)
  (local $c i32)
  (local $b1 i32)
  (local $b2 i32)
  (local $c1 i32)
  (local $c2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  loop $while-continue|0
   local.get $num
   i64.const 100000000
   i64.ge_u
   if
    local.get $num
    i64.const 100000000
    i64.div_u
    local.set $t
    local.get $num
    local.get $t
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 10000
    i32.div_u
    local.set $b
    local.get $r
    i32.const 10000
    i32.rem_u
    local.set $c
    local.get $b
    i32.const 100
    i32.div_u
    local.set $b1
    local.get $b
    i32.const 100
    i32.rem_u
    local.set $b2
    local.get $c
    i32.const 100
    i32.div_u
    local.set $c1
    local.get $c
    i32.const 100
    i32.rem_u
    local.set $c2
    i32.const 15068
    local.get $c1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits1
    i32.const 15068
    local.get $c2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store
    i32.const 15068
    local.get $b1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits1
    i32.const 15068
    local.get $b2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $buffer
  local.get $num
  i32.wrap_i64
  local.get $offset
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/number/U64#toString (param $this i64) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/utoa64
  return
 )
 (func $assembly/codec/Decoder#set:source (param $this i32) (param $source i32)
  local.get $this
  local.get $source
  i32.store
  local.get $this
  local.get $source
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/codec/Decoder#set:offset (param $this i32) (param $offset i32)
  local.get $this
  local.get $offset
  i32.store offset=4
 )
 (func $assembly/codec/Decoder#get:offset (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/codec/Decoder#get:source (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/codec/ValOffset<u32>#set:value (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store
 )
 (func $assembly/codec/ValOffset<u32>#set:offset (param $this i32) (param $offset i32)
  local.get $this
  local.get $offset
  i32.store offset=4
 )
 (func $assembly/codec/ValOffset<u32>#get:offset (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/codec/ValOffset<u32>#get:value (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/program/CodeAndMetadata#set:code (param $this i32) (param $code i32)
  local.get $this
  local.get $code
  i32.store
  local.get $this
  local.get $code
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/program/CodeAndMetadata#set:metadata (param $this i32) (param $metadata i32)
  local.get $this
  local.get $metadata
  i32.store offset=4
  local.get $this
  local.get $metadata
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/program/CodeAndMetadata#get:code (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/program/Mask#set:bytesToSkip (param $this i32) (param $bytesToSkip i32)
  local.get $this
  local.get $bytesToSkip
  i32.store
  local.get $this
  local.get $bytesToSkip
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/staticarray/StaticArray<u32>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  i32.const 0
  drop
 )
 (func $assembly/program/JumpTable#set:jumps (param $this i32) (param $jumps i32)
  local.get $this
  local.get $jumps
  i32.store
  local.get $this
  local.get $jumps
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/staticarray/StaticArray<i32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.const 2
  i32.shr_u
  return
 )
 (func $~lib/staticarray/StaticArray<i32>#__uset (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  i32.const 0
  drop
 )
 (func $assembly/instructions/Instruction#get:isTerminating (param $this i32) (result i32)
  local.get $this
  i32.load8_u offset=16
 )
 (func $assembly/program/BasicBlocks#set:isStartOrEnd (param $this i32) (param $isStartOrEnd i32)
  local.get $this
  local.get $isStartOrEnd
  i32.store
  local.get $this
  local.get $isStartOrEnd
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/program/Program#set:code (param $this i32) (param $code i32)
  local.get $this
  local.get $code
  i32.store
  local.get $this
  local.get $code
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/program/Program#set:mask (param $this i32) (param $mask i32)
  local.get $this
  local.get $mask
  i32.store offset=4
  local.get $this
  local.get $mask
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/program/Program#set:jumpTable (param $this i32) (param $jumpTable i32)
  local.get $this
  local.get $jumpTable
  i32.store offset=8
  local.get $this
  local.get $jumpTable
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/program/Program#set:basicBlocks (param $this i32) (param $basicBlocks i32)
  local.get $this
  local.get $basicBlocks
  i32.store offset=12
  local.get $this
  local.get $basicBlocks
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/MemoryBuilder#set:pages (param $this i32) (param $pages i32)
  local.get $this
  local.get $pages
  i32.store
  local.get $this
  local.get $pages
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory-page/Arena#set:arenaBytes (param $this i32) (param $arenaBytes i32)
  local.get $this
  local.get $arenaBytes
  i32.store offset=4
 )
 (func $assembly/memory-page/Arena#set:free (param $this i32) (param $free i32)
  local.get $this
  local.get $free
  i32.store
  local.get $this
  local.get $free
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/MemoryBuilder#set:arena (param $this i32) (param $arena i32)
  local.get $this
  local.get $arena
  i32.store offset=4
  local.get $this
  local.get $arena
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/spi/alignToSegmentSize (param $size i32) (result i32)
  local.get $size
  global.get $assembly/memory-page/SEGMENT_SIZE
  i32.add
  i32.const 1
  i32.sub
  global.get $assembly/memory-page/SEGMENT_SIZE_SHIFT
  i32.shr_u
  global.get $assembly/memory-page/SEGMENT_SIZE_SHIFT
  i32.shl
  return
 )
 (func $assembly/spi/alignToPageSize (param $size i32) (result i32)
  local.get $size
  global.get $assembly/memory-page/PAGE_SIZE
  i32.add
  i32.const 1
  i32.sub
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shr_u
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shl
  return
 )
 (func $assembly/memory/MemoryBuilder#get:pages (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/memory/MemoryBuilder#get:arena (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/memory/Memory#set:arena (param $this i32) (param $arena i32)
  local.get $this
  local.get $arena
  i32.store offset=4
  local.get $this
  local.get $arena
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/memory/Memory#set:pages (param $this i32) (param $pages i32)
  local.get $this
  local.get $pages
  i32.store offset=8
  local.get $this
  local.get $pages
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/spi/StandardProgram#set:program (param $this i32) (param $program i32)
  local.get $this
  local.get $program
  i32.store offset=16
  local.get $this
  local.get $program
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/spi/StandardProgram#set:memory (param $this i32) (param $memory i32)
  local.get $this
  local.get $memory
  i32.store offset=20
  local.get $this
  local.get $memory
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/spi/StandardProgram#set:registers (param $this i32) (param $registers i32)
  local.get $this
  local.get $registers
  i32.store offset=24
  local.get $this
  local.get $registers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/spi/StandardProgram#set:metadata (param $this i32) (param $metadata i32)
  local.get $this
  local.get $metadata
  i32.store
  local.get $this
  local.get $metadata
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/spi/StandardProgram#set:pc (param $this i32) (param $pc i32)
  local.get $this
  local.get $pc
  i32.store offset=4
 )
 (func $assembly/spi/StandardProgram#set:gas (param $this i32) (param $gas i64)
  local.get $this
  local.get $gas
  i64.store offset=8
 )
 (func $assembly/interpreter/Interpreter#set:program (param $this i32) (param $program i32)
  local.get $this
  local.get $program
  i32.store
  local.get $this
  local.get $program
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/interpreter/Interpreter#set:registers (param $this i32) (param $registers i32)
  local.get $this
  local.get $registers
  i32.store offset=4
  local.get $this
  local.get $registers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/interpreter/Interpreter#set:memory (param $this i32) (param $memory i32)
  local.get $this
  local.get $memory
  i32.store offset=8
  local.get $this
  local.get $memory
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/gas/GasCounterU64#set:gas (param $this i32) (param $gas i64)
  local.get $this
  local.get $gas
  i64.store
 )
 (func $assembly/gas/gasCounter (param $gas i64) (result i32)
  i32.const 0
  local.get $gas
  call $assembly/gas/GasCounterU64#constructor
  return
 )
 (func $assembly/interpreter/Interpreter#set:gas (param $this i32) (param $gas i32)
  local.get $this
  local.get $gas
  i32.store offset=12
  local.get $this
  local.get $gas
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/interpreter/Interpreter#set:pc (param $this i32) (param $pc i32)
  local.get $this
  local.get $pc
  i32.store offset=16
 )
 (func $assembly/interpreter/Interpreter#set:status (param $this i32) (param $status i32)
  local.get $this
  local.get $status
  i32.store offset=20
 )
 (func $assembly/interpreter/Interpreter#set:exitCode (param $this i32) (param $exitCode i32)
  local.get $this
  local.get $exitCode
  i32.store offset=24
 )
 (func $assembly/interpreter/Interpreter#set:nextPc (param $this i32) (param $nextPc i32)
  local.get $this
  local.get $nextPc
  i32.store offset=28
 )
 (func $assembly/interpreter/Interpreter#set:useSbrkGas (param $this i32) (param $useSbrkGas i32)
  local.get $this
  local.get $useSbrkGas
  i32.store8 offset=32
 )
 (func $assembly/spi/StandardProgram#get:program (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $assembly/spi/StandardProgram#get:registers (param $this i32) (result i32)
  local.get $this
  i32.load offset=24
 )
 (func $assembly/spi/StandardProgram#get:memory (param $this i32) (result i32)
  local.get $this
  i32.load offset=20
 )
 (func $assembly/interpreter/Interpreter#get:gas (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $assembly/gas/GasCounter#set (param $this i32) (param $g i64)
  unreachable
 )
 (func $assembly/interpreter/Interpreter#get:memory (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store offset=4
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store offset=8
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/api-internal/InitialPage#set:address (param $this i32) (param $address i32)
  local.get $this
  local.get $address
  i32.store
 )
 (func $assembly/api-internal/InitialPage#set:length (param $this i32) (param $length i32)
  local.get $this
  local.get $length
  i32.store offset=4
 )
 (func $assembly/api-internal/InitialPage#set:access (param $this i32) (param $access i32)
  local.get $this
  local.get $access
  i32.store offset=8
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $assembly/api-internal/InitialChunk#set:address (param $this i32) (param $address i32)
  local.get $this
  local.get $address
  i32.store
 )
 (func $assembly/api-internal/InitialChunk#set:data (param $this i32) (param $data i32)
  local.get $this
  local.get $data
  i32.store offset=4
  local.get $this
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/api-internal/InitialChunk#get:data (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $assembly/api-internal/InitialPage#get:access (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $assembly/api-internal/InitialPage#get:address (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/api-internal/InitialPage#get:length (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/api-internal/InitialChunk#get:address (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/interpreter/Interpreter#get:status (param $this i32) (result i32)
  local.get $this
  i32.load offset=20
 )
 (func $assembly/interpreter/Interpreter#get:nextPc (param $this i32) (result i32)
  local.get $this
  i32.load offset=28
 )
 (func $assembly/interpreter/Interpreter#get:pc (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $assembly/interpreter/Interpreter#get:program (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/instructions/Instruction#get:gas (param $this i32) (result i64)
  local.get $this
  i64.load offset=8
 )
 (func $assembly/gas/GasCounter#sub (param $this i32) (param $g i64) (result i32)
  unreachable
 )
 (func $assembly/interpreter/Interpreter#get:useSbrkGas (param $this i32) (result i32)
  local.get $this
  i32.load8_u offset=32
 )
 (func $assembly/interpreter/Interpreter#get:registers (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/instructions/outcome/OutcomeData#get:outcome (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/program/Program#get:jumpTable (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $assembly/instructions/outcome/OutcomeData#get:dJump (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $assembly/interpreter/DjumpResult#set:status (param $this i32) (param $status i32)
  local.get $this
  local.get $status
  i32.store
 )
 (func $assembly/interpreter/DjumpResult#set:newPc (param $this i32) (param $newPc i32)
  local.get $this
  local.get $newPc
  i32.store offset=4
 )
 (func $assembly/program/JumpTable#get:jumps (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/interpreter/DjumpResult#get:status (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/program/Program#get:basicBlocks (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $assembly/interpreter/DjumpResult#get:newPc (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/interpreter/BranchResult#set:isOkay (param $this i32) (param $isOkay i32)
  local.get $this
  local.get $isOkay
  i32.store8
 )
 (func $assembly/interpreter/BranchResult#set:newPc (param $this i32) (param $newPc i32)
  local.get $this
  local.get $newPc
  i32.store offset=4
 )
 (func $assembly/program/BasicBlocks#get:isStartOrEnd (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/interpreter/BranchResult#get:isOkay (param $this i32) (result i32)
  local.get $this
  i32.load8_u
 )
 (func $assembly/interpreter/BranchResult#get:newPc (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/instructions/outcome/OutcomeData#get:staticJump (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/instructions/outcome/OutcomeData#get:result (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $assembly/instructions/outcome/OutcomeData#get:exitCode (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $assembly/interpreter/Interpreter#get:exitCode (param $this i32) (result i32)
  local.get $this
  i32.load offset=24
 )
 (func $assembly/gas/GasCounter#get (param $this i32) (result i64)
  unreachable
 )
 (func $assembly/program/CodeAndMetadata#get:metadata (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<u64>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<u64>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:buckets" (param $this i32) (param $buckets i32)
  local.get $this
  local.get $buckets
  i32.store
  local.get $this
  local.get $buckets
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:bucketsMask" (param $this i32) (param $bucketsMask i32)
  local.get $this
  local.get $bucketsMask
  i32.store offset=4
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entries" (param $this i32) (param $entries i32)
  local.get $this
  local.get $entries
  i32.store offset=8
  local.get $this
  local.get $entries
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesCapacity" (param $this i32) (param $entriesCapacity i32)
  local.get $this
  local.get $entriesCapacity
  i32.store offset=12
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesOffset" (param $this i32) (param $entriesOffset i32)
  local.get $this
  local.get $entriesOffset
  i32.store offset=16
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesCount" (param $this i32) (param $entriesCount i32)
  local.get $this
  local.get $entriesCount
  i32.store offset=20
 )
 (func $assembly/gas-costs/BlockGasCost#get:pc (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:buckets" (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:bucketsMask" (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:taggedNext" (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:key" (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:value" (param $this i32) (param $value i32)
  local.get $this
  local.get $value
  i32.store offset=4
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesOffset" (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesCapacity" (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesCount" (param $this i32) (result i32)
  local.get $this
  i32.load offset=20
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entries" (param $this i32) (result i32)
  local.get $this
  i32.load offset=8
 )
 (func $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:key" (param $this i32) (param $key i32)
  local.get $this
  local.get $key
  i32.store
 )
 (func $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:value" (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:taggedNext" (param $this i32) (param $taggedNext i32)
  local.get $this
  local.get $taggedNext
  i32.store offset=8
 )
 (func $assembly/gas-costs/BlockGasCost#set:pc (param $this i32) (param $pc i32)
  local.get $this
  local.get $pc
  i32.store
 )
 (func $assembly/gas-costs/BlockGasCost#set:gas (param $this i32) (param $gas i64)
  local.get $this
  local.get $gas
  i64.store offset=8
 )
 (func $assembly/gas-costs/BlockGasCost#get:gas (param $this i32) (result i64)
  local.get $this
  i64.load offset=8
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store offset=4
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store offset=8
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:length_ (param $this i32) (param $length_ i32)
  local.get $this
  local.get $length_
  i32.store offset=12
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $assembly/spi/StandardProgram#get:metadata (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/memory/memory.repeat (param $dst i32) (param $src i32) (param $srcLength i32) (param $count i32)
  (local $index i32)
  (local $total i32)
  i32.const 0
  local.set $index
  local.get $srcLength
  local.get $count
  i32.mul
  local.set $total
  loop $while-continue|0
   local.get $index
   local.get $total
   i32.lt_u
   if
    local.get $dst
    local.get $index
    i32.add
    local.get $src
    local.get $srcLength
    memory.copy
    local.get $index
    local.get $srcLength
    i32.add
    local.set $index
    br $while-continue|0
   end
  end
 )
 (func $assembly/api-internal/VmInput#set:program (param $this i32) (param $program i32)
  local.get $this
  local.get $program
  i32.store offset=16
  local.get $this
  local.get $program
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/api-internal/VmInput#set:memory (param $this i32) (param $memory i32)
  local.get $this
  local.get $memory
  i32.store offset=20
  local.get $this
  local.get $memory
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/api-internal/VmInput#set:registers (param $this i32) (param $registers i32)
  local.get $this
  local.get $registers
  i32.store offset=24
  local.get $this
  local.get $registers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/api-internal/VmInput#set:pc (param $this i32) (param $pc i32)
  local.get $this
  local.get $pc
  i32.store
 )
 (func $assembly/api-internal/VmInput#set:gas (param $this i32) (param $gas i64)
  local.get $this
  local.get $gas
  i64.store offset=8
 )
 (func $assembly/api-internal/VmInput#get:program (param $this i32) (result i32)
  local.get $this
  i32.load offset=16
 )
 (func $assembly/api-internal/VmInput#get:registers (param $this i32) (result i32)
  local.get $this
  i32.load offset=24
 )
 (func $assembly/api-internal/VmInput#get:memory (param $this i32) (result i32)
  local.get $this
  i32.load offset=20
 )
 (func $assembly/api-internal/VmInput#get:pc (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $assembly/api-internal/VmInput#get:gas (param $this i32) (result i64)
  local.get $this
  i64.load offset=8
 )
 (func $~lib/util/number/itoa_buffered<u64> (param $buffer i32) (param $value i64) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $val32 i32)
  (local $buffer|6 i32)
  (local $num i32)
  (local $offset i32)
  (local $val64 i64)
  (local $buffer|10 i32)
  (local $num|11 i64)
  (local $offset|12 i32)
  i32.const 0
  local.set $sign
  i32.const 0
  drop
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $value
  i64.const 10
  i64.lt_u
  if
   local.get $buffer
   local.get $value
   i32.const 48
   i64.extend_i32_s
   i64.or
   i64.store16
   i32.const 1
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 8
  i32.const 4
  i32.le_u
  drop
  local.get $value
  global.get $~lib/builtins/u32.MAX_VALUE
  i64.extend_i32_u
  i64.le_u
  if
   local.get $value
   i32.wrap_i64
   local.set $val32
   local.get $val32
   call $~lib/util/number/decimalCount32
   local.set $decimals
   local.get $dest
   local.set $buffer|6
   local.get $val32
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer|6
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $value
   local.set $val64
   local.get $val64
   call $~lib/util/number/decimalCount64High
   local.set $decimals
   local.get $dest
   local.set $buffer|10
   local.get $val64
   local.set $num|11
   local.get $decimals
   local.set $offset|12
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer|10
   local.get $num|11
   local.get $offset|12
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $sign
  local.get $decimals
  i32.add
  return
 )
 (func $~lib/array/Array<~lib/string/String>#get:dataStart (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/array/Array<~lib/string/String>#get:length_ (param $this i32) (result i32)
  local.get $this
  i32.load offset=12
 )
 (func $~lib/number/I64#toString (param $this i64) (param $radix i32) (result i32)
  local.get $this
  local.get $radix
  call $~lib/util/number/itoa64
  return
 )
 (func $assembly/program/ResolvedArguments#set:a (param $this i32) (param $a i64)
  local.get $this
  local.get $a
  i64.store
 )
 (func $assembly/program/ResolvedArguments#set:b (param $this i32) (param $b i64)
  local.get $this
  local.get $b
  i64.store offset=8
 )
 (func $assembly/program/ResolvedArguments#set:c (param $this i32) (param $c i64)
  local.get $this
  local.get $c
  i64.store offset=16
 )
 (func $assembly/program/ResolvedArguments#set:d (param $this i32) (param $d i64)
  local.get $this
  local.get $d
  i64.store offset=24
 )
 (func $assembly/program/ResolvedArguments#set:decoded (param $this i32) (param $decoded i32)
  local.get $this
  local.get $decoded
  i32.store offset=32
  local.get $this
  local.get $decoded
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/program/ResolvedArguments#get:a (param $this i32) (result i64)
  local.get $this
  i64.load
 )
 (func $assembly/program/ResolvedArguments#get:decoded (param $this i32) (result i32)
  local.get $this
  i32.load offset=32
 )
 (func $assembly/program/ResolvedArguments#get:b (param $this i32) (result i64)
  local.get $this
  i64.load offset=8
 )
 (func $assembly/program/ResolvedArguments#get:c (param $this i32) (result i64)
  local.get $this
  i64.load offset=16
 )
 (func $assembly/program/ResolvedArguments#get:d (param $this i32) (result i64)
  local.get $this
  i64.load offset=24
 )
 (func $assembly/api-internal/VmOutput#set:status (param $this i32) (param $status i32)
  local.get $this
  local.get $status
  i32.store
 )
 (func $assembly/api-internal/VmOutput#set:registers (param $this i32) (param $registers i32)
  local.get $this
  local.get $registers
  i32.store offset=4
  local.get $this
  local.get $registers
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/api-internal/VmOutput#set:pc (param $this i32) (param $pc i32)
  local.get $this
  local.get $pc
  i32.store offset=8
 )
 (func $assembly/api-internal/VmOutput#set:memory (param $this i32) (param $memory i32)
  local.get $this
  local.get $memory
  i32.store offset=12
  local.get $this
  local.get $memory
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/api-internal/VmOutput#set:gas (param $this i32) (param $gas i64)
  local.get $this
  local.get $gas
  i64.store offset=16
 )
 (func $assembly/api-internal/VmOutput#set:exitCode (param $this i32) (param $exitCode i32)
  local.get $this
  local.get $exitCode
  i32.store offset=24
 )
 (func $~lib/array/Array<u32>#set:buffer (param $this i32) (param $buffer i32)
  local.get $this
  local.get $buffer
  i32.store
  local.get $this
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<u32>#set:dataStart (param $this i32) (param $dataStart i32)
  local.get $this
  local.get $dataStart
  i32.store offset=4
 )
 (func $~lib/array/Array<u32>#set:byteLength (param $this i32) (param $byteLength i32)
  local.get $this
  local.get $byteLength
  i32.store offset=8
 )
 (func $~lib/rt/itcms/__pin (param $ptr i32) (result i32)
  (local $obj i32)
  local.get $ptr
  if
   local.get $ptr
   i32.const 20
   i32.sub
   local.set $obj
   local.get $obj
   call $~lib/rt/itcms/Object#get:color
   i32.const 3
   i32.eq
   if
    i32.const 20368
    i32.const 352
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/pinSpace
   i32.const 3
   call $~lib/rt/itcms/Object#linkTo
  end
  local.get $ptr
  return
 )
 (func $~lib/rt/itcms/__unpin (param $ptr i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  i32.const 3
  i32.ne
  if
   i32.const 20432
   i32.const 352
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/fromSpace
   global.get $~lib/rt/itcms/white
   call $~lib/rt/itcms/Object#linkTo
  end
 )
 (func $~lib/rt/itcms/__collect
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $assembly/gas/GasCounterU64#get:gas (param $this i32) (result i64)
  local.get $this
  i64.load
 )
 (func $assembly/gas/GasCounter#set@override (param $0 i32) (param $1 i64)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 46
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $assembly/gas/GasCounterU64#set
   return
  end
  unreachable
 )
 (func $assembly/gas/GasCounter#sub@override (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $2
    local.get $2
    i32.const 46
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   local.get $1
   call $assembly/gas/GasCounterU64#sub
   return
  end
  unreachable
 )
 (func $assembly/gas/GasCounter#get@override (param $0 i32) (result i64)
  (local $1 i32)
  block $default
   block $case0
    local.get $0
    i32.const 8
    i32.sub
    i32.load
    local.set $1
    local.get $1
    i32.const 46
    i32.eq
    br_if $case0
    br $default
   end
   local.get $0
   call $assembly/gas/GasCounterU64#get
   return
  end
  unreachable
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  i32.const 480
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 8176
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 11424
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 14704
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 9376
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 288
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 20368
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 20432
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 15488
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 16544
  local.get $0
  call $~lib/rt/itcms/__visit
  global.get $assembly/api-debugger/interpreter
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/codec/MASKS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/memory/NO_PAGE_FAULT
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/memory/EMPTY_UINT8ARRAY
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/memory/EMPTY_PAGE
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/arguments/RELEVANT_ARGS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/arguments/REQUIRED_BYTES
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/arguments/DECODERS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/instructions/INSTRUCTIONS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/instructions-exe/RUN
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/object/Object~visit (param $0 i32) (param $1 i32)
 )
 (func $~lib/array/Array<i32>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/typedarray/Uint8Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#__visit
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/instructions/Instruction>#__visit
 )
 (func $assembly/memory-page/Page~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/memory-page/RawPage~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/memory/Memory~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=8
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/memory-page/Arena~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/memory-page/RawPage>#__visit
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>~visit" (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#__visit"
 )
 (func $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#__visit
 )
 (func $assembly/memory/Result~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=8
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/memory/ChunkBytes~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/memory/Chunks~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=8
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/memory/PageData~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#__visit
 )
 (func $~lib/array/Array<u8>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#__visit
 )
 (func $~lib/function/Function<%28u8%29=>u8>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/function/Function<%28u8%29=>u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%29=>u8>#__visit
 )
 (func $assembly/interpreter/Interpreter~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=8
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/program/Program~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=8
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/program/Mask~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/program/JumpTable~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/program/BasicBlocks~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  local.set $cur
  local.get $cur
  local.get $this
  i32.const 20
  i32.sub
  call $~lib/rt/common/OBJECT#get:rtSize
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/staticarray/StaticArray<~lib/string/String>#__visit
 )
 (func $~lib/array/Array<u32>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#__visit
 )
 (func $~lib/dataview/DataView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/program/CodeAndMetadata~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/codec/Decoder~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/spi/StandardProgram~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=16
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=20
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=24
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/memory/MemoryBuilder~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<assembly/memory-page/Page>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/memory-page/Page>#__visit
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/api-internal/InitialPage>#__visit
 )
 (func $assembly/api-internal/InitialChunk~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#__visit
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#__visit
 )
 (func $~lib/array/Array<u64>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<u64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<u64>#__visit
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>~visit" (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#__visit"
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String>#__visit
 )
 (func $assembly/api-internal/VmOutput~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $assembly/api-internal/VmInput~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=16
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=20
  local.get $1
  call $~lib/rt/itcms/__visit
  local.get $0
  i32.load offset=24
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/string/String>#get:buffer (param $this i32) (result i32)
  local.get $this
  i32.load
 )
 (func $~lib/array/Array<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String>#get:_env (param $this i32) (result i32)
  local.get $this
  i32.load offset=4
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String>#__visit
 )
 (func $assembly/program/ResolvedArguments~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  local.get $1
  call $~lib/object/Object~visit
  local.get $0
  i32.load offset=32
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $assembly/program/ResolvedArguments
    block $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String>
     block $~lib/array/Array<~lib/string/String>
      block $assembly/api-internal/VmInput
       block $assembly/api-internal/VmOutput
        block $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String>
         block $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>"
          block $~lib/array/Array<u64>
           block $~lib/array/Array<assembly/gas-costs/BlockGasCost>
            block $assembly/gas-costs/BlockGasCost
             block $assembly/interpreter/BranchResult
              block $assembly/interpreter/DjumpResult
               block $~lib/array/Array<assembly/api-internal/InitialChunk>
                block $assembly/api-internal/InitialChunk
                 block $~lib/array/Array<assembly/api-internal/InitialPage>
                  block $assembly/api-internal/InitialPage
                   block $~lib/array/Array<assembly/memory-page/Page>
                    block $assembly/gas/GasCounterU64
                     block $assembly/memory/MemoryBuilder
                      block $assembly/spi/StandardProgram
                       block $assembly/codec/ValOffset<u32>
                        block $assembly/codec/Decoder
                         block $assembly/program/CodeAndMetadata
                          block $~lib/dataview/DataView
                           block $~lib/staticarray/StaticArray<bool>
                            block $~lib/array/Array<u32>
                             block $~lib/staticarray/StaticArray<~lib/string/String>
                              block $assembly/gas/GasCounter
                               block $~lib/staticarray/StaticArray<i32>
                                block $assembly/program/BasicBlocks
                                 block $assembly/program/JumpTable
                                  block $~lib/staticarray/StaticArray<u32>
                                   block $assembly/program/Mask
                                    block $assembly/program/Program
                                     block $assembly/interpreter/Interpreter
                                      block $~lib/function/Function<%28u8%29=>u8>
                                       block $~lib/array/Array<u8>
                                        block $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>
                                         block $assembly/memory/PageData
                                          block $assembly/memory/Chunks
                                           block $~lib/staticarray/StaticArray<u8>
                                            block $assembly/memory/ChunkBytes
                                             block $assembly/memory/Result
                                              block $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>
                                               block $assembly/instructions/outcome/OutcomeData
                                                block $"~lib/map/Map<u32,assembly/memory-page/Page>"
                                                 block $~lib/array/Array<assembly/memory-page/RawPage>
                                                  block $assembly/memory-page/Arena
                                                   block $assembly/memory/Memory
                                                    block $~lib/staticarray/StaticArray<u64>
                                                     block $assembly/memory-page/RawPage
                                                      block $assembly/memory-page/Page
                                                       block $assembly/memory/MaybePageFault
                                                        block $~lib/array/Array<assembly/instructions/Instruction>
                                                         block $assembly/arguments/Nibbles
                                                          block $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>
                                                           block $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>
                                                            block $assembly/arguments/Args
                                                             block $~lib/typedarray/Uint8Array
                                                              block $~lib/array/Array<i32>
                                                               block $~lib/arraybuffer/ArrayBufferView
                                                                block $~lib/string/String
                                                                 block $~lib/arraybuffer/ArrayBuffer
                                                                  block $~lib/object/Object
                                                                   local.get $0
                                                                   i32.const 8
                                                                   i32.sub
                                                                   i32.load
                                                                   br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/array/Array<i32> $~lib/typedarray/Uint8Array $assembly/arguments/Args $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args> $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args> $assembly/arguments/Nibbles $~lib/array/Array<assembly/instructions/Instruction> $assembly/memory/MaybePageFault $assembly/memory-page/Page $assembly/memory-page/RawPage $~lib/staticarray/StaticArray<u64> $assembly/memory/Memory $assembly/memory-page/Arena $~lib/array/Array<assembly/memory-page/RawPage> $"~lib/map/Map<u32,assembly/memory-page/Page>" $assembly/instructions/outcome/OutcomeData $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData> $assembly/memory/Result $assembly/memory/ChunkBytes $~lib/staticarray/StaticArray<u8> $assembly/memory/Chunks $assembly/memory/PageData $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData> $~lib/array/Array<u8> $~lib/function/Function<%28u8%29=>u8> $assembly/interpreter/Interpreter $assembly/program/Program $assembly/program/Mask $~lib/staticarray/StaticArray<u32> $assembly/program/JumpTable $assembly/program/BasicBlocks $~lib/staticarray/StaticArray<i32> $assembly/gas/GasCounter $~lib/staticarray/StaticArray<~lib/string/String> $~lib/array/Array<u32> $~lib/staticarray/StaticArray<bool> $~lib/dataview/DataView $assembly/program/CodeAndMetadata $assembly/codec/Decoder $assembly/codec/ValOffset<u32> $assembly/spi/StandardProgram $assembly/memory/MemoryBuilder $assembly/gas/GasCounterU64 $~lib/array/Array<assembly/memory-page/Page> $assembly/api-internal/InitialPage $~lib/array/Array<assembly/api-internal/InitialPage> $assembly/api-internal/InitialChunk $~lib/array/Array<assembly/api-internal/InitialChunk> $assembly/interpreter/DjumpResult $assembly/interpreter/BranchResult $assembly/gas-costs/BlockGasCost $~lib/array/Array<assembly/gas-costs/BlockGasCost> $~lib/array/Array<u64> $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>" $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String> $assembly/api-internal/VmOutput $assembly/api-internal/VmInput $~lib/array/Array<~lib/string/String> $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String> $assembly/program/ResolvedArguments $invalid
                                                                  end
                                                                  return
                                                                 end
                                                                 return
                                                                end
                                                                return
                                                               end
                                                               local.get $0
                                                               local.get $1
                                                               call $~lib/arraybuffer/ArrayBufferView~visit
                                                               return
                                                              end
                                                              local.get $0
                                                              local.get $1
                                                              call $~lib/array/Array<i32>~visit
                                                              return
                                                             end
                                                             local.get $0
                                                             local.get $1
                                                             call $~lib/typedarray/Uint8Array~visit
                                                             return
                                                            end
                                                            return
                                                           end
                                                           local.get $0
                                                           local.get $1
                                                           call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>~visit
                                                           return
                                                          end
                                                          local.get $0
                                                          local.get $1
                                                          call $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>~visit
                                                          return
                                                         end
                                                         return
                                                        end
                                                        local.get $0
                                                        local.get $1
                                                        call $~lib/array/Array<assembly/instructions/Instruction>~visit
                                                        return
                                                       end
                                                       return
                                                      end
                                                      local.get $0
                                                      local.get $1
                                                      call $assembly/memory-page/Page~visit
                                                      return
                                                     end
                                                     local.get $0
                                                     local.get $1
                                                     call $assembly/memory-page/RawPage~visit
                                                     return
                                                    end
                                                    return
                                                   end
                                                   local.get $0
                                                   local.get $1
                                                   call $assembly/memory/Memory~visit
                                                   return
                                                  end
                                                  local.get $0
                                                  local.get $1
                                                  call $assembly/memory-page/Arena~visit
                                                  return
                                                 end
                                                 local.get $0
                                                 local.get $1
                                                 call $~lib/array/Array<assembly/memory-page/RawPage>~visit
                                                 return
                                                end
                                                local.get $0
                                                local.get $1
                                                call $"~lib/map/Map<u32,assembly/memory-page/Page>~visit"
                                                return
                                               end
                                               return
                                              end
                                              local.get $0
                                              local.get $1
                                              call $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>~visit
                                              return
                                             end
                                             local.get $0
                                             local.get $1
                                             call $assembly/memory/Result~visit
                                             return
                                            end
                                            local.get $0
                                            local.get $1
                                            call $assembly/memory/ChunkBytes~visit
                                            return
                                           end
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $assembly/memory/Chunks~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $assembly/memory/PageData~visit
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $~lib/array/Array<u8>~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $~lib/function/Function<%28u8%29=>u8>~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $assembly/interpreter/Interpreter~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $assembly/program/Program~visit
                                    return
                                   end
                                   local.get $0
                                   local.get $1
                                   call $assembly/program/Mask~visit
                                   return
                                  end
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $assembly/program/JumpTable~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $assembly/program/BasicBlocks~visit
                                return
                               end
                               return
                              end
                              return
                             end
                             local.get $0
                             local.get $1
                             call $~lib/staticarray/StaticArray<~lib/string/String>~visit
                             return
                            end
                            local.get $0
                            local.get $1
                            call $~lib/array/Array<u32>~visit
                            return
                           end
                           return
                          end
                          local.get $0
                          local.get $1
                          call $~lib/dataview/DataView~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $assembly/program/CodeAndMetadata~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $assembly/codec/Decoder~visit
                        return
                       end
                       return
                      end
                      local.get $0
                      local.get $1
                      call $assembly/spi/StandardProgram~visit
                      return
                     end
                     local.get $0
                     local.get $1
                     call $assembly/memory/MemoryBuilder~visit
                     return
                    end
                    return
                   end
                   local.get $0
                   local.get $1
                   call $~lib/array/Array<assembly/memory-page/Page>~visit
                   return
                  end
                  return
                 end
                 local.get $0
                 local.get $1
                 call $~lib/array/Array<assembly/api-internal/InitialPage>~visit
                 return
                end
                local.get $0
                local.get $1
                call $assembly/api-internal/InitialChunk~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/array/Array<assembly/api-internal/InitialChunk>~visit
               return
              end
              return
             end
             return
            end
            return
           end
           local.get $0
           local.get $1
           call $~lib/array/Array<assembly/gas-costs/BlockGasCost>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/array/Array<u64>~visit
          return
         end
         local.get $0
         local.get $1
         call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>~visit"
         return
        end
        local.get $0
        local.get $1
        call $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String>~visit
        return
       end
       local.get $0
       local.get $1
       call $assembly/api-internal/VmOutput~visit
       return
      end
      local.get $0
      local.get $1
      call $assembly/api-internal/VmInput~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/array/Array<~lib/string/String>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String>~visit
    return
   end
   local.get $0
   local.get $1
   call $assembly/program/ResolvedArguments~visit
   return
  end
  unreachable
 )
 (func $~setArgumentsLength (param $0 i32)
  local.get $0
  global.set $~argumentsLength
 )
 (func $~start
  call $start:assembly/index
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 53536
   i32.const 53584
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $assembly/arguments/Args#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/arguments/Args#set:a
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/arguments/Args#set:b
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/arguments/Args#set:c
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/arguments/Args#set:d
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/arguments/Args.from (param $a i32) (param $b i32) (param $c i32) (param $d i32) (result i32)
  (local $x i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/arguments/Args#constructor
  local.tee $x
  i32.store
  local.get $x
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $a
  call $assembly/arguments/Args#set:a
  local.get $x
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $b
  call $assembly/arguments/Args#set:b
  local.get $x
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $c
  call $assembly/arguments/Args#set:c
  local.get $x
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $d
  call $assembly/arguments/Args#set:d
  local.get $x
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/typedarray/Uint8Array#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/typedarray/Uint8Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  block $"~lib/typedarray/SUBARRAY<~lib/typedarray/Uint8Array,u8>|inlined.0" (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $array
   i32.store
   local.get $begin
   local.set $begin|4
   local.get $end
   local.set $end|5
   local.get $array
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store offset=4
   local.get $19
   call $~lib/typedarray/Uint8Array#get:length
   local.set $len
   local.get $begin|4
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $len
    local.get $begin|4
    i32.add
    local.tee $7
    i32.const 0
    local.tee $8
    local.get $7
    local.get $8
    i32.gt_s
    select
   else
    local.get $begin|4
    local.tee $9
    local.get $len
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_s
    select
   end
   local.set $begin|4
   local.get $end|5
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $len
    local.get $end|5
    i32.add
    local.tee $11
    i32.const 0
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_s
    select
   else
    local.get $end|5
    local.tee $13
    local.get $len
    local.tee $14
    local.get $13
    local.get $14
    i32.lt_s
    select
   end
   local.set $end|5
   local.get $end|5
   local.tee $15
   local.get $begin|4
   local.tee $16
   local.get $15
   local.get $16
   i32.gt_s
   select
   local.set $end|5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store offset=8
   local.get $array
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store offset=4
   local.get $19
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $buf
   local.get $out
   local.get $buf
   i32.store
   local.get $out
   local.get $buf
   i32.const 0
   call $~lib/rt/itcms/__link
   local.get $out
   local.get $array
   local.set $19
   global.get $~lib/memory/__stack_pointer
   local.get $19
   i32.store offset=4
   local.get $19
   call $~lib/arraybuffer/ArrayBufferView#get:dataStart
   local.get $begin|4
   i32.const 0
   i32.shl
   i32.add
   i32.store offset=4
   local.get $out
   local.get $end|5
   local.get $begin|4
   i32.sub
   i32.const 0
   i32.shl
   i32.store offset=8
   local.get $out
   br $"~lib/typedarray/SUBARRAY<~lib/typedarray/Uint8Array,u8>|inlined.0"
  end
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
  return
 )
 (func $~lib/typedarray/Uint8Array#__get (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.ge_u
  if
   i32.const 480
   i32.const 720
   i32.const 167
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $index
  i32.add
  i32.load8_u
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/arguments/decodeI32 (param $input i32) (param $start i32) (param $end i32) (result i32)
  (local $data i32)
  (local $value1 f64)
  (local $value2 f64)
  (local $len i32)
  (local $num i32)
  (local $i i32)
  (local $msb i32)
  (local $prefix i32)
  (local $i|11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $input
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $start
  local.get $end
  local.get $start
  i32.gt_u
  if (result i32)
   local.get $end
  else
   local.get $start
  end
  call $~lib/typedarray/Uint8Array#subarray
  local.tee $data
  i32.store offset=4
  block $~lib/math/NativeMath.min|inlined.0 (result f64)
   f64.const 4
   local.set $value1
   local.get $data
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store
   local.get $12
   call $~lib/typedarray/Uint8Array#get:length
   f64.convert_i32_s
   local.set $value2
   local.get $value1
   local.get $value2
   f64.min
   br $~lib/math/NativeMath.min|inlined.0
  end
  i32.trunc_sat_f64_u
  local.set $len
  i32.const 0
  local.set $num
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_u
   if
    local.get $num
    local.get $data
    local.set $12
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store
    local.get $12
    local.get $i
    call $~lib/typedarray/Uint8Array#__get
    local.get $i
    i32.const 8
    i32.mul
    i32.shl
    i32.or
    local.set $num
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $len
  i32.const 0
  i32.gt_u
  if (result i32)
   local.get $data
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store
   local.get $12
   local.get $len
   i32.const 1
   i32.sub
   call $~lib/typedarray/Uint8Array#__get
   i32.const 128
   i32.and
  else
   i32.const 0
  end
  local.set $msb
  local.get $msb
  i32.const 0
  i32.gt_u
  if (result i32)
   i32.const 255
  else
   i32.const 0
  end
  local.set $prefix
  local.get $len
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   i32.const 4
   i32.lt_u
   if
    local.get $num
    local.get $prefix
    local.get $i|11
    i32.const 8
    i32.mul
    i32.shl
    i32.or
    local.set $num
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  local.get $num
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $start:assembly/arguments~anonymous|1 (param $data i32) (param $lim i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 0
  local.get $lim
  call $assembly/arguments/decodeI32
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/arguments/Nibbles#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/arguments/Nibbles#set:low
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/arguments/Nibbles#set:hig
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/arguments/nibbles (param $byte i32) (result i32)
  (local $low i32)
  (local $hig i32)
  (local $n i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $byte
  i32.const 15
  i32.and
  local.set $low
  local.get $byte
  i32.const 255
  i32.and
  i32.const 4
  i32.const 7
  i32.and
  i32.shr_u
  local.set $hig
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/arguments/Nibbles#constructor
  local.tee $n
  i32.store
  local.get $n
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $low
  call $assembly/arguments/Nibbles#set:low
  local.get $n
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $hig
  call $assembly/arguments/Nibbles#set:hig
  local.get $n
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/arguments/twoImm (param $data i32) (param $lim i32) (result i32)
  (local $n i32)
  (local $value1 f64)
  (local $value2 f64)
  (local $split i32)
  (local $first i32)
  (local $second i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $n
  i32.store offset=4
  block $~lib/math/NativeMath.min|inlined.1 (result f64)
   f64.const 4
   local.set $value1
   local.get $n
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $assembly/arguments/Nibbles#get:low
   i32.const 255
   i32.and
   f64.convert_i32_u
   local.set $value2
   local.get $value1
   local.get $value2
   f64.min
   br $~lib/math/NativeMath.min|inlined.1
  end
  i32.trunc_sat_f64_s
  i32.const 1
  i32.add
  local.set $split
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 1
  local.get $split
  call $assembly/arguments/decodeI32
  local.set $first
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $split
  local.get $lim
  call $assembly/arguments/decodeI32
  local.set $second
  local.get $first
  local.get $second
  i32.const 0
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $start:assembly/arguments~anonymous|2 (param $data i32) (param $lim i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $lim
  call $assembly/arguments/twoImm
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $start:assembly/arguments~anonymous|3 (param $data i32) (param $lim i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 0
  local.get $lim
  call $assembly/arguments/decodeI32
  i32.const 0
  i32.const 0
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/arguments~anonymous|4 (param $data i32) (param $lim i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 1
  local.get $lim
  call $assembly/arguments/decodeI32
  i32.const 0
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/typedarray/Uint8Array#subarray@varargs (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $begin
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $begin
  local.get $end
  call $~lib/typedarray/Uint8Array#subarray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/arguments/decodeU32 (param $data i32) (result i32)
  (local $num i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  local.set $num
  local.get $num
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 8
  i32.shl
  i32.or
  local.set $num
  local.get $num
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 16
  i32.shl
  i32.or
  local.set $num
  local.get $num
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__get
  i32.const 24
  i32.shl
  i32.or
  local.set $num
  local.get $num
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/arguments~anonymous|5 (param $data i32) (param $_lim i32) (result i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $data
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Nibbles#get:low
  local.set $a
  local.get $data
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#subarray@varargs
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/decodeU32
  local.set $b
  local.get $data
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 5
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#subarray@varargs
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/decodeU32
  local.set $c
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  local.get $c
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/arguments~anonymous|6 (param $data i32) (param $lim i32) (result i32)
  (local $n i32)
  (local $value1 f64)
  (local $value2 f64)
  (local $split i32)
  (local $immA i32)
  (local $immB i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $n
  i32.store offset=4
  block $~lib/math/NativeMath.min|inlined.2 (result f64)
   f64.const 4
   local.set $value1
   local.get $n
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $assembly/arguments/Nibbles#get:hig
   i32.const 255
   i32.and
   f64.convert_i32_u
   local.set $value2
   local.get $value1
   local.get $value2
   f64.min
   br $~lib/math/NativeMath.min|inlined.2
  end
  i32.trunc_sat_f64_s
  i32.const 1
  i32.add
  local.set $split
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 1
  local.get $split
  call $assembly/arguments/decodeI32
  local.set $immA
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $split
  local.get $lim
  call $assembly/arguments/decodeI32
  local.set $immB
  local.get $n
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  local.get $immA
  local.get $immB
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $start:assembly/arguments~anonymous|7 (param $data i32) (param $lim i32) (result i32)
  (local $n i32)
  (local $value1 f64)
  (local $value2 f64)
  (local $split i32)
  (local $immA i32)
  (local $offs i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $n
  i32.store offset=4
  block $~lib/math/NativeMath.min|inlined.3 (result f64)
   f64.const 4
   local.set $value1
   local.get $n
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $assembly/arguments/Nibbles#get:hig
   i32.const 255
   i32.and
   f64.convert_i32_u
   local.set $value2
   local.get $value1
   local.get $value2
   f64.min
   br $~lib/math/NativeMath.min|inlined.3
  end
  i32.trunc_sat_f64_s
  i32.const 1
  i32.add
  local.set $split
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 1
  local.get $split
  call $assembly/arguments/decodeI32
  local.set $immA
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $split
  local.get $lim
  call $assembly/arguments/decodeI32
  local.set $offs
  local.get $n
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  local.get $immA
  local.get $offs
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $start:assembly/arguments~anonymous|8 (param $data i32) (param $_lim i32) (result i32)
  (local $n i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $n
  i32.store offset=4
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Nibbles#get:hig
  i32.const 255
  i32.and
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  i32.const 0
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/arguments~anonymous|9 (param $data i32) (param $lim i32) (result i32)
  (local $n i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $n
  i32.store offset=4
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Nibbles#get:hig
  i32.const 255
  i32.and
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  local.get $data
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 1
  local.get $lim
  call $assembly/arguments/decodeI32
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/arguments~anonymous|10 (param $data i32) (param $lim i32) (result i32)
  (local $n i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $n
  i32.store offset=4
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Nibbles#get:hig
  i32.const 255
  i32.and
  local.get $n
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  local.get $data
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 1
  local.get $lim
  call $assembly/arguments/decodeI32
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/arguments~anonymous|11 (param $data i32) (param $lim i32) (result i32)
  (local $n i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $n
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  i32.const 1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#subarray@varargs
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $lim
  i32.const 1
  i32.gt_u
  if (result i32)
   local.get $lim
   i32.const 1
   i32.sub
  else
   i32.const 0
  end
  call $assembly/arguments/twoImm
  local.tee $result
  i32.store offset=12
  local.get $n
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Nibbles#get:hig
  i32.const 255
  i32.and
  local.get $n
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:a
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/arguments/Args.from
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/arguments~anonymous|12 (param $data i32) (param $_lim i32) (result i32)
  (local $a i32)
  (local $b i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $a
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  call $assembly/arguments/nibbles
  local.tee $b
  i32.store offset=8
  local.get $a
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Nibbles#get:hig
  i32.const 255
  i32.and
  local.get $a
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  local.get $b
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Nibbles#get:low
  i32.const 255
  i32.and
  i32.const 0
  call $assembly/arguments/Args.from
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/array/ensureCapacity (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $oldData i32)
  (local $6 i32)
  (local $7 i32)
  (local $newCapacity i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $newData i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $array
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    i32.const 8176
    i32.const 8128
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $array
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $oldData
   local.get $newSize
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $newCapacity
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $9
    i32.const 1073741820
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_u
    select
    local.tee $11
    local.get $newCapacity
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_u
    select
    local.set $newCapacity
   end
   local.get $oldData
   local.get $newCapacity
   call $~lib/rt/itcms/__renew
   local.set $newData
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $newData
   local.get $oldData
   i32.ne
   if
    local.get $array
    local.get $newData
    i32.store
    local.get $array
    local.get $newData
    i32.store offset=4
    local.get $array
    local.get $newData
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $array
   local.get $newCapacity
   i32.store offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/instructions/Instruction>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 480
    i32.const 8128
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/instructions/Instruction>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/instructions/Instruction>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  i32.const 0
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/instructions
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1296
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.Zero
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  global.set $assembly/instructions/MISSING_INSTRUCTION
  i32.const 1344
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  global.set $assembly/instructions/SBRK
  global.get $~lib/memory/__stack_pointer
  i32.const 231
  i32.const 2
  i32.const 10
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.const 1376
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.Zero
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 1
  i32.const 1408
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.Zero
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 2
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 3
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 4
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 5
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 6
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 7
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 8
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 9
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 10
  i32.const 1456
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 11
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 12
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 13
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 14
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 15
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 16
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 17
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 18
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 19
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 20
  i32.const 1488
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneExtImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 21
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 22
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 23
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 24
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 25
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 26
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 27
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 28
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 29
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 30
  i32.const 1536
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 31
  i32.const 1584
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 32
  i32.const 1632
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 33
  i32.const 1680
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 34
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 35
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 36
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 37
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 38
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 39
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 40
  i32.const 1728
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 41
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 42
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 43
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 44
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 45
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 46
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 47
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 48
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 49
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 50
  i32.const 1760
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 51
  i32.const 1808
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 52
  i32.const 1856
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 53
  i32.const 1904
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 54
  i32.const 1952
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 55
  i32.const 2000
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 56
  i32.const 2048
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 57
  i32.const 2096
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 58
  i32.const 2144
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 59
  i32.const 2192
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 60
  i32.const 2240
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 61
  i32.const 2288
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 62
  i32.const 2336
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 63
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 64
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 65
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 66
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 67
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 68
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 69
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 70
  i32.const 2384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegTwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 71
  i32.const 2448
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegTwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 72
  i32.const 2512
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegTwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 73
  i32.const 2576
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegTwoImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 74
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 75
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 76
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 77
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 78
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 79
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 80
  i32.const 2640
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 81
  i32.const 2688
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 82
  i32.const 2736
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 83
  i32.const 2784
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 84
  i32.const 2848
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 85
  i32.const 2912
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 86
  i32.const 2976
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 87
  i32.const 3040
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 88
  i32.const 3104
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 89
  i32.const 3168
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 90
  i32.const 3232
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 91
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 92
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 93
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 94
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 95
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 96
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 97
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 98
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 99
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 100
  i32.const 3296
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 101
  global.get $assembly/instructions/SBRK
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 102
  i32.const 3344
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 103
  i32.const 3408
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 104
  i32.const 3472
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 105
  i32.const 3536
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 106
  i32.const 3600
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 107
  i32.const 3664
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 108
  i32.const 3728
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 109
  i32.const 3776
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 110
  i32.const 3824
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 111
  i32.const 3872
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 112
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 113
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 114
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 115
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 116
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 117
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 118
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 119
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 120
  i32.const 3920
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 121
  i32.const 3968
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 122
  i32.const 4016
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 123
  i32.const 4064
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 124
  i32.const 4112
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 125
  i32.const 4160
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 126
  i32.const 4208
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 127
  i32.const 4256
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 128
  i32.const 4304
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 129
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 130
  i32.const 4400
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 131
  i32.const 4448
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 132
  i32.const 4496
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 133
  i32.const 4544
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 134
  i32.const 4592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 135
  i32.const 4624
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 136
  i32.const 4672
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 137
  i32.const 4720
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 138
  i32.const 4768
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 139
  i32.const 4816
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 140
  i32.const 4864
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 141
  i32.const 4912
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 142
  i32.const 4960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 143
  i32.const 5008
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 144
  i32.const 5056
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 145
  i32.const 5120
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 146
  i32.const 5184
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 147
  i32.const 5248
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 148
  i32.const 5296
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 149
  i32.const 5344
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 150
  i32.const 5392
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 151
  i32.const 5440
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 152
  i32.const 5488
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 153
  i32.const 5536
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 154
  i32.const 5584
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 155
  i32.const 5632
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 156
  i32.const 5696
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 157
  i32.const 5760
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 158
  i32.const 5824
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 159
  i32.const 5872
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 160
  i32.const 5936
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 161
  i32.const 5984
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneImm
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 162
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 163
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 164
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 165
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 166
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 167
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 168
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 169
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 170
  i32.const 6048
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 171
  i32.const 6096
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 172
  i32.const 6144
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 173
  i32.const 6192
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 174
  i32.const 6240
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 175
  i32.const 6288
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegOneOff
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 176
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 177
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 178
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 179
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 180
  i32.const 6336
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.TwoRegTwoImm
  i64.const 1
  i32.const 1
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 181
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 182
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 183
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 184
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 185
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 186
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 187
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 188
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 189
  global.get $assembly/instructions/MISSING_INSTRUCTION
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 190
  i32.const 6400
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 191
  i32.const 6432
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 192
  i32.const 6464
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 193
  i32.const 6496
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 194
  i32.const 6544
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 195
  i32.const 6592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 196
  i32.const 6640
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 197
  i32.const 6688
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 198
  i32.const 6736
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 199
  i32.const 6784
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 200
  i32.const 6832
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 201
  i32.const 6864
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 202
  i32.const 6896
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 203
  i32.const 6928
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 204
  i32.const 6976
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 205
  i32.const 7024
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 206
  i32.const 7072
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 207
  i32.const 7120
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 208
  i32.const 7168
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 209
  i32.const 7216
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 210
  i32.const 7264
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 211
  i32.const 7296
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 212
  i32.const 7328
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 213
  i32.const 7360
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 214
  i32.const 7408
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 215
  i32.const 7456
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 216
  i32.const 7504
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 217
  i32.const 7552
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 218
  i32.const 7600
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 219
  i32.const 7648
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 220
  i32.const 7696
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 221
  i32.const 7744
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 222
  i32.const 7792
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 223
  i32.const 7840
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 224
  i32.const 7888
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 225
  i32.const 7936
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 226
  i32.const 7968
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 227
  i32.const 8000
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 228
  i32.const 8032
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 229
  i32.const 8064
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  i32.const 230
  i32.const 8096
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  global.get $assembly/arguments/Arguments.ThreeReg
  i64.const 1
  i32.const 0
  call $assembly/instructions/instruction
  call $~lib/array/Array<assembly/instructions/Instruction>#__set
  local.get $0
  global.set $assembly/instructions/INSTRUCTIONS
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/memory/MaybePageFault#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/memory/MaybePageFault#set:isFault
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/memory/MaybePageFault#set:isAccess
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/memory/MaybePageFault#set:fault
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8224
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $buffer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/memory-page/Page#constructor (param $this i32) (param $access i32) (param $raw i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $access
  call $assembly/memory-page/Page#set:access
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $raw
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/memory-page/Page#set:raw
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/memory-page/RawPage#constructor (param $this i32) (param $id i32) (param $page i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $id
  call $assembly/memory-page/RawPage#set:id
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $page
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/memory-page/RawPage#set:page
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $start:assembly/memory
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  call $start:assembly/memory-page
  i32.const 0
  call $assembly/memory/MaybePageFault#constructor
  global.set $assembly/memory/NO_PAGE_FAULT
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  global.set $assembly/memory/EMPTY_UINT8ARRAY
  i32.const 0
  global.get $assembly/memory-page/Access.None
  i32.const 0
  i32.const -1
  i32.const 0
  call $assembly/memory-page/RawPage#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/memory-page/Page#constructor
  global.set $assembly/memory/EMPTY_PAGE
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/staticarray/StaticArray<u64>#__get (param $this i32) (param $index i32) (result i64)
  (local $value i64)
  (local $3 i32)
  (local $4 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<u64>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/staticarray/StaticArray<u64>#__set (param $this i32) (param $index i32) (param $value i64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<u64>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<u64>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/instructions/outcome/OutcomeData#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 19
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  global.get $assembly/instructions/outcome/Outcome.Ok
  call $assembly/instructions/outcome/OutcomeData#set:outcome
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#set:staticJump
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#set:dJump
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  global.get $assembly/instructions/outcome/Result.PANIC
  call $assembly/instructions/outcome/OutcomeData#set:result
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#set:exitCode
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $start:assembly/instructions/bit~anonymous|0 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.popcnt
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|1 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  i32.popcnt
  i64.extend_i32_u
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|2 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.clz
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|3 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  i32.clz
  i64.extend_i32_u
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|4 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.ctz
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|5 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  i32.ctz
  i64.extend_i32_u
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|6 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/utils/u8SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|7 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/utils/u16SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|8 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  i32.const 65535
  i32.and
  i64.extend_i32_u
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/bit~anonymous|9 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $~lib/polyfills/bswap<u64>
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/instructions/outcome/staticJump (param $offset i32) (result i32)
  (local $r i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#constructor
  local.tee $r
  i32.store
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  global.get $assembly/instructions/outcome/Outcome.StaticJump
  call $assembly/instructions/outcome/OutcomeData#set:outcome
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $offset
  call $assembly/instructions/outcome/OutcomeData#set:staticJump
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/instructions/branch~anonymous|0 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  local.set $b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $b
  i64.eq
  if
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/branch~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  local.set $b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $b
  i64.ne
  if
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/branch~anonymous|2 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  local.set $b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $b
  i64.lt_u
  if
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/branch~anonymous|3 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  local.set $b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $b
  i64.le_u
  if
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/branch~anonymous|4 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  local.set $b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $b
  i64.ge_u
  if
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/branch~anonymous|5 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  local.set $b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $b
  i64.gt_u
  if
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/branch~anonymous|6 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.lt_s
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|7 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.le_s
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|8 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.ge_s
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|9 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.gt_s
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|10 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.eq
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|11 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.ne
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|12 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.lt_u
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|13 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.lt_s
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|14 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.ge_u
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/branch~anonymous|15 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.ge_s
  if
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/outcome/staticJump
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/jump~anonymous|0 (param $args i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Args#get:a
  call $assembly/instructions/outcome/staticJump
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/instructions/outcome/dJump (param $address i32) (result i32)
  (local $r i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#constructor
  local.tee $r
  i32.store
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  global.get $assembly/instructions/outcome/Outcome.DynamicJump
  call $assembly/instructions/outcome/OutcomeData#set:outcome
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $address
  call $assembly/instructions/outcome/OutcomeData#set:dJump
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/instructions/jump~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $address i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  local.get $address
  call $assembly/instructions/outcome/dJump
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/jump~anonymous|2 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/outcome/staticJump
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/jump~anonymous|3 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $address i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:d
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  local.get $address
  call $assembly/instructions/outcome/dJump
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/load~anonymous|0 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  i64.const 32
  i64.shl
  i64.add
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/load~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/memory/Chunks#constructor (param $this i32) (param $fault i32) (param $first i32) (param $second i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 24
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#set:fault
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $first
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#set:first
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $second
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#set:second
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/memory/Chunks#constructor@varargs (param $this i32) (param $fault i32) (param $first i32) (param $second i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/memory/EMPTY_UINT8ARRAY
    local.tee $first
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/memory/EMPTY_UINT8ARRAY
   local.tee $second
   i32.store offset=4
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  local.get $fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  local.get $first
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  local.get $second
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=20
  local.get $4
  call $assembly/memory/Chunks#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#find" (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:buckets"
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:bucketsMask"
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:taggedNext"
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:key"
     local.get $key
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#has" (param $this i32) (param $key i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $key
  local.get $key
  call $~lib/util/hash/HASH<u32>
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#find"
  i32.const 0
  i32.ne
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/memory/PageData#constructor (param $this i32) (param $fault i32) (param $page i32) (param $relativeAddress i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 25
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/PageData#set:fault
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $page
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/PageData#set:page
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $relativeAddress
  call $assembly/memory/PageData#set:relativeAddress
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/memory/fault (param $address i32) (result i32)
  (local $r i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/MaybePageFault#constructor
  local.tee $r
  i32.store
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 1
  call $assembly/memory/MaybePageFault#set:isFault
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $address
  call $assembly/memory/MaybePageFault#set:fault
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#get" (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $key
  local.get $key
  call $~lib/util/hash/HASH<u32>
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#find"
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 9376
   i32.const 9440
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:value"
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/memory-page/Page#can (param $this i32) (param $access i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/memory-page/Page#get:access
  global.get $assembly/memory-page/Access.Write
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $assembly/memory-page/Page#get:access
   local.get $access
   i32.eq
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/memory/Memory#getPage (param $this i32) (param $access i32) (param $address i32) (result i32)
  (local $pageIdx i32)
  (local $relAddress i32)
  (local $pageStart i32)
  (local $page i32)
  (local $f i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $address
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shr_u
  local.set $pageIdx
  local.get $address
  global.get $assembly/memory-page/PAGE_SIZE
  i32.rem_u
  local.set $relAddress
  local.get $pageIdx
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shl
  local.set $pageStart
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  call $assembly/memory/Memory#get:pages
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $pageIdx
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#has"
  i32.eqz
  if
   i32.const 0
   local.get $pageStart
   call $assembly/memory/fault
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   global.get $assembly/memory/EMPTY_PAGE
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   local.get $relAddress
   call $assembly/memory/PageData#constructor
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  call $assembly/memory/Memory#get:pages
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $pageIdx
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get"
  local.tee $page
  i32.store offset=8
  local.get $page
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $access
  call $assembly/memory-page/Page#can
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $pageStart
   call $assembly/memory/fault
   local.tee $f
   i32.store offset=12
   local.get $f
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.const 1
   call $assembly/memory/MaybePageFault#set:isAccess
   i32.const 0
   local.get $f
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   global.get $assembly/memory/EMPTY_PAGE
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   local.get $relAddress
   call $assembly/memory/PageData#constructor
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  i32.const 0
  global.get $assembly/memory/NO_PAGE_FAULT
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $page
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  local.get $relAddress
  call $assembly/memory/PageData#constructor
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/typedarray/Uint8Array#fill (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/typedarray/Uint8Array#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u8>
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/typedarray/Uint8Array#fill@varargs (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $start
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $value
  local.get $start
  local.get $end
  call $~lib/typedarray/Uint8Array#fill
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/memory-page/RawPage#get:data (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/memory-page/RawPage#get:page
  i32.const 0
  i32.eq
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 0
   global.get $assembly/memory-page/PAGE_SIZE
   call $~lib/typedarray/Uint8Array#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/typedarray/Uint8Array#fill@varargs
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $assembly/memory-page/RawPage#set:page
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/memory-page/RawPage#get:page
  local.tee $1
  i32.store offset=12
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 9488
   i32.const 9616
   i32.const 46
   i32.const 12
   call $~lib/builtins/abort
   unreachable
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/memory/Memory#getChunks (param $this i32) (param $access i32) (param $address i32) (param $bytes i32) (result i32)
  (local $pageData i32)
  (local $page i32)
  (local $relativeAddress i32)
  (local $endAddress i32)
  (local $needSecondPage i32)
  (local $first i32)
  (local $secondPageIdx i32)
  (local $secondPageStart i32)
  (local $secondPage i32)
  (local $f i32)
  (local $firstChunk i32)
  (local $secondChunk i32)
  (local $16 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $bytes
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
  if
   i32.const 0
   global.get $assembly/memory/NO_PAGE_FAULT
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store
   local.get $16
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $assembly/memory/Chunks#constructor@varargs
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  local.get $access
  local.get $address
  call $assembly/memory/Memory#getPage
  local.tee $pageData
  i32.store offset=4
  local.get $pageData
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=8
  local.get $16
  call $assembly/memory/PageData#get:fault
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  call $assembly/memory/MaybePageFault#get:isFault
  if
   i32.const 0
   local.get $pageData
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store offset=8
   local.get $16
   call $assembly/memory/PageData#get:fault
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store
   local.get $16
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $assembly/memory/Chunks#constructor@varargs
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $pageData
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  call $assembly/memory/PageData#get:page
  local.tee $page
  i32.store offset=12
  local.get $pageData
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  call $assembly/memory/PageData#get:relativeAddress
  local.set $relativeAddress
  local.get $relativeAddress
  local.get $bytes
  i32.const 255
  i32.and
  i32.add
  local.set $endAddress
  local.get $endAddress
  global.get $assembly/memory-page/PAGE_SIZE
  i32.gt_u
  local.set $needSecondPage
  local.get $needSecondPage
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $page
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store offset=16
   local.get $16
   call $assembly/memory-page/Page#get:raw
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store offset=8
   local.get $16
   call $assembly/memory-page/RawPage#get:data
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store
   local.get $16
   local.get $relativeAddress
   local.get $endAddress
   call $~lib/typedarray/Uint8Array#subarray
   local.tee $first
   i32.store offset=20
   i32.const 0
   global.get $assembly/memory/NO_PAGE_FAULT
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store
   local.get $16
   local.get $first
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store offset=8
   local.get $16
   i32.const 2
   global.set $~argumentsLength
   i32.const 0
   call $assembly/memory/Chunks#constructor@varargs
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  local.get $address
  local.get $bytes
  i32.const 255
  i32.and
  i32.add
  i64.extend_i32_u
  global.get $assembly/memory/MEMORY_SIZE
  i64.rem_s
  i32.wrap_i64
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shr_u
  local.set $secondPageIdx
  local.get $secondPageIdx
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shl
  local.set $secondPageStart
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=8
  local.get $16
  call $assembly/memory/Memory#get:pages
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  local.get $secondPageIdx
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#has"
  i32.eqz
  if
   i32.const 0
   local.get $secondPageStart
   call $assembly/memory/fault
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store
   local.get $16
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $assembly/memory/Chunks#constructor@varargs
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=8
  local.get $16
  call $assembly/memory/Memory#get:pages
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  local.get $secondPageIdx
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get"
  local.tee $secondPage
  i32.store offset=24
  local.get $secondPage
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  local.get $access
  call $assembly/memory-page/Page#can
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $secondPageStart
   call $assembly/memory/fault
   local.tee $f
   i32.store offset=28
   local.get $f
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store
   local.get $16
   i32.const 1
   call $assembly/memory/MaybePageFault#set:isAccess
   i32.const 0
   local.get $f
   local.set $16
   global.get $~lib/memory/__stack_pointer
   local.get $16
   i32.store
   local.get $16
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $assembly/memory/Chunks#constructor@varargs
   local.set $16
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $16
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $page
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=16
  local.get $16
  call $assembly/memory-page/Page#get:raw
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=8
  local.get $16
  call $assembly/memory-page/RawPage#get:data
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  local.get $relativeAddress
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#subarray@varargs
  local.tee $firstChunk
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $secondPage
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=16
  local.get $16
  call $assembly/memory-page/Page#get:raw
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=8
  local.get $16
  call $assembly/memory-page/RawPage#get:data
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  i32.const 0
  local.get $relativeAddress
  local.get $bytes
  i32.const 255
  i32.and
  i32.add
  global.get $assembly/memory-page/PAGE_SIZE
  i32.sub
  call $~lib/typedarray/Uint8Array#subarray
  local.tee $secondChunk
  i32.store offset=36
  i32.const 0
  global.get $assembly/memory/NO_PAGE_FAULT
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store
  local.get $16
  local.get $firstChunk
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=8
  local.get $16
  local.get $secondChunk
  local.set $16
  global.get $~lib/memory/__stack_pointer
  local.get $16
  i32.store offset=16
  local.get $16
  call $assembly/memory/Chunks#constructor
  local.set $16
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $16
  return
 )
 (func $assembly/memory/ChunkBytes#constructor (param $this i32) (param $fault i32) (param $bytes i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 22
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $fault
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/memory/ChunkBytes#set:fault
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $bytes
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/memory/ChunkBytes#set:bytes
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/memory/ChunkBytes#constructor@varargs (param $this i32) (param $fault i32) (param $bytes i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#constructor
   local.tee $bytes
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $fault
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $bytes
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $assembly/memory/ChunkBytes#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/staticarray/StaticArray<u8>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<u8>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<u8>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/memory/getBytes (param $bytes i32) (param $first i32) (param $second i32) (result i32)
  (local $res i32)
  (local $len i32)
  (local $i i32)
  (local $i|6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $bytes
  i32.const 255
  i32.and
  call $~lib/staticarray/StaticArray<u8>#constructor
  local.tee $res
  i32.store
  local.get $first
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $res
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    local.get $i
    local.get $first
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $7
    local.get $i
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/staticarray/StaticArray<u8>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $i|6
  loop $for-loop|1
   local.get $i|6
   local.get $second
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   call $~lib/typedarray/Uint8Array#get:length
   i32.lt_s
   if
    local.get $res
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    local.get $len
    local.get $i|6
    i32.add
    local.get $second
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $7
    local.get $i|6
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/staticarray/StaticArray<u8>#__set
    local.get $i|6
    i32.const 1
    i32.add
    local.set $i|6
    br $for-loop|1
   end
  end
  local.get $res
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/memory/Memory#getBytes (param $this i32) (param $access i32) (param $address i32) (param $bytes i32) (result i32)
  (local $res i32)
  (local $data i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $access
  local.get $address
  local.get $bytes
  call $assembly/memory/Memory#getChunks
  local.tee $res
  i32.store offset=4
  local.get $res
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $assembly/memory/Chunks#get:fault
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $assembly/memory/MaybePageFault#get:isFault
  if
   i32.const 0
   local.get $res
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $6
   call $assembly/memory/Chunks#get:fault
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $assembly/memory/ChunkBytes#constructor@varargs
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $bytes
  local.get $res
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $assembly/memory/Chunks#get:first
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $res
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $assembly/memory/Chunks#get:second
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $assembly/memory/getBytes
  local.tee $data
  i32.store offset=16
  i32.const 0
  local.get $res
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $assembly/memory/Chunks#get:fault
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $data
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $assembly/memory/ChunkBytes#constructor
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/memory/Result#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 21
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  call $assembly/memory/Result#set:ok
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/memory/MaybePageFault#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $assembly/memory/Result#set:fault
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/staticarray/StaticArray<u8>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<u8>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/memory/Memory#getU8 (param $this i32) (param $address i32) (result i32)
  (local $res i32)
  (local $r i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  global.get $assembly/memory-page/Access.Read
  local.get $address
  i32.const 1
  call $assembly/memory/Memory#getBytes
  local.tee $res
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $r
  i32.store offset=8
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/Result#set:fault
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   call $assembly/memory/Result#set:ok
  end
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/instructions/outcome/okOrFault (param $pageFault i32) (result i32)
  (local $r i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#constructor
  local.tee $r
  i32.store
  local.get $pageFault
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/memory/MaybePageFault#get:isFault
  if
   local.get $r
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   global.get $assembly/instructions/outcome/Outcome.Result
   call $assembly/instructions/outcome/OutcomeData#set:outcome
   local.get $r
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   local.get $pageFault
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $assembly/memory/MaybePageFault#get:isAccess
   if (result i32)
    global.get $assembly/instructions/outcome/Result.FAULT_ACCESS
   else
    global.get $assembly/instructions/outcome/Result.FAULT
   end
   call $assembly/instructions/outcome/OutcomeData#set:result
   local.get $r
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   local.get $pageFault
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $assembly/memory/MaybePageFault#get:fault
   call $assembly/instructions/outcome/OutcomeData#set:exitCode
  end
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/instructions/load~anonymous|2 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#getU8
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory/Memory#getI8 (param $this i32) (param $address i32) (result i32)
  (local $res i32)
  (local $r i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  global.get $assembly/memory-page/Access.Read
  local.get $address
  i32.const 1
  call $assembly/memory/Memory#getBytes
  local.tee $res
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $r
  i32.store offset=8
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/Result#set:fault
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#__get
   call $assembly/instructions/utils/u8SignExtend
   call $assembly/memory/Result#set:ok
  end
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/load~anonymous|3 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#getI8
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory/Memory#getU16 (param $this i32) (param $address i32) (result i32)
  (local $res i32)
  (local $r i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  global.get $assembly/memory-page/Access.Read
  local.get $address
  i32.const 2
  call $assembly/memory/Memory#getBytes
  local.tee $res
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $r
  i32.store offset=8
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/Result#set:fault
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 1
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 8
   i32.shl
   i64.extend_i32_u
   i64.or
   call $assembly/memory/Result#set:ok
  end
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/load~anonymous|4 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#getU16
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory/Memory#getI16 (param $this i32) (param $address i32) (result i32)
  (local $res i32)
  (local $r i32)
  (local $l i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  global.get $assembly/memory-page/Access.Read
  local.get $address
  i32.const 2
  call $assembly/memory/Memory#getBytes
  local.tee $res
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $r
  i32.store offset=8
  local.get $r
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $res
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $assembly/memory/ChunkBytes#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=12
  local.get $5
  call $assembly/memory/Result#set:fault
  local.get $res
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=12
  local.get $5
  call $assembly/memory/ChunkBytes#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $res
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#__get
   local.set $l
   local.get $l
   local.get $res
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 1
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 8
   i32.const 15
   i32.and
   i32.shl
   i32.or
   local.set $l
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $l
   call $assembly/instructions/utils/u16SignExtend
   call $assembly/memory/Result#set:ok
  end
  local.get $r
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|5 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#getI16
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory/Memory#getU32 (param $this i32) (param $address i32) (result i32)
  (local $res i32)
  (local $r i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  global.get $assembly/memory-page/Access.Read
  local.get $address
  i32.const 4
  call $assembly/memory/Memory#getBytes
  local.tee $res
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $r
  i32.store offset=8
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/Result#set:fault
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 1
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 8
   i32.shl
   i64.extend_i32_u
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 2
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 16
   i32.shl
   i64.extend_i32_u
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 3
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 24
   i32.shl
   i64.extend_i32_u
   i64.or
   call $assembly/memory/Result#set:ok
  end
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/load~anonymous|6 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#getU32
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory/Memory#getI32 (param $this i32) (param $address i32) (result i32)
  (local $res i32)
  (local $r i32)
  (local $l i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  global.get $assembly/memory-page/Access.Read
  local.get $address
  i32.const 4
  call $assembly/memory/Memory#getBytes
  local.tee $res
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $r
  i32.store offset=8
  local.get $r
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $res
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $assembly/memory/ChunkBytes#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=12
  local.get $5
  call $assembly/memory/Result#set:fault
  local.get $res
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=12
  local.get $5
  call $assembly/memory/ChunkBytes#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $res
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#__get
   local.set $l
   local.get $l
   local.get $res
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 1
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 8
   i32.shl
   i32.or
   local.set $l
   local.get $l
   local.get $res
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 2
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 16
   i32.shl
   i32.or
   local.set $l
   local.get $l
   local.get $res
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 3
   call $~lib/staticarray/StaticArray<u8>#__get
   i32.const 24
   i32.shl
   i32.or
   local.set $l
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $l
   call $assembly/instructions/utils/u32SignExtend
   call $assembly/memory/Result#set:ok
  end
  local.get $r
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|7 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#getI32
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory/Memory#getU64 (param $this i32) (param $address i32) (result i32)
  (local $res i32)
  (local $r i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  global.get $assembly/memory-page/Access.Read
  local.get $address
  i32.const 8
  call $assembly/memory/Memory#getBytes
  local.tee $res
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $r
  i32.store offset=8
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/Result#set:fault
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/memory/ChunkBytes#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 0
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 1
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   i64.const 8
   i64.shl
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 2
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   i64.const 16
   i64.shl
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 3
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   i64.const 24
   i64.shl
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 4
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   i64.const 32
   i64.shl
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 5
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   i64.const 40
   i64.shl
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 6
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   i64.const 48
   i64.shl
   i64.or
   call $assembly/memory/Result#set:ok
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $r
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   call $assembly/memory/Result#get:ok
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $assembly/memory/ChunkBytes#get:bytes
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $4
   i32.const 7
   call $~lib/staticarray/StaticArray<u8>#__get
   i64.extend_i32_u
   i64.const 56
   i64.shl
   i64.or
   call $assembly/memory/Result#set:ok
  end
  local.get $r
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/load~anonymous|8 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#getU64
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $args
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/load~anonymous|9 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  call $assembly/memory/Memory#getU8
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|10 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  call $assembly/memory/Memory#getI8
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|11 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  call $assembly/memory/Memory#getU16
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|12 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  call $assembly/memory/Memory#getI16
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|13 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  call $assembly/memory/Memory#getU32
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|14 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  call $assembly/memory/Memory#getI32
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/load~anonymous|15 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  call $assembly/memory/Memory#getU64
  local.tee $result
  i32.store offset=8
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/memory/MaybePageFault#get:isFault
  i32.eqz
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $result
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/Result#get:ok
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  local.get $result
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/Result#get:fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/logic~anonymous|0 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.and
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.xor
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|2 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.or
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|3 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.and
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|4 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.xor
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|5 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.or
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|6 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const -1
  i64.xor
  i64.and
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|7 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const -1
  i64.xor
  i64.or
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/logic~anonymous|8 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.xor
  i64.const -1
  i64.xor
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|0 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i64)
  (local $c i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $a
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  local.set $c
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $a
  local.get $c
  i64.add
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  i64.mul
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|2 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $sum i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  i64.const 4294967296
  i64.or
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.sub
  local.set $sum
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $sum
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/math~anonymous|3 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $sum i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  local.set $sum
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $sum
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/math~anonymous|4 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.mul
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|5 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $sum i64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.sub
  local.set $sum
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $sum
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/math~anonymous|6 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i32)
  (local $b i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $a
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $a
  local.get $b
  i32.add
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|7 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 2
  i64.const 32
  call $~lib/math/ipow64
  i64.add
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  i64.extend_i32_u
  i64.sub
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|8 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.mul
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|9 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i32)
  (local $b i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $a
  local.get $a
  i32.const 0
  i32.eq
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   global.get $~lib/builtins/u64.MAX_VALUE
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   i32.wrap_i64
   local.set $b
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $b
   local.get $a
   i32.div_u
   call $assembly/instructions/utils/u32SignExtend
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|10 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $a i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  local.set $a
  local.get $a
  i64.const 0
  i64.eq
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   global.get $~lib/builtins/u64.MAX_VALUE
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $a
   i64.const -1
   i64.eq
   if (result i32)
    local.get $b
    global.get $~lib/builtins/i32.MIN_VALUE
    i64.extend_i32_s
    i64.eq
   else
    i32.const 0
   end
   if
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    local.get $b
    call $~lib/staticarray/StaticArray<u64>#__set
   else
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    local.get $b
    local.get $a
    i64.div_s
    call $~lib/staticarray/StaticArray<u64>#__set
   end
  end
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|11 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i32)
  (local $b i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $a
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $b
  local.get $a
  i32.const 0
  i32.eq
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $b
   call $assembly/instructions/utils/u32SignExtend
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $b
   local.get $a
   i32.rem_u
   call $assembly/instructions/utils/u32SignExtend
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|12 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i32)
  (local $a i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $a
  local.get $a
  i32.const 0
  i32.eq
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $b
   i64.extend_i32_s
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $a
   i32.const -1
   i32.eq
   if (result i32)
    local.get $b
    global.get $~lib/builtins/i32.MIN_VALUE
    i32.eq
   else
    i32.const 0
   end
   if
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    i64.const 0
    call $~lib/staticarray/StaticArray<u64>#__set
   else
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    local.get $b
    i64.extend_i32_s
    local.get $a
    i64.extend_i32_s
    i64.rem_s
    call $~lib/staticarray/StaticArray<u64>#__set
   end
  end
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|13 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.add
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|14 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.sub
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|15 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.mul
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|16 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 0
  i64.eq
  if
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   global.get $~lib/builtins/u64.MAX_VALUE
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   i64.div_u
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|17 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $a i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $a
  local.get $a
  i64.const 0
  i64.eq
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   global.get $~lib/builtins/u64.MAX_VALUE
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $a
   i64.const -1
   i64.eq
   if (result i32)
    local.get $b
    global.get $~lib/builtins/i64.MIN_VALUE
    i64.eq
   else
    i32.const 0
   end
   if
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    local.get $b
    call $~lib/staticarray/StaticArray<u64>#__set
   else
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    local.get $b
    local.get $a
    i64.div_s
    call $~lib/staticarray/StaticArray<u64>#__set
   end
  end
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|18 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 0
  i64.eq
  if
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   i64.rem_u
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|19 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $b i64)
  (local $a i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $a
  local.get $a
  i64.const 0
  i64.eq
  if
   local.get $registers
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $args
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $b
   call $~lib/staticarray/StaticArray<u64>#__set
  else
   local.get $a
   i64.const -1
   i64.eq
   if (result i32)
    local.get $b
    global.get $~lib/builtins/i64.MIN_VALUE
    i64.eq
   else
    i32.const 0
   end
   if
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    i64.const 0
    call $~lib/staticarray/StaticArray<u64>#__set
   else
    local.get $registers
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $args
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $assembly/arguments/Args#get:c
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    local.get $b
    local.get $a
    i64.rem_s
    call $~lib/staticarray/StaticArray<u64>#__set
   end
  end
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|20 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/instructions/utils/mulUpperSigned
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|21 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/instructions/utils/mulUpperUnsigned
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|22 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/instructions/utils/mulUpperSignedUnsigned
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/math~anonymous|23 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $a
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $a
  local.get $b
  i64.lt_s
  if (result i64)
   local.get $b
  else
   local.get $a
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|24 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $a
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $a
  local.get $b
  i64.lt_u
  if (result i64)
   local.get $b
  else
   local.get $a
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|25 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $a
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $a
  local.get $b
  i64.gt_s
  if (result i64)
   local.get $b
  else
   local.get $a
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/math~anonymous|26 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $a i64)
  (local $b i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $a
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $b
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $a
  local.get $b
  i64.gt_u
  if (result i64)
   local.get $b
  else
   local.get $a
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/instructions/outcome/status (param $result i32) (result i32)
  (local $r i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#constructor
  local.tee $r
  i32.store
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  global.get $assembly/instructions/outcome/Outcome.Result
  call $assembly/instructions/outcome/OutcomeData#set:outcome
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $result
  call $assembly/instructions/outcome/OutcomeData#set:result
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/instructions/outcome/hostCall (param $id i32) (result i32)
  (local $r i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/instructions/outcome/OutcomeData#constructor
  local.tee $r
  i32.store
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  global.get $assembly/instructions/outcome/Outcome.Result
  call $assembly/instructions/outcome/OutcomeData#set:outcome
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  global.get $assembly/instructions/outcome/Result.HOST
  call $assembly/instructions/outcome/OutcomeData#set:result
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $id
  call $assembly/instructions/outcome/OutcomeData#set:exitCode
  local.get $r
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $start:assembly/instructions/misc~anonymous|3 (param $args i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/arguments/Args#get:a
  call $assembly/instructions/outcome/hostCall
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#pop (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:length_
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   i32.const 11424
   i32.const 8128
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:dataStart
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $val
  i32.store offset=4
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $len
  call $~lib/array/Array<assembly/memory-page/RawPage>#set:length_
  local.get $val
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/console/console.log (param $message i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $message
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/bindings/dom/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/memory-page/Arena#acquire (param $this i32) (result i32)
  (local $allocatedMemory i32)
  (local $data i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/memory-page/Arena#get:free
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:length
  i32.const 0
  i32.gt_s
  if
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/memory-page/Arena#get:free
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<assembly/memory-page/RawPage>#pop
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/memory-page/Arena#get:extraPageIndex
  global.get $assembly/memory-page/PAGE_SIZE
  i32.mul
  local.set $allocatedMemory
  local.get $allocatedMemory
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/memory-page/Arena#get:arenaBytes
  i32.eq
  if
   i32.const 11472
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/console/console.log
  end
  global.get $~lib/memory/__stack_pointer
  local.get $allocatedMemory
  global.get $assembly/memory-page/ALLOCATE_EAGERLY
  i32.lt_u
  if (result i32)
   i32.const 0
   global.get $assembly/memory-page/PAGE_SIZE
   call $~lib/typedarray/Uint8Array#constructor
  else
   i32.const 0
  end
  local.tee $data
  i32.store offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/memory-page/Arena#get:extraPageIndex
  i32.const 1
  i32.add
  call $assembly/memory-page/Arena#set:extraPageIndex
  i32.const 0
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/memory-page/Arena#get:extraPageIndex
  local.get $data
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $assembly/memory-page/RawPage#constructor
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#rehash" (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.0" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.0"
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entries"
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesOffset"
  block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.1" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.1"
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     local.get $oldEntry
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:key"
     local.set $oldEntryKey
     local.get $newEntry
     local.get $oldEntryKey
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:key"
     local.get $newEntry
     local.get $oldEntry
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:value"
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=8
     local.get $14
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:value"
     local.get $oldEntryKey
     call $~lib/util/hash/HASH<u32>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:taggedNext"
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store
     local.get $newPtr
     block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.2" (result i32)
      i32.const 12
      br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.2"
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.3" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.3"
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:buckets"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newBucketsMask
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:bucketsMask"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entries"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCapacity"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesCount"
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesOffset"
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#set" (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $key
  call $~lib/util/hash/HASH<u32>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $key
  local.get $hashCode
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#find"
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:value"
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesOffset"
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesCapacity"
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesCount"
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesCapacity"
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:bucketsMask"
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:bucketsMask"
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $"~lib/map/Map<u32,assembly/memory-page/Page>#rehash"
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entries"
   local.tee $entries
   i32.store offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesOffset"
   local.tee $6
   i32.const 1
   i32.add
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesOffset"
   local.get $6
   block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.4" (result i32)
    i32.const 12
    br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.4"
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:key"
   i32.const 0
   drop
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:value"
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesCount"
   i32.const 1
   i32.add
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCount"
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:buckets"
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:bucketsMask"
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load
   call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#set:taggedNext"
   local.get $bucketPtrBase
   local.get $entry
   i32.store
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/memory/Memory#sbrk (param $this i32) (param $amount i32) (result i32)
  (local $freeMemoryStart i32)
  (local $newSbrk i64)
  (local $pageIdx i32)
  (local $i i32)
  (local $page i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/Result#constructor
  local.tee $freeMemoryStart
  i32.store
  local.get $freeMemoryStart
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=8
  local.get $7
  call $assembly/memory/Memory#get:sbrkAddress
  i64.extend_i32_u
  call $assembly/memory/Result#set:ok
  local.get $amount
  i32.const 0
  i32.eq
  if
   local.get $freeMemoryStart
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  call $assembly/memory/Memory#get:sbrkAddress
  i64.extend_i32_u
  local.get $amount
  i64.extend_i32_u
  i64.add
  local.set $newSbrk
  local.get $newSbrk
  global.get $assembly/memory/MEMORY_SIZE
  i64.ge_s
  if
   local.get $freeMemoryStart
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $7
   call $assembly/memory/Result#get:fault
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i32.const 1
   call $assembly/memory/MaybePageFault#set:isFault
   local.get $freeMemoryStart
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  local.get $newSbrk
  i32.wrap_i64
  call $assembly/memory/Memory#set:sbrkAddress
  local.get $newSbrk
  i64.const 1
  i64.sub
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i64.extend_i32_u
  i64.shr_s
  i32.wrap_i64
  local.set $pageIdx
  local.get $pageIdx
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  call $assembly/memory/Memory#get:lastAllocatedPage
  i32.eq
  if
   local.get $freeMemoryStart
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  call $assembly/memory/Memory#get:lastAllocatedPage
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $pageIdx
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $7
    call $assembly/memory/Memory#get:arena
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    call $assembly/memory-page/Arena#acquire
    local.tee $page
    i32.store offset=12
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=16
    local.get $7
    call $assembly/memory/Memory#get:pages
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    local.get $i
    i32.const 0
    global.get $assembly/memory-page/Access.Write
    local.get $page
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=16
    local.get $7
    call $assembly/memory-page/Page#constructor
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $7
    call $"~lib/map/Map<u32,assembly/memory-page/Page>#set"
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  local.get $pageIdx
  call $assembly/memory/Memory#set:lastAllocatedPage
  local.get $freeMemoryStart
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $start:assembly/instructions/misc~anonymous|4 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $res i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/memory/Memory#sbrk
  local.tee $res
  i32.store offset=12
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  if
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/memory/Result#get:fault
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/instructions/outcome/okOrFault
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/memory/Result#get:ok
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/mov~anonymous|0 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/mov~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 0
  i64.eq
  if
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/utils/u32SignExtend
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/mov~anonymous|2 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 0
  i64.ne
  if
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   call $assembly/instructions/utils/u32SignExtend
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/mov~anonymous|3 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 0
  i64.eq
  if
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/mov~anonymous|4 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 0
  i64.ne
  if
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   local.get $registers
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $args
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   call $~lib/staticarray/StaticArray<u64>#__set
  end
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|0 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  call $assembly/instructions/rot/math.rot_r
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|1 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/instructions/rot/math.rot_r
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|2 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/rot/math.rot_r_32
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|3 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/rot/math.rot_r_32
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|4 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/instructions/rot/math.rot_l
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|5 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/rot/math.rot_l_32
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|6 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/instructions/rot/math.rot_r
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/rot~anonymous|7 (param $args i32) (param $regs i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.get $regs
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/rot/math.rot_r_32
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/set~anonymous|0 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $cond i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.lt_u
  local.set $cond
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $cond
  if (result i64)
   i64.const 1
  else
   i64.const 0
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/set~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $cond i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.lt_s
  local.set $cond
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $cond
  if (result i64)
   i64.const 1
  else
   i64.const 0
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/set~anonymous|2 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $cond i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.gt_u
  local.set $cond
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $cond
  if (result i64)
   i64.const 1
  else
   i64.const 0
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/set~anonymous|3 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $cond i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.gt_s
  local.set $cond
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $cond
  if (result i64)
   i64.const 1
  else
   i64.const 0
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/set~anonymous|4 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.lt_u
  if (result i64)
   i64.const 1
  else
   i64.const 0
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/set~anonymous|5 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $args
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.lt_s
  if (result i64)
   i64.const 1
  else
   i64.const 0
  end
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/instructions/shift~anonymous|0 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $value i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i32.rem_u
  local.set $shift
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $value
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $value
  local.get $shift
  i32.shl
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|1 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $value i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i32.rem_u
  local.set $shift
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $value
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $value
  local.get $shift
  i32.shr_u
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|2 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $value i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i32.rem_u
  local.set $shift
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  local.set $value
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $value
  local.get $shift
  i64.extend_i32_u
  i64.shr_s
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|3 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  local.get $shift
  i32.shl
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|4 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  local.get $shift
  i32.shr_u
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|5 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $imm i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  local.set $imm
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $imm
  local.get $shift
  i64.extend_i32_u
  i64.shr_s
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|6 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i32.rem_u
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $shift
  i64.extend_i32_u
  i64.shl
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|7 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/arguments/Args#get:c
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i32.rem_u
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $shift
  i64.extend_i32_u
  i64.shr_u
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|8 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $value i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i32.rem_u
  local.set $shift
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $value
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $value
  local.get $shift
  i64.extend_i32_u
  i64.shr_s
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|9 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  local.get $shift
  i64.extend_i32_u
  i64.shl
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|10 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  local.get $shift
  i64.extend_i32_u
  i64.shr_u
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|11 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $value i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  local.set $value
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $value
  local.get $shift
  i64.extend_i32_u
  i64.shr_s
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|12 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $value i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $value
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $value
  local.get $shift
  i32.shl
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|13 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $value i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  local.set $value
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $value
  local.get $shift
  i32.shr_u
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|14 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $regValue i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_32
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  local.set $regValue
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $regValue
  local.get $shift
  i64.extend_i32_u
  i64.shr_s
  i32.wrap_i64
  call $assembly/instructions/utils/u32SignExtend
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/shift~anonymous|15 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $shift
  i64.extend_i32_u
  i64.shl
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|16 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $shift
  i64.extend_i32_u
  i64.shr_u
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/shift~anonymous|17 (param $args i32) (param $registers i32) (param $$2 i32) (result i32)
  (local $shift i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  global.get $assembly/instructions/shift/MAX_SHIFT_64
  i64.extend_i32_s
  i64.rem_u
  i32.wrap_i64
  local.set $shift
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:c
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $shift
  i64.extend_i32_u
  i64.shr_s
  call $~lib/staticarray/StaticArray<u64>#__set
  call $assembly/instructions/outcome/ok
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/typedarray/Uint8Array#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteLength
  i32.ge_u
  if
   i32.const 480
   i32.const 720
   i32.const 178
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $index
  i32.add
  local.get $value
  i32.store8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/memory/Memory#setU8 (param $this i32) (param $address i32) (param $value i32) (result i32)
  (local $res i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  global.get $assembly/memory-page/Access.Write
  local.get $address
  i32.const 1
  call $assembly/memory/Memory#getChunks
  local.tee $res
  i32.store offset=4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  if
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/memory/Chunks#get:fault
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#get:first
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 0
  local.get $value
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/Chunks#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/store~anonymous|0 (param $args i32) (param $_registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:a
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i32.const 255
  i32.and
  call $assembly/memory/Memory#setU8
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/memory/Memory#setU16 (param $this i32) (param $address i32) (param $value i32) (result i32)
  (local $res i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  global.get $assembly/memory-page/Access.Write
  local.get $address
  i32.const 2
  call $assembly/memory/Memory#getChunks
  local.tee $res
  i32.store offset=4
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/MaybePageFault#get:isFault
  if
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/memory/Chunks#get:fault
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#get:first
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 0
  local.get $value
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/memory/Chunks#get:first
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 1
  i32.gt_s
  if
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   call $assembly/memory/Chunks#get:first
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 1
   local.get $value
   i32.const 65535
   i32.and
   i32.const 8
   i32.const 15
   i32.and
   i32.shr_u
   call $~lib/typedarray/Uint8Array#__set
  else
   local.get $res
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $4
   call $assembly/memory/Chunks#get:second
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 0
   local.get $value
   i32.const 65535
   i32.and
   i32.const 8
   i32.const 15
   i32.and
   i32.shr_u
   call $~lib/typedarray/Uint8Array#__set
  end
  local.get $res
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/memory/Chunks#get:fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/store~anonymous|1 (param $args i32) (param $_registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:a
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  i32.const 65535
  i32.and
  call $assembly/memory/Memory#setU16
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/memory/Memory#setU32 (param $this i32) (param $address i32) (param $value i32) (result i32)
  (local $res i32)
  (local $v i32)
  (local $len i32)
  (local $i i32)
  (local $i|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  global.get $assembly/memory-page/Access.Write
  local.get $address
  i32.const 4
  call $assembly/memory/Memory#getChunks
  local.tee $res
  i32.store offset=4
  local.get $res
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $8
  call $assembly/memory/Chunks#get:fault
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $assembly/memory/MaybePageFault#get:isFault
  if
   local.get $res
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $assembly/memory/Chunks#get:fault
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $value
  local.set $v
  local.get $res
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $8
  call $assembly/memory/Chunks#get:first
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $res
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    local.get $8
    call $assembly/memory/Chunks#get:first
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i
    local.get $v
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $v
    i32.const 8
    i32.shr_u
    local.set $v
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $i|7
  loop $for-loop|1
   local.get $i|7
   local.get $res
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $8
   call $assembly/memory/Chunks#get:second
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $~lib/typedarray/Uint8Array#get:length
   i32.lt_s
   if
    local.get $res
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    local.get $8
    call $assembly/memory/Chunks#get:second
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i|7
    local.get $v
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $v
    i32.const 8
    i32.shr_u
    local.set $v
    local.get $i|7
    i32.const 1
    i32.add
    local.set $i|7
    br $for-loop|1
   end
  end
  local.get $res
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $assembly/memory/Chunks#get:fault
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $start:assembly/instructions/store~anonymous|2 (param $args i32) (param $_registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:a
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  call $assembly/memory/Memory#setU32
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/memory/Memory#setU64 (param $this i32) (param $address i32) (param $value i64) (result i32)
  (local $res i32)
  (local $v i64)
  (local $len i32)
  (local $i i32)
  (local $i|7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  global.get $assembly/memory-page/Access.Write
  local.get $address
  i32.const 8
  call $assembly/memory/Memory#getChunks
  local.tee $res
  i32.store offset=4
  local.get $res
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $8
  call $assembly/memory/Chunks#get:fault
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $assembly/memory/MaybePageFault#get:isFault
  if
   local.get $res
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $assembly/memory/Chunks#get:fault
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $value
  local.set $v
  local.get $res
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $8
  call $assembly/memory/Chunks#get:first
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $res
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    local.get $8
    call $assembly/memory/Chunks#get:first
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i
    local.get $v
    i32.wrap_i64
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $v
    i64.const 8
    i64.shr_u
    local.set $v
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $i|7
  loop $for-loop|1
   local.get $i|7
   local.get $res
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $8
   call $assembly/memory/Chunks#get:second
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $~lib/typedarray/Uint8Array#get:length
   i32.lt_s
   if
    local.get $res
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    local.get $8
    call $assembly/memory/Chunks#get:second
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i|7
    local.get $v
    i32.wrap_i64
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $v
    i64.const 8
    i64.shr_u
    local.set $v
    local.get $i|7
    i32.const 1
    i32.add
    local.set $i|7
    br $for-loop|1
   end
  end
  local.get $res
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $assembly/memory/Chunks#get:fault
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $start:assembly/instructions/store~anonymous|3 (param $args i32) (param $_registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:a
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  call $assembly/memory/Memory#setU64
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|4 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $fault i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 255
  i64.and
  i32.wrap_i64
  call $assembly/memory/Memory#setU8
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/store~anonymous|5 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $fault i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 65535
  i64.and
  i32.wrap_i64
  call $assembly/memory/Memory#setU16
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/store~anonymous|6 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $fault i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/memory/Memory#setU32
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/store~anonymous|7 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $fault i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/arguments/Args#get:b
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $args
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/memory/Memory#setU64
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/instructions/outcome/okOrFault
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $start:assembly/instructions/store~anonymous|8 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i32.const 255
  i32.and
  call $assembly/memory/Memory#setU8
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|9 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  i32.const 65535
  i32.and
  call $assembly/memory/Memory#setU16
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|10 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/memory/Memory#setU32
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|11 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $pageFault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:b
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  call $assembly/memory/Memory#setU64
  local.tee $pageFault
  i32.store offset=8
  local.get $pageFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|12 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $fault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 255
  i64.and
  i32.wrap_i64
  call $assembly/memory/Memory#setU8
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|13 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $fault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i64.const 65535
  i64.and
  i32.wrap_i64
  call $assembly/memory/Memory#setU16
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|14 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $fault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  i32.wrap_i64
  call $assembly/memory/Memory#setU32
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $start:assembly/instructions/store~anonymous|15 (param $args i32) (param $registers i32) (param $memory i32) (result i32)
  (local $address i32)
  (local $fault i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/arguments/Args#get:a
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/arguments/Args#get:c
  call $assembly/instructions/utils/u32SignExtend
  i64.add
  i32.wrap_i64
  local.set $address
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $address
  local.get $registers
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/arguments/Args#get:b
  i64.extend_i32_u
  call $assembly/instructions/utils/reg
  call $~lib/staticarray/StaticArray<u64>#__get
  call $assembly/memory/Memory#setU64
  local.tee $fault
  i32.store offset=12
  local.get $fault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/instructions/outcome/okOrFault
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/array/Array<u8>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u8>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<u8>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u8>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u8>#get:dataStart
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $start:assembly/codec~anonymous|0 (param $firstByte i32) (result i32)
  (local $len i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $assembly/codec/MASKS
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u8>#get:length
  local.set $len
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.const 255
   i32.and
   i32.lt_u
   if
    local.get $firstByte
    i32.const 255
    i32.and
    global.get $assembly/codec/MASKS
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    local.get $i
    call $~lib/array/Array<u8>#__get
    i32.ge_u
    if
     i32.const 8
     local.get $i
     i32.sub
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/staticarray/StaticArray<u32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<u32>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/program/Mask#isInstruction (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  i64.extend_i32_u
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/program/Mask#get:bytesToSkip
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/staticarray/StaticArray<u32>#get:length
  i64.extend_i32_s
  i64.ge_u
  if
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/program/Mask#get:bytesToSkip
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $index
  call $~lib/staticarray/StaticArray<u32>#__get
  i32.const 0
  i32.eq
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<assembly/instructions/Instruction>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/instructions/Instruction>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/instructions/Instruction>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $value
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 14704
   i32.const 8128
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/string/String#concat (param $this i32) (param $other i32) (result i32)
  (local $thisSize i32)
  (local $otherSize i32)
  (local $outSize i32)
  (local $out i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $thisSize
  local.get $other
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $otherSize
  local.get $thisSize
  local.get $otherSize
  i32.add
  local.set $outSize
  local.get $outSize
  i32.const 0
  i32.eq
  if
   i32.const 14480
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store offset=4
  local.get $out
  local.get $this
  local.get $thisSize
  memory.copy
  local.get $out
  local.get $thisSize
  i32.add
  local.get $other
  local.get $otherSize
  memory.copy
  local.get $out
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $~lib/string/String.__concat (param $left i32) (param $right i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $left
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $right
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/string/String#concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/util/string/joinStringArray (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $4 i32)
  (local $estLen i32)
  (local $value i32)
  (local $i i32)
  (local $offset i32)
  (local $sepLen i32)
  (local $result i32)
  (local $i|11 i32)
  (local $valueLen i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 14480
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $dataStart
   i32.load
   local.tee $4
   i32.store
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 14480
   end
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  i32.const 0
  local.set $estLen
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $value
    i32.store offset=4
    local.get $value
    i32.const 0
    i32.ne
    if
     local.get $estLen
     local.get $value
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store offset=8
     local.get $13
     call $~lib/string/String#get:length
     i32.add
     local.set $estLen
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $offset
  local.get $separator
  local.set $13
  global.get $~lib/memory/__stack_pointer
  local.get $13
  i32.store offset=8
  local.get $13
  call $~lib/string/String#get:length
  local.set $sepLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  local.get $sepLen
  local.get $lastIndex
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store offset=12
  i32.const 0
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   local.get $lastIndex
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $dataStart
    local.get $i|11
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $value
    i32.store offset=4
    local.get $value
    i32.const 0
    i32.ne
    if
     local.get $value
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store offset=8
     local.get $13
     call $~lib/string/String#get:length
     local.set $valueLen
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $value
     local.get $valueLen
     i32.const 1
     i32.shl
     memory.copy
     local.get $offset
     local.get $valueLen
     i32.add
     local.set $offset
    end
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $dataStart
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  local.get $value
  i32.const 0
  i32.ne
  if
   local.get $result
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $value
   local.get $value
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store offset=8
   local.get $13
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   memory.copy
  end
  local.get $result
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
  return
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $this i32) (param $separator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $this
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/staticarray/StaticArray<~lib/string/String>#get:length
  local.get $separator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/util/string/joinStringArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/program/Mask#skipBytesToNextInstruction (param $this i32) (param $i i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $i
  i32.const 1
  i32.add
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/program/Mask#get:bytesToSkip
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/staticarray/StaticArray<u32>#get:length
  i32.lt_u
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $assembly/program/Mask#get:bytesToSkip
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $i
   i32.const 1
   i32.add
   call $~lib/staticarray/StaticArray<u32>#__get
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<i32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<i32>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<i32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 14704
   i32.const 8128
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/program/decodeArguments (param $kind i32) (param $data i32) (param $lim i32) (result i32)
  (local $extended i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $data
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/typedarray/Uint8Array#get:length
  global.get $assembly/arguments/REQUIRED_BYTES
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $kind
  call $~lib/array/Array<i32>#__get
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   global.get $assembly/arguments/REQUIRED_BYTES
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $kind
   call $~lib/array/Array<i32>#__get
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $extended
   i32.store offset=4
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $data
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    call $~lib/typedarray/Uint8Array#get:length
    i32.lt_s
    if
     local.get $extended
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     local.get $i
     local.get $data
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=8
     local.get $5
     local.get $i
     call $~lib/typedarray/Uint8Array#__get
     call $~lib/typedarray/Uint8Array#__set
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $extended
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $lim
   i32.const 2
   global.set $~argumentsLength
   global.get $assembly/arguments/DECODERS
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $5
   local.get $kind
   call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#__get
   i32.load
   call_indirect (type $3)
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $data
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $lim
  i32.const 2
  global.set $~argumentsLength
  global.get $assembly/arguments/DECODERS
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  local.get $kind
  call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#__get
  i32.load
  call_indirect (type $3)
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/array/Array<u32>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u32>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 480
    i32.const 8128
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<u32>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  i32.const 0
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u32>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u32>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/api-internal/getAssembly (param $p i32) (result i32)
  (local $len i32)
  (local $v i32)
  (local $i i32)
  (local $instruction i32)
  (local $iData i32)
  (local $6 i32)
  (local $skipBytes i32)
  (local $args i32)
  (local $9 i32)
  (local $argsArray i32)
  (local $relevantArgs i32)
  (local $i|12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $p
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=4
  local.get $14
  call $assembly/program/Program#get:code
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if
   i32.const 14400
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 14480
  local.tee $v
  i32.store offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $p
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    call $assembly/program/Program#get:mask
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    local.get $i
    call $assembly/program/Mask#isInstruction
    i32.eqz
    if
     i32.const 14512
     i32.const 14624
     i32.const 48
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $p
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    call $assembly/program/Program#get:code
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    local.get $i
    call $~lib/typedarray/Uint8Array#__get
    local.set $instruction
    local.get $instruction
    global.get $assembly/instructions/INSTRUCTIONS
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $~lib/array/Array<assembly/instructions/Instruction>#get:length
    i32.const 255
    i32.and
    i32.ge_u
    if (result i32)
     global.get $assembly/instructions/MISSING_INSTRUCTION
    else
     global.get $assembly/instructions/INSTRUCTIONS
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     local.get $instruction
     call $~lib/array/Array<assembly/instructions/Instruction>#__get
    end
    local.set $iData
    global.get $~lib/memory/__stack_pointer
    local.get $v
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    i32.const 14832
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    call $~lib/string/String.__concat
    local.tee $v
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $v
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    local.get $i
    i32.const 10
    call $~lib/number/I32#toString
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=12
    local.get $14
    i32.const 16640
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=16
    local.get $14
    call $~lib/string/String#concat
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    call $~lib/string/String.__concat
    local.tee $v
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $v
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    local.get $iData
    call $assembly/instructions/Instruction#get:namePtr
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    call $~lib/string/String.__concat
    local.tee $v
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $v
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    global.get $~lib/memory/__stack_pointer
    local.get $instruction
    i32.const 10
    call $~lib/number/U8#toString
    local.tee $6
    i32.store offset=20
    i32.const 16736
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=12
    local.get $14
    i32.const 1
    local.get $6
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=16
    local.get $14
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    i32.const 16736
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=12
    local.get $14
    i32.const 14480
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=16
    local.get $14
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    call $~lib/string/String.__concat
    local.tee $v
    i32.store offset=8
    local.get $p
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    call $assembly/program/Program#get:mask
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    local.get $i
    call $assembly/program/Mask#skipBytesToNextInstruction
    local.set $skipBytes
    global.get $~lib/memory/__stack_pointer
    local.get $iData
    call $assembly/instructions/Instruction#get:kind
    local.get $p
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=12
    local.get $14
    call $assembly/program/Program#get:code
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store offset=4
    local.get $14
    local.get $i
    i32.const 1
    i32.add
    i32.const 1
    global.set $~argumentsLength
    i32.const 0
    call $~lib/typedarray/Uint8Array#subarray@varargs
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    local.get $skipBytes
    call $assembly/program/decodeArguments
    local.tee $args
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 2
    i32.const 38
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $9
    i32.store offset=28
    local.get $9
    i32.const 0
    local.get $args
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/arguments/Args#get:a
    call $~lib/array/Array<u32>#__set
    local.get $9
    i32.const 1
    local.get $args
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/arguments/Args#get:b
    call $~lib/array/Array<u32>#__set
    local.get $9
    i32.const 2
    local.get $args
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/arguments/Args#get:c
    call $~lib/array/Array<u32>#__set
    local.get $9
    i32.const 3
    local.get $args
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/arguments/Args#get:d
    call $~lib/array/Array<u32>#__set
    local.get $9
    local.tee $argsArray
    i32.store offset=32
    global.get $assembly/arguments/RELEVANT_ARGS
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    local.get $iData
    call $assembly/instructions/Instruction#get:kind
    call $~lib/array/Array<i32>#__get
    local.set $relevantArgs
    i32.const 0
    local.set $i|12
    loop $for-loop|1
     local.get $i|12
     local.get $relevantArgs
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $v
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      global.get $~lib/memory/__stack_pointer
      local.get $argsArray
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=12
      local.get $14
      local.get $i|12
      call $~lib/array/Array<u32>#__get
      i32.const 10
      call $~lib/number/U32#toString
      local.tee $13
      i32.store offset=36
      i32.const 16832
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=12
      local.get $14
      i32.const 1
      local.get $13
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=16
      local.get $14
      call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
      i32.const 16832
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=12
      local.get $14
      i32.const 14480
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=16
      local.get $14
      call $~lib/staticarray/StaticArray<~lib/string/String>#join
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=4
      local.get $14
      call $~lib/string/String.__concat
      local.tee $v
      i32.store offset=8
      local.get $i|12
      i32.const 1
      i32.add
      local.set $i|12
      br $for-loop|1
     end
    end
    local.get $i
    local.get $skipBytes
    i32.add
    local.set $i
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $v
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $~lib/staticarray/StaticArray<bool>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<bool>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<bool>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/program-build/skipBytes (param $kind i32) (param $data i32) (result i32)
  (local $2 i32)
  (local $n i32)
  (local $split i32)
  (local $n|5 i32)
  (local $split|6 i32)
  (local $n|7 i32)
  (local $split|8 i32)
  (local $value1 f64)
  (local $value2 f64)
  (local $value1|11 f64)
  (local $value2|12 f64)
  (local $n|13 i32)
  (local $split|14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  block $case13|0
   block $case12|0
    block $case11|0
     block $case10|0
      block $case9|0
       block $case8|0
        block $case7|0
         block $case6|0
          block $case5|0
           block $case4|0
            block $case3|0
             block $case2|0
              block $case1|0
               block $case0|0
                local.get $kind
                local.set $2
                local.get $2
                global.get $assembly/arguments/Arguments.Zero
                i32.eq
                br_if $case0|0
                local.get $2
                global.get $assembly/arguments/Arguments.OneImm
                i32.eq
                br_if $case1|0
                local.get $2
                global.get $assembly/arguments/Arguments.TwoImm
                i32.eq
                br_if $case2|0
                local.get $2
                global.get $assembly/arguments/Arguments.OneOff
                i32.eq
                br_if $case3|0
                local.get $2
                global.get $assembly/arguments/Arguments.OneRegOneImm
                i32.eq
                br_if $case4|0
                local.get $2
                global.get $assembly/arguments/Arguments.OneRegOneExtImm
                i32.eq
                br_if $case5|0
                local.get $2
                global.get $assembly/arguments/Arguments.OneRegTwoImm
                i32.eq
                br_if $case6|0
                local.get $2
                global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
                i32.eq
                br_if $case7|0
                local.get $2
                global.get $assembly/arguments/Arguments.TwoReg
                i32.eq
                br_if $case8|0
                local.get $2
                global.get $assembly/arguments/Arguments.TwoRegOneImm
                i32.eq
                br_if $case9|0
                local.get $2
                global.get $assembly/arguments/Arguments.TwoRegOneOff
                i32.eq
                br_if $case10|0
                local.get $2
                global.get $assembly/arguments/Arguments.TwoRegTwoImm
                i32.eq
                br_if $case11|0
                local.get $2
                global.get $assembly/arguments/Arguments.ThreeReg
                i32.eq
                br_if $case12|0
                br $case13|0
               end
               i32.const 0
               local.set $15
               global.get $~lib/memory/__stack_pointer
               i32.const 24
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $15
               return
              end
              local.get $data
              local.set $15
              global.get $~lib/memory/__stack_pointer
              local.get $15
              i32.store
              local.get $15
              call $~lib/typedarray/Uint8Array#get:length
              i32.const 0
              call $assembly/program-build/immBytes
              local.set $15
              global.get $~lib/memory/__stack_pointer
              i32.const 24
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $15
              return
             end
             global.get $~lib/memory/__stack_pointer
             local.get $data
             local.set $15
             global.get $~lib/memory/__stack_pointer
             local.get $15
             i32.store
             local.get $15
             i32.const 0
             call $~lib/typedarray/Uint8Array#__get
             call $assembly/arguments/nibbles
             local.tee $n
             i32.store offset=4
             local.get $n
             local.set $15
             global.get $~lib/memory/__stack_pointer
             local.get $15
             i32.store
             local.get $15
             call $assembly/arguments/Nibbles#get:low
             i32.const 1
             i32.add
             local.set $split
             i32.const 1
             local.get $split
             i32.const 255
             i32.and
             i32.add
             local.get $data
             local.set $15
             global.get $~lib/memory/__stack_pointer
             local.get $15
             i32.store
             local.get $15
             call $~lib/typedarray/Uint8Array#get:length
             local.get $split
             i32.const 1
             i32.add
             i32.const 255
             i32.and
             call $assembly/program-build/immBytes
             i32.add
             local.set $15
             global.get $~lib/memory/__stack_pointer
             i32.const 24
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $15
             return
            end
            local.get $data
            local.set $15
            global.get $~lib/memory/__stack_pointer
            local.get $15
            i32.store
            local.get $15
            call $~lib/typedarray/Uint8Array#get:length
            i32.const 0
            call $assembly/program-build/immBytes
            local.set $15
            global.get $~lib/memory/__stack_pointer
            i32.const 24
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $15
            return
           end
           i32.const 1
           local.get $data
           local.set $15
           global.get $~lib/memory/__stack_pointer
           local.get $15
           i32.store
           local.get $15
           call $~lib/typedarray/Uint8Array#get:length
           i32.const 1
           call $assembly/program-build/immBytes
           i32.add
           local.set $15
           global.get $~lib/memory/__stack_pointer
           i32.const 24
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $15
           return
          end
          i32.const 9
          local.set $15
          global.get $~lib/memory/__stack_pointer
          i32.const 24
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $15
          return
         end
         global.get $~lib/memory/__stack_pointer
         local.get $data
         local.set $15
         global.get $~lib/memory/__stack_pointer
         local.get $15
         i32.store
         local.get $15
         i32.const 0
         call $~lib/typedarray/Uint8Array#__get
         call $assembly/arguments/nibbles
         local.tee $n|5
         i32.store offset=8
         local.get $n|5
         local.set $15
         global.get $~lib/memory/__stack_pointer
         local.get $15
         i32.store
         local.get $15
         call $assembly/arguments/Nibbles#get:hig
         i32.const 1
         i32.add
         local.set $split|6
         i32.const 1
         local.get $split|6
         i32.const 255
         i32.and
         i32.add
         local.get $data
         local.set $15
         global.get $~lib/memory/__stack_pointer
         local.get $15
         i32.store
         local.get $15
         call $~lib/typedarray/Uint8Array#get:length
         i32.const 1
         local.get $split|6
         i32.const 255
         i32.and
         i32.add
         call $assembly/program-build/immBytes
         i32.add
         local.set $15
         global.get $~lib/memory/__stack_pointer
         i32.const 24
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $15
         return
        end
        global.get $~lib/memory/__stack_pointer
        local.get $data
        local.set $15
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store
        local.get $15
        i32.const 0
        call $~lib/typedarray/Uint8Array#__get
        call $assembly/arguments/nibbles
        local.tee $n|7
        i32.store offset=12
        local.get $n|7
        local.set $15
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store
        local.get $15
        call $assembly/arguments/Nibbles#get:hig
        i32.const 1
        i32.add
        local.set $split|8
        i32.const 1
        local.get $split|8
        i32.const 255
        i32.and
        i32.add
        local.get $data
        local.set $15
        global.get $~lib/memory/__stack_pointer
        local.get $15
        i32.store
        local.get $15
        call $~lib/typedarray/Uint8Array#get:length
        i32.const 1
        local.get $split|8
        i32.const 255
        i32.and
        i32.add
        call $assembly/program-build/immBytes
        i32.add
        local.set $15
        global.get $~lib/memory/__stack_pointer
        i32.const 24
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $15
        return
       end
       i32.const 1
       local.set $15
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $15
       return
      end
      i32.const 1
      block $~lib/math/NativeMath.min|inlined.5 (result f64)
       f64.const 4
       local.set $value1
       local.get $data
       local.set $15
       global.get $~lib/memory/__stack_pointer
       local.get $15
       i32.store
       local.get $15
       call $~lib/typedarray/Uint8Array#get:length
       f64.convert_i32_s
       local.set $value2
       local.get $value1
       local.get $value2
       f64.min
       br $~lib/math/NativeMath.min|inlined.5
      end
      i32.trunc_sat_f64_s
      i32.add
      local.set $15
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $15
      return
     end
     i32.const 1
     block $~lib/math/NativeMath.min|inlined.6 (result f64)
      f64.const 4
      local.set $value1|11
      local.get $data
      local.set $15
      global.get $~lib/memory/__stack_pointer
      local.get $15
      i32.store
      local.get $15
      call $~lib/typedarray/Uint8Array#get:length
      f64.convert_i32_s
      local.set $value2|12
      local.get $value1|11
      local.get $value2|12
      f64.min
      br $~lib/math/NativeMath.min|inlined.6
     end
     i32.trunc_sat_f64_s
     i32.add
     local.set $15
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $15
     return
    end
    global.get $~lib/memory/__stack_pointer
    local.get $data
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store
    local.get $15
    i32.const 1
    call $~lib/typedarray/Uint8Array#__get
    call $assembly/arguments/nibbles
    local.tee $n|13
    i32.store offset=16
    local.get $n|13
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store
    local.get $15
    call $assembly/arguments/Nibbles#get:low
    i32.const 1
    i32.add
    local.set $split|14
    i32.const 2
    local.get $split|14
    i32.const 255
    i32.and
    i32.add
    local.get $data
    local.set $15
    global.get $~lib/memory/__stack_pointer
    local.get $15
    i32.store
    local.get $15
    call $~lib/typedarray/Uint8Array#get:length
    i32.const 2
    local.get $split|14
    i32.const 255
    i32.and
    i32.add
    call $assembly/program-build/immBytes
    i32.add
    local.set $15
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $15
    return
   end
   i32.const 2
   local.set $15
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $15
   return
  end
  i32.const 16864
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store
  local.get $15
  local.get $kind
  i32.const 10
  call $~lib/number/I32#toString
  local.set $15
  global.get $~lib/memory/__stack_pointer
  local.get $15
  i32.store offset=20
  local.get $15
  call $~lib/string/String#concat
  i32.const 16944
  i32.const 73
  i32.const 7
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/staticarray/StaticArray<bool>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<bool>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<u8>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<u8>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 0
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<u8>#get:dataStart
  local.get $oldLen
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $len
  call $~lib/array/Array<u8>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/program-build/buildMask (param $bytecode i32) (result i32)
  (local $mask i32)
  (local $i i32)
  (local $instruction i32)
  (local $iData i32)
  (local $requiredBytes i32)
  (local $6 i32)
  (local $packed i32)
  (local $i|8 i32)
  (local $byte i32)
  (local $j i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $bytecode
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store
  local.get $11
  call $~lib/typedarray/Uint8Array#get:length
  call $~lib/staticarray/StaticArray<bool>#constructor
  local.tee $mask
  i32.store offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $bytecode
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store
   local.get $11
   call $~lib/typedarray/Uint8Array#get:length
   i32.lt_s
   if
    local.get $bytecode
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    local.get $i
    call $~lib/typedarray/Uint8Array#__get
    local.set $instruction
    local.get $instruction
    global.get $assembly/instructions/INSTRUCTIONS
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    call $~lib/array/Array<assembly/instructions/Instruction>#get:length
    i32.lt_s
    if (result i32)
     global.get $assembly/instructions/INSTRUCTIONS
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store
     local.get $11
     local.get $instruction
     call $~lib/array/Array<assembly/instructions/Instruction>#__get
    else
     global.get $assembly/instructions/MISSING_INSTRUCTION
    end
    local.set $iData
    local.get $mask
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    local.get $i
    i32.const 1
    call $~lib/staticarray/StaticArray<bool>#__set
    global.get $assembly/arguments/REQUIRED_BYTES
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    local.get $iData
    call $assembly/instructions/Instruction#get:kind
    call $~lib/array/Array<i32>#__get
    local.set $requiredBytes
    local.get $i
    i32.const 1
    i32.add
    local.get $requiredBytes
    i32.add
    local.get $bytecode
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    call $~lib/typedarray/Uint8Array#get:length
    i32.le_s
    if
     local.get $i
     local.get $iData
     call $assembly/instructions/Instruction#get:kind
     local.get $bytecode
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=8
     local.get $11
     local.get $i
     i32.const 1
     i32.add
     i32.const 1
     global.set $~argumentsLength
     i32.const 0
     call $~lib/typedarray/Uint8Array#subarray@varargs
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store
     local.get $11
     call $assembly/program-build/skipBytes
     i32.add
     local.set $i
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  i32.const 27
  i32.const 17024
  call $~lib/rt/__newArray
  local.tee $packed
  i32.store offset=12
  i32.const 0
  local.set $i|8
  loop $for-loop|1
   local.get $i|8
   local.get $mask
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store
   local.get $11
   call $~lib/staticarray/StaticArray<bool>#get:length
   i32.lt_s
   if
    i32.const 0
    local.set $byte
    local.get $i|8
    local.set $j
    loop $for-loop|3
     local.get $j
     local.get $i|8
     i32.const 8
     i32.add
     i32.lt_s
     if
      local.get $byte
      i32.const 255
      i32.and
      i32.const 1
      i32.const 7
      i32.and
      i32.shr_u
      local.set $byte
      local.get $j
      local.get $mask
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store
      local.get $11
      call $~lib/staticarray/StaticArray<bool>#get:length
      i32.lt_s
      if (result i32)
       local.get $mask
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store
       local.get $11
       local.get $j
       call $~lib/staticarray/StaticArray<bool>#__get
      else
       i32.const 0
      end
      if
       local.get $byte
       i32.const 128
       i32.or
       local.set $byte
      end
      local.get $j
      i32.const 1
      i32.add
      local.set $j
      br $for-loop|3
     end
    end
    local.get $packed
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    local.get $byte
    call $~lib/array/Array<u8>#push
    drop
    local.get $i|8
    i32.const 8
    i32.add
    local.set $i|8
    br $for-loop|1
   end
  end
  local.get $packed
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $~lib/dataview/DataView#constructor (param $this i32) (param $buffer i32) (param $byteOffset i32) (param $byteLength i32) (result i32)
  (local $dataStart i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 40
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $~lib/dataview/DataView#set:buffer
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $~lib/dataview/DataView#set:dataStart
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $~lib/dataview/DataView#set:byteLength
  local.get $byteLength
  i32.const 1073741820
  i32.gt_u
  local.get $byteOffset
  local.get $byteLength
  i32.add
  local.get $buffer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.gt_u
  i32.or
  if
   i32.const 8176
   i32.const 17056
   i32.const 25
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $buffer
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $~lib/dataview/DataView#set:buffer
  local.get $buffer
  local.get $byteOffset
  i32.add
  local.set $dataStart
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $dataStart
  call $~lib/dataview/DataView#set:dataStart
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $byteLength
  call $~lib/dataview/DataView#set:byteLength
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/dataview/DataView#constructor@varargs (param $this i32) (param $buffer i32) (param $byteOffset i32) (param $byteLength i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   local.get $buffer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $~lib/arraybuffer/ArrayBuffer#get:byteLength
   local.set $byteLength
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $buffer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $byteOffset
  local.get $byteLength
  call $~lib/dataview/DataView#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/dataview/DataView#setUint64 (param $this i32) (param $byteOffset i32) (param $value i64) (param $littleEndian i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $byteOffset
  i32.const 31
  i32.shr_u
  local.get $byteOffset
  i32.const 8
  i32.add
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/dataview/DataView#get:byteLength
  i32.gt_s
  i32.or
  if
   i32.const 480
   i32.const 17056
   i32.const 174
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/dataview/DataView#get:dataStart
  local.get $byteOffset
  i32.add
  local.get $littleEndian
  if (result i64)
   local.get $value
  else
   local.get $value
   call $~lib/polyfills/bswap<u64>
  end
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/codec/encodeVarU32 (param $v i64) (result i32)
  (local $maxEncoded i64)
  (local $dest i32)
  (local $dataView i32)
  (local $minEncoded i64)
  (local $l i32)
  (local $dest|6 i32)
  (local $maxVal i32)
  (local $byte i64)
  (local $rest i64)
  (local $i i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  local.get $v
  i64.const 0
  i64.eq
  if
   i32.const 0
   i32.const 1
   call $~lib/typedarray/Uint8Array#constructor
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  i64.const 2
  i64.const 7
  i64.const 8
  i64.mul
  call $~lib/math/ipow64
  local.set $maxEncoded
  local.get $v
  local.get $maxEncoded
  i64.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 9
   call $~lib/typedarray/Uint8Array#constructor
   local.tee $dest
   i32.store
   local.get $dest
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $11
   i32.const 0
   i32.const 255
   call $~lib/typedarray/Uint8Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $dest
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=8
   local.get $11
   call $~lib/arraybuffer/ArrayBufferView#get:buffer
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $11
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/dataview/DataView#constructor@varargs
   local.tee $dataView
   i32.store offset=12
   local.get $dataView
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $11
   i32.const 1
   local.get $v
   i32.const 1
   call $~lib/dataview/DataView#setUint64
   local.get $dest
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $maxEncoded
  i64.const 7
  i64.shr_u
  local.set $minEncoded
  i32.const 7
  local.set $l
  loop $for-loop|0
   local.get $l
   i32.const 0
   i32.ge_s
   if
    local.get $v
    local.get $minEncoded
    i64.ge_u
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     local.get $l
     i32.const 1
     i32.add
     call $~lib/typedarray/Uint8Array#constructor
     local.tee $dest|6
     i32.store offset=16
     i32.const 2
     i32.const 8
     local.get $l
     i32.mul
     call $~lib/math/ipow32
     local.set $maxVal
     i32.const 2
     i32.const 8
     call $~lib/math/ipow32
     i32.const 2
     i32.const 8
     local.get $l
     i32.sub
     call $~lib/math/ipow32
     i32.sub
     i64.extend_i32_s
     local.get $v
     local.get $maxVal
     i64.extend_i32_s
     i64.div_u
     i64.add
     local.set $byte
     local.get $dest|6
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     i32.const 0
     local.get $byte
     i32.wrap_i64
     i32.const 255
     i32.and
     call $~lib/typedarray/Uint8Array#__set
     local.get $v
     local.get $maxVal
     i64.extend_i32_s
     i64.rem_u
     local.set $rest
     i32.const 1
     local.set $i
     loop $for-loop|1
      local.get $i
      i32.const 1
      local.get $l
      i32.add
      i32.lt_s
      if
       local.get $dest|6
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       local.get $11
       local.get $i
       local.get $rest
       i32.wrap_i64
       i32.const 255
       i32.and
       call $~lib/typedarray/Uint8Array#__set
       local.get $rest
       i64.const 8
       i64.shr_u
       local.set $rest
       local.get $i
       i32.const 1
       i32.add
       local.set $i
       br $for-loop|1
      end
     end
     local.get $dest|6
     local.set $11
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $11
     return
    end
    local.get $minEncoded
    local.set $maxEncoded
    local.get $minEncoded
    i64.const 7
    i64.shr_u
    local.set $minEncoded
    local.get $l
    i32.const 1
    i32.sub
    local.set $l
    br $for-loop|0
   end
  end
  i32.const 17120
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=4
  local.get $11
  local.get $v
  i32.const 10
  call $~lib/number/U64#toString
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=8
  local.get $11
  call $~lib/string/String#concat
  i32.const 17200
  i32.const 160
  i32.const 3
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/program-build/wrapAsProgram (param $bytecode i32) (result i32)
  (local $codeLength i32)
  (local $mask i32)
  (local $codeLengthBytes i32)
  (local $data i32)
  (local $offset i32)
  (local $i i32)
  (local $i|7 i32)
  (local $i|8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  local.get $bytecode
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $~lib/typedarray/Uint8Array#get:length
  local.set $codeLength
  global.get $~lib/memory/__stack_pointer
  local.get $bytecode
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $assembly/program-build/buildMask
  local.tee $mask
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $codeLength
  i64.extend_i32_s
  call $assembly/codec/encodeVarU32
  local.tee $codeLengthBytes
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1
  i32.const 1
  i32.add
  local.get $codeLengthBytes
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $~lib/typedarray/Uint8Array#get:length
  i32.add
  local.get $codeLength
  i32.add
  local.get $mask
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $~lib/array/Array<u8>#get:length
  i32.add
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $data
  i32.store offset=12
  local.get $data
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#__set
  local.get $data
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  i32.const 1
  i32.const 0
  call $~lib/typedarray/Uint8Array#__set
  i32.const 2
  local.set $offset
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $codeLengthBytes
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $~lib/typedarray/Uint8Array#get:length
   i32.lt_s
   if
    local.get $data
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store
    local.get $9
    local.get $offset
    local.get $codeLengthBytes
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store offset=16
    local.get $9
    local.get $i
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $offset
    i32.const 1
    i32.add
    local.set $offset
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $i|7
  loop $for-loop|1
   local.get $i|7
   local.get $bytecode
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $~lib/typedarray/Uint8Array#get:length
   i32.lt_s
   if
    local.get $data
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store
    local.get $9
    local.get $offset
    local.get $bytecode
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store offset=16
    local.get $9
    local.get $i|7
    call $~lib/typedarray/Uint8Array#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $offset
    i32.const 1
    i32.add
    local.set $offset
    local.get $i|7
    i32.const 1
    i32.add
    local.set $i|7
    br $for-loop|1
   end
  end
  i32.const 0
  local.set $i|8
  loop $for-loop|2
   local.get $i|8
   local.get $mask
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $~lib/array/Array<u8>#get:length
   i32.lt_s
   if
    local.get $data
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store
    local.get $9
    local.get $offset
    local.get $mask
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store offset=16
    local.get $9
    local.get $i|8
    call $~lib/array/Array<u8>#__get
    call $~lib/typedarray/Uint8Array#__set
    local.get $offset
    i32.const 1
    i32.add
    local.set $offset
    local.get $i|8
    i32.const 1
    i32.add
    local.set $i|8
    br $for-loop|2
   end
  end
  local.get $data
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<u8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $target
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $source
  local.tee $source|4
  i32.store offset=4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $~lib/array/Array<u8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 480
   i32.const 720
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $target
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $~lib/array/Array<u8>#get:dataStart
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/program/liftBytes (param $data i32) (result i32)
  (local $p i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/array/Array<u8>#get:length
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $p
  i32.store offset=4
  local.get $p
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<u8>>
  local.get $p
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/codec/Decoder#constructor (param $this i32) (param $source i32) (param $offset i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 42
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $source
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/codec/Decoder#set:source
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $offset
  call $assembly/codec/Decoder#set:offset
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/codec/Decoder#ensureBytes (param $this i32) (param $need i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $assembly/codec/Decoder#get:offset
  local.get $need
  i32.add
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/codec/Decoder#get:source
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/typedarray/Uint8Array#get:length
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $need
   i32.const 10
   call $~lib/number/U32#toString
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/codec/Decoder#get:source
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $~lib/typedarray/Uint8Array#get:length
   local.get $this
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/codec/Decoder#get:offset
   i32.sub
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $3
   i32.store offset=12
   i32.const 17392
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 1
   local.get $2
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 17392
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 3
   local.get $3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 17392
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 14480
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 17200
   i32.const 25
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/codec/ValOffset<u32>#constructor (param $this i32) (param $value i32) (param $offset i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 43
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $value
  call $assembly/codec/ValOffset<u32>#set:value
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $offset
  call $assembly/codec/ValOffset<u32>#set:offset
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/codec/decodeVarU32 (param $data i32) (result i32)
  (local $length i32)
  (local $first i32)
  (local $3 i32)
  (local $4 i32)
  (local $msb i32)
  (local $number i32)
  (local $i i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/codec/variableLength
  i32.load
  call_indirect (type $0)
  i32.const 255
  i32.and
  local.set $length
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  local.set $first
  local.get $length
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.get $first
   i32.const 1
   call $assembly/codec/ValOffset<u32>#constructor
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $data
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $~lib/typedarray/Uint8Array#get:length
  local.get $length
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $length
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $data
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $4
   i32.store offset=8
   i32.const 17600
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.const 1
   local.get $3
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 17600
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.const 3
   local.get $4
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 17600
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.const 14480
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 17200
   i32.const 108
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $first
  i32.const 2
  i32.const 8
  local.get $length
  i32.sub
  call $~lib/math/ipow32
  i32.add
  i32.const 2
  i32.const 8
  call $~lib/math/ipow32
  i32.sub
  local.get $length
  i32.const 8
  i32.mul
  i32.shl
  local.set $msb
  i32.const 0
  local.set $number
  local.get $length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   if
    local.get $number
    i32.const 8
    i32.shl
    local.get $data
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    i32.const 1
    local.get $i
    i32.add
    call $~lib/typedarray/Uint8Array#__get
    i32.add
    local.set $number
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $number
  local.get $msb
  i32.add
  local.set $number
  i32.const 0
  local.get $number
  i32.const 1
  local.get $length
  i32.add
  call $assembly/codec/ValOffset<u32>#constructor
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/codec/Decoder#varU32 (param $this i32) (result i32)
  (local $v i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 1
  call $assembly/codec/Decoder#ensureBytes
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#subarray@varargs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/codec/decodeVarU32
  local.tee $v
  i32.store offset=12
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/ValOffset<u32>#get:offset
  i32.add
  call $assembly/codec/Decoder#set:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/codec/ValOffset<u32>#get:value
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/codec/Decoder#bytes (param $this i32) (param $len i32) (result i32)
  (local $v i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $len
  call $assembly/codec/Decoder#ensureBytes
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/codec/Decoder#get:source
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/codec/Decoder#get:offset
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/codec/Decoder#get:offset
  local.get $len
  i32.add
  call $~lib/typedarray/Uint8Array#subarray
  local.tee $v
  i32.store offset=8
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/codec/Decoder#get:offset
  local.get $len
  i32.add
  call $assembly/codec/Decoder#set:offset
  local.get $v
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/codec/Decoder#remainingBytes (param $this i32) (result i32)
  (local $v i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#subarray@varargs
  local.tee $v
  i32.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/typedarray/Uint8Array#get:length
  i32.add
  call $assembly/codec/Decoder#set:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/program/CodeAndMetadata#constructor (param $this i32) (param $code i32) (param $metadata i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 41
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $code
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/program/CodeAndMetadata#set:code
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $metadata
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/program/CodeAndMetadata#set:metadata
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/program/extractCodeAndMetadata (param $data i32) (result i32)
  (local $decoder i32)
  (local $metadataLength i32)
  (local $metadata i32)
  (local $code i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $data
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  i32.const 0
  call $assembly/codec/Decoder#constructor
  local.tee $decoder
  i32.store offset=4
  local.get $decoder
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/codec/Decoder#varU32
  local.set $metadataLength
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $metadataLength
  call $assembly/codec/Decoder#bytes
  local.tee $metadata
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $assembly/codec/Decoder#remainingBytes
  local.tee $code
  i32.store offset=12
  i32.const 0
  local.get $code
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $metadata
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=16
  local.get $5
  call $assembly/program/CodeAndMetadata#constructor
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/codec/Decoder#u24 (param $this i32) (result i32)
  (local $v i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 3
  call $assembly/codec/Decoder#ensureBytes
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  call $~lib/typedarray/Uint8Array#__get
  local.set $v
  local.get $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 1
  i32.add
  call $~lib/typedarray/Uint8Array#__get
  i32.const 8
  i32.shl
  i32.or
  local.set $v
  local.get $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 2
  i32.add
  call $~lib/typedarray/Uint8Array#__get
  i32.const 16
  i32.shl
  i32.or
  local.set $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 3
  i32.add
  call $assembly/codec/Decoder#set:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/codec/Decoder#u16 (param $this i32) (result i32)
  (local $v i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 2
  call $assembly/codec/Decoder#ensureBytes
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  call $~lib/typedarray/Uint8Array#__get
  local.set $v
  local.get $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 1
  i32.add
  call $~lib/typedarray/Uint8Array#__get
  i32.const 8
  i32.const 15
  i32.and
  i32.shl
  i32.or
  local.set $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 2
  i32.add
  call $assembly/codec/Decoder#set:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/codec/Decoder#u32 (param $this i32) (result i32)
  (local $v i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 4
  call $assembly/codec/Decoder#ensureBytes
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  call $~lib/typedarray/Uint8Array#__get
  local.set $v
  local.get $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 1
  i32.add
  call $~lib/typedarray/Uint8Array#__get
  i32.const 8
  i32.shl
  i32.or
  local.set $v
  local.get $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 2
  i32.add
  call $~lib/typedarray/Uint8Array#__get
  i32.const 16
  i32.shl
  i32.or
  local.set $v
  local.get $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 3
  i32.add
  call $~lib/typedarray/Uint8Array#__get
  i32.const 24
  i32.shl
  i32.or
  local.set $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 4
  i32.add
  call $assembly/codec/Decoder#set:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/codec/Decoder#isExhausted (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $assembly/codec/Decoder#get:offset
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $assembly/codec/Decoder#get:source
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/typedarray/Uint8Array#get:length
  i32.ge_s
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $assembly/codec/Decoder#finish (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $assembly/codec/Decoder#isExhausted
  i32.eqz
  if
   i32.const 17904
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   call $assembly/codec/Decoder#get:source
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $~lib/typedarray/Uint8Array#get:length
   local.get $this
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $assembly/codec/Decoder#get:offset
   i32.sub
   i32.const 10
   call $~lib/number/I32#toString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/string/String#concat
   i32.const 17200
   i32.const 31
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/codec/Decoder#u8 (param $this i32) (result i32)
  (local $v i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  i32.const 1
  call $assembly/codec/Decoder#ensureBytes
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:source
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  call $~lib/typedarray/Uint8Array#__get
  local.set $v
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/codec/Decoder#get:offset
  i32.const 1
  i32.add
  call $assembly/codec/Decoder#set:offset
  local.get $v
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/staticarray/StaticArray<u32>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<u32>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<u32>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/program/Mask#constructor (param $this i32) (param $packedMask i32) (param $codeLength i32) (result i32)
  (local $lastInstructionOffset i32)
  (local $i i32)
  (local $bits i32)
  (local $index i32)
  (local $b i32)
  (local $isSet i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 31
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  i32.const 0
  call $assembly/program/Mask#set:bytesToSkip
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  i32.const 0
  local.get $codeLength
  call $~lib/staticarray/StaticArray<u32>#constructor
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $assembly/program/Mask#set:bytesToSkip
  i32.const 0
  local.set $lastInstructionOffset
  local.get $packedMask
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   if
    local.get $packedMask
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store offset=4
    local.get $9
    local.get $i
    call $~lib/typedarray/Uint8Array#__get
    local.set $bits
    local.get $i
    i32.const 8
    i32.mul
    local.set $index
    i32.const 7
    local.set $b
    loop $for-loop|2
     local.get $b
     i32.const 0
     i32.ge_s
     if
      local.get $bits
      i32.const 128
      i32.and
      local.set $isSet
      local.get $bits
      i32.const 1
      i32.const 7
      i32.and
      i32.shl
      local.set $bits
      local.get $index
      local.get $b
      i32.add
      local.get $codeLength
      i32.lt_s
      if
       local.get $isSet
       if (result i32)
        i32.const 0
       else
        local.get $lastInstructionOffset
        i32.const 1
        i32.add
       end
       local.set $lastInstructionOffset
       local.get $this
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=8
       local.get $9
       call $assembly/program/Mask#get:bytesToSkip
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=4
       local.get $9
       local.get $index
       local.get $b
       i32.add
       local.get $lastInstructionOffset
       global.get $assembly/program/MAX_SKIP
       i32.const 1
       i32.add
       i32.lt_u
       if (result i32)
        local.get $lastInstructionOffset
       else
        global.get $assembly/program/MAX_SKIP
        i32.const 1
        i32.add
       end
       call $~lib/staticarray/StaticArray<u32>#__set
      end
      local.get $b
      i32.const 1
      i32.sub
      local.set $b
      br $for-loop|2
     end
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $assembly/program/JumpTable#constructor (param $this i32) (param $itemBytes i32) (param $data i32) (result i32)
  (local $jumps i32)
  (local $i i32)
  (local $num i64)
  (local $j i32)
  (local $nextNum i64)
  (local $isOverflow i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 33
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  i32.const 0
  call $assembly/program/JumpTable#set:jumps
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $itemBytes
  i32.const 255
  i32.and
  i32.const 0
  i32.gt_u
  if (result i32)
   local.get $data
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $~lib/typedarray/Uint8Array#get:length
   local.get $itemBytes
   i32.const 255
   i32.and
   i32.div_s
  else
   i32.const 0
  end
  call $~lib/staticarray/StaticArray<u64>#constructor
  local.tee $jumps
  i32.store offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $data
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $~lib/typedarray/Uint8Array#get:length
   i32.lt_s
   if
    i64.const 0
    local.set $num
    local.get $itemBytes
    i32.const 1
    i32.sub
    i32.const 255
    i32.and
    local.set $j
    loop $for-loop|1
     local.get $j
     i32.const 0
     i32.ge_s
     if
      local.get $num
      i64.const 8
      i64.shl
      local.set $nextNum
      local.get $nextNum
      local.get $num
      i64.lt_u
      local.set $isOverflow
      local.get $nextNum
      local.get $data
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=4
      local.get $9
      local.get $i
      local.get $j
      i32.add
      call $~lib/typedarray/Uint8Array#__get
      i64.extend_i32_u
      i64.add
      local.set $nextNum
      local.get $isOverflow
      if (result i32)
       i32.const 1
      else
       local.get $nextNum
       local.get $num
       i64.lt_u
      end
      local.set $isOverflow
      local.get $isOverflow
      if (result i64)
       global.get $~lib/builtins/u64.MAX_VALUE
      else
       local.get $nextNum
      end
      local.set $num
      local.get $j
      i32.const 1
      i32.sub
      local.set $j
      br $for-loop|1
     end
    end
    local.get $jumps
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store offset=4
    local.get $9
    local.get $i
    local.get $itemBytes
    i32.const 255
    i32.and
    i32.div_s
    local.get $num
    call $~lib/staticarray/StaticArray<u64>#__set
    local.get $i
    local.get $itemBytes
    i32.const 255
    i32.and
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  local.get $jumps
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=12
  local.get $9
  call $assembly/program/JumpTable#set:jumps
  local.get $this
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/staticarray/StaticArray<i32>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<i32>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 93
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $index
  local.get $value
  call $~lib/staticarray/StaticArray<i32>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/staticarray/StaticArray<i32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/staticarray/StaticArray<i32>#get:length
  i32.ge_u
  if
   i32.const 480
   i32.const 8288
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/program/BasicBlocks#constructor (param $this i32) (param $code i32) (param $mask i32) (result i32)
  (local $len i32)
  (local $isStartOrEnd i32)
  (local $n i32)
  (local $isInstructionInMask i32)
  (local $skipArgs i32)
  (local $iData i32)
  (local $isTerminating i32)
  (local $newBlockStart i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 34
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=4
  local.get $11
  i32.const 0
  call $assembly/program/BasicBlocks#set:isStartOrEnd
  local.get $code
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=4
  local.get $11
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/staticarray/StaticArray<i32>#constructor
  local.tee $isStartOrEnd
  i32.store offset=8
  local.get $len
  i32.const 0
  i32.gt_s
  if
   local.get $isStartOrEnd
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $11
   i32.const 0
   global.get $assembly/program/BasicBlock.START
   call $~lib/staticarray/StaticArray<i32>#__set
  end
  i32.const 0
  local.set $n
  loop $for-loop|0
   local.get $n
   local.get $len
   i32.lt_s
   if
    block $for-continue|0
     local.get $mask
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     local.get $n
     call $assembly/program/Mask#isInstruction
     local.set $isInstructionInMask
     local.get $isInstructionInMask
     i32.eqz
     if
      br $for-continue|0
     end
     local.get $mask
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     local.get $n
     call $assembly/program/Mask#skipBytesToNextInstruction
     local.set $skipArgs
     local.get $code
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     local.get $n
     call $~lib/typedarray/Uint8Array#__get
     global.get $assembly/instructions/INSTRUCTIONS
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     call $~lib/array/Array<assembly/instructions/Instruction>#get:length
     i32.const 255
     i32.and
     i32.ge_u
     if (result i32)
      global.get $assembly/instructions/MISSING_INSTRUCTION
     else
      global.get $assembly/instructions/INSTRUCTIONS
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=4
      local.get $11
      local.get $code
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=12
      local.get $11
      local.get $n
      call $~lib/typedarray/Uint8Array#__get
      call $~lib/array/Array<assembly/instructions/Instruction>#__get
     end
     local.set $iData
     local.get $iData
     call $assembly/instructions/Instruction#get:isTerminating
     local.set $isTerminating
     local.get $isTerminating
     if
      local.get $n
      i32.const 1
      i32.add
      local.get $skipArgs
      i32.add
      local.set $newBlockStart
      local.get $newBlockStart
      local.get $len
      i32.lt_s
      if
       local.get $isStartOrEnd
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       local.get $11
       local.get $newBlockStart
       global.get $assembly/program/BasicBlock.START
       call $~lib/staticarray/StaticArray<i32>#__set
      end
      local.get $isStartOrEnd
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=4
      local.get $11
      local.get $n
      local.get $isStartOrEnd
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=12
      local.get $11
      local.get $n
      call $~lib/staticarray/StaticArray<i32>#__get
      global.get $assembly/program/BasicBlock.END
      i32.or
      call $~lib/staticarray/StaticArray<i32>#__set
     end
    end
    local.get $n
    i32.const 1
    i32.add
    local.set $n
    br $for-loop|0
   end
  end
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=4
  local.get $11
  local.get $isStartOrEnd
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=12
  local.get $11
  call $assembly/program/BasicBlocks#set:isStartOrEnd
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $assembly/program/Program#constructor (param $this i32) (param $code i32) (param $mask i32) (param $jumpTable i32) (param $basicBlocks i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 30
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $code
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/program/Program#set:code
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $mask
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/program/Program#set:mask
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $jumpTable
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/program/Program#set:jumpTable
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $basicBlocks
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/program/Program#set:basicBlocks
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/program/deblob (param $program i32) (result i32)
  (local $decoder i32)
  (local $jumpTableLength i32)
  (local $jumpTableItemLength i32)
  (local $codeLength i32)
  (local $jumpTableLengthInBytes i32)
  (local $rawJumpTable i32)
  (local $rawCode i32)
  (local $rawMask i32)
  (local $mask i32)
  (local $jumpTable i32)
  (local $basicBlocks i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $program
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  i32.const 0
  call $assembly/codec/Decoder#constructor
  local.tee $decoder
  i32.store offset=4
  local.get $decoder
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  call $assembly/codec/Decoder#varU32
  local.set $jumpTableLength
  local.get $decoder
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  call $assembly/codec/Decoder#u8
  local.set $jumpTableItemLength
  local.get $decoder
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  call $assembly/codec/Decoder#varU32
  local.set $codeLength
  local.get $jumpTableLength
  local.get $jumpTableItemLength
  i32.mul
  local.set $jumpTableLengthInBytes
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $jumpTableLengthInBytes
  call $assembly/codec/Decoder#bytes
  local.tee $rawJumpTable
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $codeLength
  call $assembly/codec/Decoder#bytes
  local.tee $rawCode
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $codeLength
  i32.const 7
  i32.add
  i32.const 8
  i32.div_u
  call $assembly/codec/Decoder#bytes
  local.tee $rawMask
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $rawMask
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $codeLength
  call $assembly/program/Mask#constructor
  local.tee $mask
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $jumpTableItemLength
  local.get $rawJumpTable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  call $assembly/program/JumpTable#constructor
  local.tee $jumpTable
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $rawCode
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $mask
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=28
  local.get $12
  call $assembly/program/BasicBlocks#constructor
  local.tee $basicBlocks
  i32.store offset=32
  i32.const 0
  local.get $rawCode
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $mask
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=28
  local.get $12
  local.get $jumpTable
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=36
  local.get $12
  local.get $basicBlocks
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=40
  local.get $12
  call $assembly/program/Program#constructor
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#constructor" (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 18
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:buckets"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:bucketsMask"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.5" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.5"
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entries"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 4
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCapacity"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesOffset"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCount"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/typedarray/Uint8Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  block $"~lib/typedarray/WRAP<~lib/typedarray/Uint8Array,u8>|inlined.0" (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $buffer
   local.tee $buffer|3
   i32.store
   local.get $byteOffset
   local.set $byteOffset|4
   local.get $length
   local.set $len
   local.get $buffer|3
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $~lib/arraybuffer/ArrayBuffer#get:byteLength
   local.set $bufferByteLength
   local.get $byteOffset|4
   local.get $bufferByteLength
   i32.gt_u
   local.get $byteOffset|4
   i32.const 0
   i32.and
   i32.or
   if
    i32.const 480
    i32.const 720
    i32.const 1860
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   local.get $len
   i32.const 0
   i32.lt_s
   if
    local.get $len
    i32.const -1
    i32.eq
    if
     local.get $bufferByteLength
     i32.const 0
     i32.and
     if
      i32.const 8176
      i32.const 720
      i32.const 1865
      i32.const 9
      call $~lib/builtins/abort
      unreachable
     end
     local.get $bufferByteLength
     local.get $byteOffset|4
     i32.sub
     local.set $byteLength
    else
     i32.const 8176
     i32.const 720
     i32.const 1869
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   else
    local.get $len
    i32.const 0
    i32.shl
    local.set $byteLength
    local.get $byteOffset|4
    local.get $byteLength
    i32.add
    local.get $bufferByteLength
    i32.gt_s
    if
     i32.const 8176
     i32.const 720
     i32.const 1874
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store offset=8
   local.get $out
   local.get $buffer|3
   i32.store
   local.get $out
   local.get $buffer|3
   i32.const 0
   call $~lib/rt/itcms/__link
   local.get $out
   local.get $byteLength
   i32.store offset=8
   local.get $out
   local.get $buffer|3
   local.get $byteOffset|4
   i32.add
   i32.store offset=4
   local.get $out
   br $"~lib/typedarray/WRAP<~lib/typedarray/Uint8Array,u8>|inlined.0"
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#unshift (param $this i32) (param $value i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:length_
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:dataStart
  local.set $ptr
  local.get $ptr
  i32.const 4
  i32.add
  local.get $ptr
  local.get $len
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy
  local.get $ptr
  local.get $value
  i32.store
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/memory-page/RawPage>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory-page/Arena#constructor (param $this i32) (param $pageCount i32) (result i32)
  (local $2 i32)
  (local $data i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $assembly/memory-page/Arena#set:free
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $assembly/memory-page/Arena#set:arenaBytes
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $assembly/memory-page/Arena#set:extraPageIndex
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  global.get $assembly/memory-page/PAGE_SIZE
  local.get $pageCount
  i32.mul
  call $assembly/memory-page/Arena#set:arenaBytes
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.const 2
  i32.const 17
  i32.const 18032
  call $~lib/rt/__newArray
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/memory-page/Arena#set:free
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $pageCount
  call $assembly/memory-page/Arena#set:extraPageIndex
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory-page/Arena#get:arenaBytes
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $data
  i32.store offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $pageCount
   i32.lt_s
   if
    local.get $this
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=16
    local.get $5
    call $assembly/memory-page/Arena#get:free
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    i32.const 0
    local.get $i
    local.get $data
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=20
    local.get $5
    local.get $i
    global.get $assembly/memory-page/PAGE_SIZE
    i32.mul
    global.get $assembly/memory-page/PAGE_SIZE
    call $~lib/typedarray/Uint8Array.wrap
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=16
    local.get $5
    call $assembly/memory-page/RawPage#constructor
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $5
    call $~lib/array/Array<assembly/memory-page/RawPage>#unshift
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/memory/MemoryBuilder#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 45
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $assembly/memory/MemoryBuilder#set:pages
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 128
  call $assembly/memory-page/Arena#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $assembly/memory/MemoryBuilder#set:arena
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/memory/MemoryBuilder#getOrCreatePageForAddress (param $this i32) (param $access i32) (param $address i32) (result i32)
  (local $pageIdx i32)
  (local $page i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $address
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shr_u
  local.set $pageIdx
  local.get $pageIdx
  global.get $assembly/memory-page/RESERVED_PAGES
  i32.lt_u
  if
   i32.const 18064
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $pageIdx
   i32.const 10
   call $~lib/number/U32#toString
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $~lib/string/String#concat
   i32.const 18160
   i32.const 93
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/MemoryBuilder#get:pages
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $pageIdx
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#has"
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/memory/MemoryBuilder#get:arena
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   call $assembly/memory-page/Arena#acquire
   local.tee $page
   i32.store offset=8
   local.get $this
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory/MemoryBuilder#get:pages
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $pageIdx
   i32.const 0
   local.get $access
   local.get $page
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $5
   call $assembly/memory-page/Page#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $"~lib/map/Map<u32,assembly/memory-page/Page>#set"
   drop
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $assembly/memory/MemoryBuilder#get:pages
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $pageIdx
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get"
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $target
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $source
  local.tee $source|4
  i32.store offset=4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 480
   i32.const 720
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $target
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $~lib/arraybuffer/ArrayBufferView#get:dataStart
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/memory/MemoryBuilder#setData (param $this i32) (param $access i32) (param $address i32) (param $data i32) (result i32)
  (local $currentAddress i32)
  (local $currentData i32)
  (local $page i32)
  (local $relAddress i32)
  (local $spaceInPage i32)
  (local $end i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  local.get $address
  local.set $currentAddress
  global.get $~lib/memory/__stack_pointer
  local.get $data
  local.tee $currentData
  i32.store
  loop $while-continue|0
   local.get $currentData
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   local.get $10
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=4
    local.get $10
    local.get $access
    local.get $currentAddress
    call $assembly/memory/MemoryBuilder#getOrCreatePageForAddress
    local.tee $page
    i32.store offset=8
    local.get $currentAddress
    global.get $assembly/memory-page/PAGE_SIZE
    i32.rem_u
    local.set $relAddress
    global.get $assembly/memory-page/PAGE_SIZE
    local.get $relAddress
    i32.sub
    local.set $spaceInPage
    local.get $currentData
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=4
    local.get $10
    call $~lib/typedarray/Uint8Array#get:length
    local.get $spaceInPage
    i32.lt_u
    if (result i32)
     local.get $currentData
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=4
     local.get $10
     call $~lib/typedarray/Uint8Array#get:length
    else
     local.get $spaceInPage
    end
    local.set $end
    local.get $page
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=20
    local.get $10
    call $assembly/memory-page/Page#get:raw
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=16
    local.get $10
    call $assembly/memory-page/RawPage#get:data
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=4
    local.get $10
    local.get $currentData
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=16
    local.get $10
    i32.const 0
    local.get $end
    call $~lib/typedarray/Uint8Array#subarray
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=12
    local.get $10
    local.get $relAddress
    call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array>
    local.get $currentAddress
    local.get $end
    i32.add
    local.set $currentAddress
    global.get $~lib/memory/__stack_pointer
    local.get $currentData
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=4
    local.get $10
    local.get $end
    i32.const 1
    global.set $~argumentsLength
    i32.const 0
    call $~lib/typedarray/Uint8Array#subarray@varargs
    local.tee $currentData
    i32.store
    br $while-continue|0
   end
  end
  local.get $this
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $assembly/memory/MemoryBuilder#setEmpty (param $this i32) (param $access i32) (param $address i32) (param $len i32) (result i32)
  (local $endAddress i32)
  (local $currentAddress i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $address
  local.get $len
  i32.add
  local.set $endAddress
  local.get $address
  local.set $currentAddress
  loop $for-loop|0
   local.get $currentAddress
   local.get $endAddress
   i32.lt_u
   if
    local.get $this
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    local.get $6
    local.get $access
    local.get $currentAddress
    call $assembly/memory/MemoryBuilder#getOrCreatePageForAddress
    drop
    local.get $currentAddress
    global.get $assembly/memory-page/PAGE_SIZE
    i32.add
    local.set $currentAddress
    br $for-loop|0
   end
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/memory/Memory#constructor (param $this i32) (param $arena i32) (param $pages i32) (param $sbrkAddress i32) (result i32)
  (local $sbrkPage i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 15
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $arena
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/memory/Memory#set:arena
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $pages
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/memory/Memory#set:pages
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $sbrkAddress
  call $assembly/memory/Memory#set:sbrkAddress
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $assembly/memory/Memory#set:lastAllocatedPage
  local.get $sbrkAddress
  global.get $assembly/memory-page/PAGE_SIZE_SHIFT
  i32.shr_u
  local.set $sbrkPage
  local.get $sbrkPage
  global.get $assembly/memory-page/RESERVED_PAGES
  i32.lt_u
  if
   i32.const 18224
   i32.const 18160
   i32.const 119
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $pages
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  local.get $sbrkPage
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#has"
  if (result i32)
   local.get $sbrkPage
  else
   local.get $sbrkPage
   i32.const 1
   i32.sub
  end
  call $assembly/memory/Memory#set:lastAllocatedPage
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/memory/MemoryBuilder#build (param $this i32) (param $sbrkAddress i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  i32.const 0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/memory/MemoryBuilder#get:arena
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/memory/MemoryBuilder#get:pages
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $sbrkAddress
  call $assembly/memory/Memory#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/spi/StandardProgram#constructor (param $this i32) (param $program i32) (param $memory i32) (param $registers i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 44
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $program
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/spi/StandardProgram#set:program
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/spi/StandardProgram#set:memory
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/spi/StandardProgram#set:registers
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/spi/StandardProgram#set:metadata
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/spi/StandardProgram#set:pc
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i64.const 0
  call $assembly/spi/StandardProgram#set:gas
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/spi/decodeSpi (param $data i32) (param $args i32) (result i32)
  (local $argsLength i32)
  (local $3 i32)
  (local $4 i32)
  (local $decoder i32)
  (local $roLength i32)
  (local $rwLength i32)
  (local $heapPages i32)
  (local $stackSize i32)
  (local $roMem i32)
  (local $rwMem i32)
  (local $codeLength i32)
  (local $code i32)
  (local $program i32)
  (local $builder i32)
  (local $heapStart i32)
  (local $heapZerosStart i32)
  (local $heapZerosLength i32)
  (local $heapZerosEnd i32)
  (local $stackLength i32)
  (local $stackStart i32)
  (local $memory i32)
  (local $registers i32)
  (local $24 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 52
  memory.fill
  local.get $args
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $~lib/typedarray/Uint8Array#get:length
  local.set $argsLength
  local.get $argsLength
  global.get $assembly/spi/MAX_ARGS_LEN
  i32.gt_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $argsLength
   i32.const 10
   call $~lib/number/U32#toString
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/spi/MAX_ARGS_LEN
   i32.const 10
   call $~lib/number/U32#toString
   local.tee $4
   i32.store offset=8
   i32.const 17792
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   i32.const 1
   local.get $3
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store offset=12
   local.get $24
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 17792
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   i32.const 3
   local.get $4
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store offset=12
   local.get $24
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 17792
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   i32.const 14480
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store offset=12
   local.get $24
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 17840
   i32.const 18
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $data
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  i32.const 0
  call $assembly/codec/Decoder#constructor
  local.tee $decoder
  i32.store offset=16
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $assembly/codec/Decoder#u24
  local.set $roLength
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $assembly/codec/Decoder#u24
  local.set $rwLength
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $assembly/codec/Decoder#u16
  local.set $heapPages
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $assembly/codec/Decoder#u24
  local.set $stackSize
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  local.get $roLength
  call $assembly/codec/Decoder#bytes
  local.tee $roMem
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  local.get $rwLength
  call $assembly/codec/Decoder#bytes
  local.tee $rwMem
  i32.store offset=24
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $assembly/codec/Decoder#u32
  local.set $codeLength
  global.get $~lib/memory/__stack_pointer
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  local.get $codeLength
  call $assembly/codec/Decoder#bytes
  local.tee $code
  i32.store offset=28
  local.get $decoder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $assembly/codec/Decoder#finish
  global.get $~lib/memory/__stack_pointer
  local.get $code
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  call $assembly/program/deblob
  local.tee $program
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/MemoryBuilder#constructor
  local.tee $builder
  i32.store offset=36
  i32.const 2
  global.get $assembly/memory-page/SEGMENT_SIZE
  i32.mul
  local.get $roLength
  call $assembly/spi/alignToSegmentSize
  i32.add
  local.set $heapStart
  local.get $heapStart
  local.get $rwLength
  call $assembly/spi/alignToPageSize
  i32.add
  local.set $heapZerosStart
  local.get $heapPages
  i32.const 65535
  i32.and
  global.get $assembly/memory-page/PAGE_SIZE
  i32.mul
  local.set $heapZerosLength
  local.get $heapZerosStart
  local.get $heapZerosLength
  i32.add
  local.set $heapZerosEnd
  local.get $stackSize
  call $assembly/spi/alignToPageSize
  local.set $stackLength
  global.get $assembly/spi/STACK_SEGMENT_END
  local.get $stackLength
  i32.sub
  local.set $stackStart
  local.get $roLength
  i32.const 0
  i32.gt_u
  if
   local.get $builder
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   global.get $assembly/memory-page/Access.Read
   global.get $assembly/memory-page/SEGMENT_SIZE
   local.get $roMem
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store offset=12
   local.get $24
   call $assembly/memory/MemoryBuilder#setData
   drop
  end
  local.get $argsLength
  i32.const 0
  i32.gt_u
  if
   local.get $builder
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   global.get $assembly/memory-page/Access.Read
   global.get $assembly/spi/ARGS_SEGMENT_START
   local.get $args
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store offset=12
   local.get $24
   call $assembly/memory/MemoryBuilder#setData
   drop
  end
  local.get $rwLength
  i32.const 0
  i32.gt_u
  if
   local.get $builder
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   global.get $assembly/memory-page/Access.Write
   local.get $heapStart
   local.get $rwMem
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store offset=12
   local.get $24
   call $assembly/memory/MemoryBuilder#setData
   drop
  end
  local.get $heapZerosLength
  i32.const 0
  i32.gt_u
  if
   local.get $builder
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   global.get $assembly/memory-page/Access.Write
   local.get $heapZerosStart
   local.get $heapZerosLength
   call $assembly/memory/MemoryBuilder#setEmpty
   drop
  end
  local.get $stackLength
  i32.const 0
  i32.gt_u
  if
   local.get $builder
   local.set $24
   global.get $~lib/memory/__stack_pointer
   local.get $24
   i32.store
   local.get $24
   global.get $assembly/memory-page/Access.Write
   local.get $stackStart
   local.get $stackLength
   call $assembly/memory/MemoryBuilder#setEmpty
   drop
  end
  global.get $~lib/memory/__stack_pointer
  local.get $builder
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  local.get $heapZerosEnd
  call $assembly/memory/MemoryBuilder#build
  local.tee $memory
  i32.store offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $assembly/registers/NO_OF_REGISTERS
  call $~lib/staticarray/StaticArray<u64>#constructor
  local.tee $registers
  i32.store offset=44
  local.get $registers
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  i32.const 0
  i64.const 4294901760
  call $~lib/staticarray/StaticArray<u64>#__set
  local.get $registers
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  i32.const 1
  global.get $assembly/spi/STACK_SEGMENT_END
  i64.extend_i32_u
  call $~lib/staticarray/StaticArray<u64>#__set
  local.get $registers
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  i32.const 7
  global.get $assembly/spi/ARGS_SEGMENT_START
  i64.extend_i32_u
  call $~lib/staticarray/StaticArray<u64>#__set
  local.get $registers
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  i32.const 8
  local.get $argsLength
  i64.extend_i32_u
  call $~lib/staticarray/StaticArray<u64>#__set
  i32.const 0
  local.get $program
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store
  local.get $24
  local.get $memory
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store offset=12
  local.get $24
  local.get $registers
  local.set $24
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.store offset=48
  local.get $24
  call $assembly/spi/StandardProgram#constructor
  local.set $24
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $24
  return
 )
 (func $assembly/gas/GasCounterU64#constructor (param $this i32) (param $gas i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 46
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $gas
  call $assembly/gas/GasCounterU64#set:gas
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/interpreter/Interpreter#constructor (param $this i32) (param $program i32) (param $registers i32) (param $memory i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 33
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:program
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:registers
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:memory
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:gas
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:pc
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:status
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:exitCode
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:nextPc
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:useSbrkGas
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $program
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/interpreter/Interpreter#set:program
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/interpreter/Interpreter#set:registers
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/interpreter/Interpreter#set:memory
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i64.const 0
  call $assembly/gas/gasCounter
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/interpreter/Interpreter#set:gas
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:pc
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  global.get $assembly/interpreter/Status.OK
  call $assembly/interpreter/Interpreter#set:status
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:exitCode
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:nextPc
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/interpreter/Interpreter#set:useSbrkGas
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 47
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/memory-page/Page>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/memory-page/Page>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/memory-page/Page>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/memory-page/Page>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8128
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $~lib/array/Array<assembly/memory-page/Page>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/memory-page/Page>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/memory-page/Page>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/memory-page/Page>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/memory-page/Page>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 480
    i32.const 8128
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/memory-page/Page>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/memory-page/Page>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $newLength
  call $~lib/array/Array<assembly/memory-page/Page>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#values" (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $values i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entries"
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesOffset"
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<assembly/memory-page/Page>#constructor
  local.tee $values
  i32.store offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.6" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.6"
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $values
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:value"
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $8
     call $~lib/array/Array<assembly/memory-page/Page>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $length
  call $~lib/array/Array<assembly/memory-page/Page>#set:length
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<assembly/memory-page/Page>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/memory-page/Page>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/memory-page/Page>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 14704
   i32.const 8128
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/memory-page/RawPage>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/memory-page/Arena#release (param $this i32) (param $page i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/memory-page/Arena#get:free
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $page
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<assembly/memory-page/RawPage>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#clear" (param $this i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:buckets"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:bucketsMask"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 0
  i32.const 4
  block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.7" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.7"
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entries"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCapacity"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 0
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesOffset"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 0
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#set:entriesCount"
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/memory/Memory#free (param $this i32)
  (local $pages i32)
  (local $i i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/memory/Memory#get:pages
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#values"
  local.tee $pages
  i32.store offset=8
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $pages
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<assembly/memory-page/Page>#get:length
   i32.lt_s
   if
    local.get $this
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $3
    call $assembly/memory/Memory#get:arena
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    local.get $pages
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=16
    local.get $3
    local.get $i
    call $~lib/array/Array<assembly/memory-page/Page>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $3
    call $assembly/memory-page/Page#get:raw
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    call $assembly/memory-page/Arena#release
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $assembly/memory/Memory#get:pages
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#clear"
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-debugger/resetJAM (param $program i32) (param $pc f64) (param $initialGas i64) (param $args i32) (param $hasMetadata i32)
  (local $code i32)
  (local $p i32)
  (local $int i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $hasMetadata
  if (result i32)
   local.get $program
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $assembly/program/liftBytes
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $assembly/program/extractCodeAndMetadata
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $assembly/program/CodeAndMetadata#get:code
  else
   local.get $program
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $assembly/program/liftBytes
  end
  local.tee $code
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $code
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $args
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $assembly/program/liftBytes
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $assembly/spi/decodeSpi
  local.tee $p
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $p
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=20
  local.get $9
  call $assembly/spi/StandardProgram#get:program
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $p
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=20
  local.get $9
  call $assembly/spi/StandardProgram#get:registers
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  local.get $p
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=20
  local.get $9
  call $assembly/spi/StandardProgram#get:memory
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $assembly/interpreter/Interpreter#constructor
  local.tee $int
  i32.store offset=24
  local.get $int
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $pc
  i32.trunc_sat_f64_u
  call $assembly/interpreter/Interpreter#set:nextPc
  local.get $int
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $assembly/interpreter/Interpreter#get:gas
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $initialGas
  call $assembly/gas/GasCounter#set@override
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/api-debugger/interpreter
   local.tee $8
   i32.store offset=28
   local.get $8
   if (result i32)
    local.get $8
   else
    i32.const 9488
    i32.const 18336
    i32.const 22
    i32.const 19
    call $~lib/builtins/abort
    unreachable
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $assembly/interpreter/Interpreter#get:memory
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $assembly/memory/Memory#free
  end
  local.get $int
  global.set $assembly/api-debugger/interpreter
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-debugger/resetJAM@varargs (param $program i32) (param $pc f64) (param $initialGas i64) (param $args i32) (param $hasMetadata i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 4
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $hasMetadata
  end
  local.get $program
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $pc
  local.get $initialGas
  local.get $args
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $hasMetadata
  call $assembly/api-debugger/resetJAM
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-debugger/fillRegisters (param $registers i32) (param $flat i32)
  (local $len i32)
  (local $3 i32)
  (local $4 i32)
  (local $i i32)
  (local $num i64)
  (local $j i32)
  (local $index i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $registers
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $~lib/staticarray/StaticArray<u64>#get:length
  global.get $assembly/registers/REG_SIZE_BYTES
  i32.mul
  local.set $len
  local.get $len
  local.get $flat
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $~lib/array/Array<u8>#get:length
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $flat
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $~lib/array/Array<u8>#get:length
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $len
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $4
   i32.store offset=8
   i32.const 18560
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   i32.const 1
   local.get $3
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   local.get $9
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 18560
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   i32.const 3
   local.get $4
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   local.get $9
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   i32.const 18560
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   i32.const 14480
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   local.get $9
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   i32.const 18336
   i32.const 192
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $registers
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $~lib/staticarray/StaticArray<u64>#get:length
   i32.lt_s
   if
    i64.const 0
    local.set $num
    i32.const 0
    local.set $j
    loop $for-loop|1
     local.get $j
     global.get $assembly/registers/REG_SIZE_BYTES
     i32.const 255
     i32.and
     i32.lt_u
     if
      local.get $i
      global.get $assembly/registers/REG_SIZE_BYTES
      i32.mul
      local.get $j
      i32.add
      local.set $index
      local.get $num
      local.get $flat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store
      local.get $9
      local.get $index
      call $~lib/array/Array<u8>#__get
      i64.extend_i32_u
      local.get $j
      i32.const 8
      i32.mul
      i32.const 255
      i32.and
      i64.extend_i32_u
      i64.shl
      i64.or
      local.set $num
      local.get $j
      i32.const 1
      i32.add
      local.set $j
      br $for-loop|1
     end
    end
    local.get $registers
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store
    local.get $9
    local.get $i
    local.get $num
    call $~lib/staticarray/StaticArray<u64>#__set
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/interpreter/Interpreter#constructor@varargs (param $this i32) (param $program i32) (param $registers i32) (param $memory i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $assembly/memory/MemoryBuilder#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 0
   call $assembly/memory/MemoryBuilder#build
   local.tee $memory
   i32.store offset=4
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $program
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $4
  call $assembly/interpreter/Interpreter#constructor
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/api-debugger/resetGeneric (param $program i32) (param $flatRegisters i32) (param $initialGas i64) (param $hasMetadata i32)
  (local $code i32)
  (local $p i32)
  (local $registers i32)
  (local $int i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $hasMetadata
  if (result i32)
   local.get $program
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $assembly/program/liftBytes
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $assembly/program/extractCodeAndMetadata
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $assembly/program/CodeAndMetadata#get:code
  else
   local.get $program
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $assembly/program/liftBytes
  end
  local.tee $code
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $code
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  call $assembly/program/deblob
  local.tee $p
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $assembly/registers/NO_OF_REGISTERS
  call $~lib/staticarray/StaticArray<u64>#constructor
  local.tee $registers
  i32.store offset=20
  local.get $registers
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $flatRegisters
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $assembly/api-debugger/fillRegisters
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $p
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $registers
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $assembly/interpreter/Interpreter#constructor@varargs
  local.tee $int
  i32.store offset=24
  local.get $int
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $assembly/interpreter/Interpreter#get:gas
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $initialGas
  call $assembly/gas/GasCounter#set@override
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/api-debugger/interpreter
   local.tee $8
   i32.store offset=28
   local.get $8
   if (result i32)
    local.get $8
   else
    i32.const 9488
    i32.const 18336
    i32.const 38
    i32.const 19
    call $~lib/builtins/abort
    unreachable
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $assembly/interpreter/Interpreter#get:memory
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   call $assembly/memory/Memory#free
  end
  local.get $int
  global.set $assembly/api-debugger/interpreter
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-debugger/resetGeneric@varargs (param $program i32) (param $flatRegisters i32) (param $initialGas i64) (param $hasMetadata i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 3
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $hasMetadata
  end
  local.get $program
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $flatRegisters
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $initialGas
  local.get $hasMetadata
  call $assembly/api-debugger/resetGeneric
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-internal/InitialPage#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 48
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/api-internal/InitialPage#set:address
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/api-internal/InitialPage#set:length
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  global.get $assembly/memory-page/Access.None
  call $assembly/api-internal/InitialPage#set:access
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/api-internal/InitialPage>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/api-debugger/readPages (param $pageMap i32) (result i32)
  (local $1 i32)
  (local $pages i32)
  (local $codec i32)
  (local $p i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 49
  i32.const 18608
  call $~lib/rt/__newArray
  local.tee $pages
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $pageMap
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  call $assembly/codec/Decoder#constructor
  local.tee $codec
  i32.store offset=8
  loop $while-continue|0
   local.get $codec
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   call $assembly/codec/Decoder#isExhausted
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $assembly/api-internal/InitialPage#constructor
    local.tee $p
    i32.store offset=12
    local.get $p
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    local.get $codec
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=16
    local.get $5
    call $assembly/codec/Decoder#u32
    call $assembly/api-internal/InitialPage#set:address
    local.get $p
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    local.get $codec
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=16
    local.get $5
    call $assembly/codec/Decoder#u32
    call $assembly/api-internal/InitialPage#set:length
    local.get $p
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    local.get $codec
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=16
    local.get $5
    call $assembly/codec/Decoder#u8
    i32.const 0
    i32.gt_u
    if (result i32)
     global.get $assembly/memory-page/Access.Write
    else
     global.get $assembly/memory-page/Access.Read
    end
    call $assembly/api-internal/InitialPage#set:access
    local.get $pages
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    local.get $p
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=16
    local.get $5
    call $~lib/array/Array<assembly/api-internal/InitialPage>#push
    drop
    br $while-continue|0
   end
  end
  local.get $pages
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/api-internal/InitialChunk#constructor (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 50
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  call $assembly/api-internal/InitialChunk#set:address
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.const 0
  i32.const 27
  i32.const 18672
  call $~lib/rt/__newArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/api-internal/InitialChunk#set:data
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:length_
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:dataStart
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $len
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#set:length_
  local.get $len
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/api-debugger/readChunks (param $chunks i32) (result i32)
  (local $1 i32)
  (local $res i32)
  (local $codec i32)
  (local $c i32)
  (local $len i32)
  (local $data i32)
  (local $i i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 51
  i32.const 18640
  call $~lib/rt/__newArray
  local.tee $res
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $chunks
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  i32.const 0
  call $assembly/codec/Decoder#constructor
  local.tee $codec
  i32.store offset=8
  loop $while-continue|0
   local.get $codec
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $assembly/codec/Decoder#isExhausted
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    call $assembly/api-internal/InitialChunk#constructor
    local.tee $c
    i32.store offset=12
    local.get $c
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $codec
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=16
    local.get $8
    call $assembly/codec/Decoder#u32
    call $assembly/api-internal/InitialChunk#set:address
    local.get $codec
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $assembly/codec/Decoder#u32
    local.set $len
    global.get $~lib/memory/__stack_pointer
    local.get $codec
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $len
    call $assembly/codec/Decoder#bytes
    local.tee $data
    i32.store offset=20
    i32.const 0
    local.set $i
    loop $for-loop|1
     local.get $i
     local.get $len
     i32.lt_u
     if
      local.get $c
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=16
      local.get $8
      call $assembly/api-internal/InitialChunk#get:data
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      local.get $8
      local.get $data
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=16
      local.get $8
      local.get $i
      call $~lib/typedarray/Uint8Array#__get
      call $~lib/array/Array<u8>#push
      drop
      local.get $i
      i32.const 1
      i32.add
      local.set $i
      br $for-loop|1
     end
    end
    local.get $res
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $c
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=16
    local.get $8
    call $~lib/array/Array<assembly/api-internal/InitialChunk>#push
    drop
    br $while-continue|0
   end
  end
  local.get $res
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 14704
   i32.const 8128
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 14704
   i32.const 8128
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/api-internal/buildMemory (param $builder i32) (param $pages i32) (param $chunks i32) (result i32)
  (local $sbrkIndex i32)
  (local $i i32)
  (local $initPage i32)
  (local $i|6 i32)
  (local $initChunk i32)
  (local $data i32)
  (local $i|9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $assembly/memory-page/RESERVED_MEMORY
  local.set $sbrkIndex
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $pages
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store
   local.get $10
   call $~lib/array/Array<assembly/api-internal/InitialPage>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $pages
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store
    local.get $10
    local.get $i
    call $~lib/array/Array<assembly/api-internal/InitialPage>#__get
    local.tee $initPage
    i32.store offset=4
    local.get $builder
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store
    local.get $10
    local.get $initPage
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=12
    local.get $10
    call $assembly/api-internal/InitialPage#get:access
    local.get $initPage
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=12
    local.get $10
    call $assembly/api-internal/InitialPage#get:address
    i32.const 0
    local.get $initPage
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=12
    local.get $10
    call $assembly/api-internal/InitialPage#get:length
    call $~lib/typedarray/Uint8Array#constructor
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=8
    local.get $10
    call $assembly/memory/MemoryBuilder#setData
    drop
    local.get $initPage
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store
    local.get $10
    call $assembly/api-internal/InitialPage#get:access
    global.get $assembly/memory-page/Access.Write
    i32.eq
    if
     local.get $initPage
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     local.get $10
     call $assembly/api-internal/InitialPage#get:address
     local.get $sbrkIndex
     i32.lt_u
     if (result i32)
      local.get $sbrkIndex
     else
      local.get $initPage
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store
      local.get $10
      call $assembly/api-internal/InitialPage#get:address
     end
     local.set $sbrkIndex
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $i|6
  loop $for-loop|1
   local.get $i|6
   local.get $chunks
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store
   local.get $10
   call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:length
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $chunks
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store
    local.get $10
    local.get $i|6
    call $~lib/array/Array<assembly/api-internal/InitialChunk>#__get
    local.tee $initChunk
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    local.get $initChunk
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=8
    local.get $10
    call $assembly/api-internal/InitialChunk#get:data
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store
    local.get $10
    call $~lib/array/Array<u8>#get:length
    call $~lib/typedarray/Uint8Array#constructor
    local.tee $data
    i32.store offset=20
    i32.const 0
    local.set $i|9
    loop $for-loop|2
     local.get $i|9
     local.get $data
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     local.get $10
     call $~lib/typedarray/Uint8Array#get:length
     i32.lt_s
     if
      local.get $data
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store
      local.get $10
      local.get $i|9
      local.get $initChunk
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store offset=12
      local.get $10
      call $assembly/api-internal/InitialChunk#get:data
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store offset=8
      local.get $10
      local.get $i|9
      call $~lib/array/Array<u8>#__get
      call $~lib/typedarray/Uint8Array#__set
      local.get $i|9
      i32.const 1
      i32.add
      local.set $i|9
      br $for-loop|2
     end
    end
    local.get $builder
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store
    local.get $10
    global.get $assembly/memory-page/Access.None
    local.get $initChunk
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=12
    local.get $10
    call $assembly/api-internal/InitialChunk#get:address
    local.get $data
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store offset=8
    local.get $10
    call $assembly/memory/MemoryBuilder#setData
    drop
    local.get $i|6
    i32.const 1
    i32.add
    local.set $i|6
    br $for-loop|1
   end
  end
  local.get $builder
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store
  local.get $10
  local.get $sbrkIndex
  call $assembly/memory/MemoryBuilder#build
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
  return
 )
 (func $assembly/api-debugger/resetGenericWithMemory (param $program i32) (param $flatRegisters i32) (param $pageMap i32) (param $chunks i32) (param $initialGas i64) (param $hasMetadata i32)
  (local $code i32)
  (local $p i32)
  (local $registers i32)
  (local $builder i32)
  (local $memory i32)
  (local $int i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $hasMetadata
  if (result i32)
   local.get $program
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store offset=8
   local.get $12
   call $assembly/program/liftBytes
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store offset=4
   local.get $12
   call $assembly/program/extractCodeAndMetadata
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store
   local.get $12
   call $assembly/program/CodeAndMetadata#get:code
  else
   local.get $program
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store
   local.get $12
   call $assembly/program/liftBytes
  end
  local.tee $code
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $code
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  call $assembly/program/deblob
  local.tee $p
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $assembly/registers/NO_OF_REGISTERS
  call $~lib/staticarray/StaticArray<u64>#constructor
  local.tee $registers
  i32.store offset=20
  local.get $registers
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $flatRegisters
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=4
  local.get $12
  call $assembly/api-debugger/fillRegisters
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/memory/MemoryBuilder#constructor
  local.tee $builder
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $builder
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $pageMap
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=28
  local.get $12
  call $assembly/api-debugger/readPages
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=4
  local.get $12
  local.get $chunks
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=28
  local.get $12
  call $assembly/api-debugger/readChunks
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=8
  local.get $12
  call $assembly/api-internal/buildMemory
  local.tee $memory
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $p
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $registers
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=4
  local.get $12
  local.get $memory
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=8
  local.get $12
  call $assembly/interpreter/Interpreter#constructor
  local.tee $int
  i32.store offset=36
  local.get $int
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=4
  local.get $12
  call $assembly/interpreter/Interpreter#get:gas
  local.set $12
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store
  local.get $12
  local.get $initialGas
  call $assembly/gas/GasCounter#set@override
  local.get $int
  global.set $assembly/api-debugger/interpreter
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-debugger/resetGenericWithMemory@varargs (param $program i32) (param $flatRegisters i32) (param $pageMap i32) (param $chunks i32) (param $initialGas i64) (param $hasMetadata i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 5
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 0
   local.set $hasMetadata
  end
  local.get $program
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $flatRegisters
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $pageMap
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  local.get $chunks
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  local.get $initialGas
  local.get $hasMetadata
  call $assembly/api-debugger/resetGenericWithMemory
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $value
  i32.store offset=4
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 14704
   i32.const 8128
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/interpreter/DjumpResult#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 52
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  global.get $assembly/interpreter/DjumpStatus.OK
  call $assembly/interpreter/DjumpResult#set:status
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/interpreter/DjumpResult#set:newPc
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/interpreter/dJump (param $jumpTable i32) (param $address i32) (result i32)
  (local $r i32)
  (local $index i32)
  (local $newPc i64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/interpreter/DjumpResult#constructor
  local.tee $r
  i32.store
  local.get $address
  global.get $assembly/interpreter/EXIT
  i32.eq
  if
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   global.get $assembly/interpreter/DjumpStatus.HALT
   call $assembly/interpreter/DjumpResult#set:status
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $address
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $address
   global.get $assembly/interpreter/JUMP_ALIGMENT_FACTOR
   i32.rem_u
   i32.const 0
   i32.ne
  end
  if
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   global.get $assembly/interpreter/DjumpStatus.PANIC
   call $assembly/interpreter/DjumpResult#set:status
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $address
  global.get $assembly/interpreter/JUMP_ALIGMENT_FACTOR
  i32.div_u
  i32.const 1
  i32.sub
  local.set $index
  local.get $index
  local.get $jumpTable
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/program/JumpTable#get:jumps
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  call $~lib/staticarray/StaticArray<u64>#get:length
  i32.ge_u
  if
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   global.get $assembly/interpreter/DjumpStatus.PANIC
   call $assembly/interpreter/DjumpResult#set:status
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $jumpTable
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  local.get $5
  call $assembly/program/JumpTable#get:jumps
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $index
  call $~lib/staticarray/StaticArray<u64>#__get
  local.set $newPc
  local.get $newPc
  global.get $assembly/interpreter/MAX_U32
  i64.ge_u
  if
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   global.get $assembly/interpreter/DjumpStatus.PANIC
   call $assembly/interpreter/DjumpResult#set:status
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  local.get $r
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $newPc
  i32.wrap_i64
  call $assembly/interpreter/DjumpResult#set:newPc
  local.get $r
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/interpreter/BranchResult#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 53
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/interpreter/BranchResult#set:isOkay
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/interpreter/BranchResult#set:newPc
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/program/BasicBlocks#isStart (param $this i32) (param $newPc i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $newPc
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/program/BasicBlocks#get:isStartOrEnd
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/staticarray/StaticArray<i32>#get:length
  i32.lt_u
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $assembly/program/BasicBlocks#get:isStartOrEnd
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   local.get $newPc
   call $~lib/staticarray/StaticArray<i32>#__get
   global.get $assembly/program/BasicBlock.START
   i32.and
   i32.const 0
   i32.gt_s
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/interpreter/branch (param $basicBlocks i32) (param $pc i32) (param $offset i32) (result i32)
  (local $r i32)
  (local $newPc i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/interpreter/BranchResult#constructor
  local.tee $r
  i32.store
  local.get $pc
  local.get $offset
  i32.add
  local.set $newPc
  local.get $basicBlocks
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $newPc
  call $assembly/program/BasicBlocks#isStart
  if
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 1
   call $assembly/interpreter/BranchResult#set:isOkay
   local.get $r
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   local.get $newPc
   call $assembly/interpreter/BranchResult#set:newPc
  end
  local.get $r
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/interpreter/Interpreter#nextStep (param $this i32) (result i32)
  (local $pc i32)
  (local $instruction i32)
  (local $iData i32)
  (local $skipBytes i32)
  (local $args i32)
  (local $alloc i64)
  (local $gas i64)
  (local $exe i32)
  (local $outcome i32)
  (local $10 i32)
  (local $res i32)
  (local $branchResult i32)
  (local $branchResult|13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $assembly/interpreter/Interpreter#get:status
  global.get $assembly/interpreter/Status.HOST
  i32.eq
  if
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   global.get $assembly/interpreter/Status.OK
   call $assembly/interpreter/Interpreter#set:status
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=4
   local.get $14
   call $assembly/interpreter/Interpreter#get:nextPc
   call $assembly/interpreter/Interpreter#set:pc
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   i32.const -1
   call $assembly/interpreter/Interpreter#set:nextPc
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $assembly/interpreter/Interpreter#get:status
  global.get $assembly/interpreter/Status.OK
  i32.ne
  if
   i32.const 0
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $assembly/interpreter/Interpreter#get:nextPc
  i32.const -1
  i32.ne
  if
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=4
   local.get $14
   call $assembly/interpreter/Interpreter#get:nextPc
   call $assembly/interpreter/Interpreter#set:pc
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   i32.const -1
   call $assembly/interpreter/Interpreter#set:nextPc
   i32.const 1
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  i32.const 0
  call $assembly/interpreter/Interpreter#set:exitCode
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $assembly/interpreter/Interpreter#get:pc
  local.set $pc
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $assembly/interpreter/Interpreter#get:program
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=4
  local.get $14
  call $assembly/program/Program#get:mask
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  local.get $pc
  call $assembly/program/Mask#isInstruction
  i32.eqz
  if
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=4
   local.get $14
   call $assembly/interpreter/Interpreter#get:gas
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   global.get $assembly/instructions/MISSING_INSTRUCTION
   call $assembly/instructions/Instruction#get:gas
   call $assembly/gas/GasCounter#sub@override
   if
    local.get $this
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    global.get $assembly/interpreter/Status.OOG
    call $assembly/interpreter/Interpreter#set:status
   else
    local.get $this
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    global.get $assembly/interpreter/Status.PANIC
    call $assembly/interpreter/Interpreter#set:status
   end
   i32.const 0
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $assembly/interpreter/Interpreter#get:program
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=4
  local.get $14
  call $assembly/program/Program#get:code
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  local.get $pc
  call $~lib/typedarray/Uint8Array#__get
  local.set $instruction
  local.get $instruction
  global.get $assembly/instructions/INSTRUCTIONS
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  call $~lib/array/Array<assembly/instructions/Instruction>#get:length
  i32.lt_s
  if (result i32)
   global.get $assembly/instructions/INSTRUCTIONS
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   local.get $instruction
   call $~lib/array/Array<assembly/instructions/Instruction>#__get
  else
   global.get $assembly/instructions/MISSING_INSTRUCTION
  end
  local.set $iData
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=4
  local.get $14
  call $assembly/interpreter/Interpreter#get:gas
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  local.get $iData
  call $assembly/instructions/Instruction#get:gas
  call $assembly/gas/GasCounter#sub@override
  if
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   global.get $assembly/interpreter/Status.OOG
   call $assembly/interpreter/Interpreter#set:status
   i32.const 0
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $iData
  global.get $assembly/instructions/MISSING_INSTRUCTION
  i32.eq
  if
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   global.get $assembly/interpreter/Status.PANIC
   call $assembly/interpreter/Interpreter#set:status
   i32.const 0
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $assembly/interpreter/Interpreter#get:program
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=4
  local.get $14
  call $assembly/program/Program#get:mask
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  local.get $pc
  call $assembly/program/Mask#skipBytesToNextInstruction
  local.set $skipBytes
  global.get $~lib/memory/__stack_pointer
  local.get $iData
  call $assembly/instructions/Instruction#get:kind
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $assembly/interpreter/Interpreter#get:program
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $assembly/program/Program#get:code
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=4
  local.get $14
  local.get $pc
  i32.const 1
  i32.add
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#subarray@varargs
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  local.get $skipBytes
  call $assembly/program/decodeArguments
  local.tee $args
  i32.store offset=16
  local.get $iData
  global.get $assembly/instructions/SBRK
  i32.eq
  if (result i32)
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   call $assembly/interpreter/Interpreter#get:useSbrkGas
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=4
   local.get $14
   call $assembly/interpreter/Interpreter#get:registers
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   local.get $args
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=4
   local.get $14
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   i32.wrap_i64
   i64.extend_i32_u
   local.set $alloc
   local.get $alloc
   global.get $assembly/memory-page/PAGE_SIZE
   i64.extend_i32_u
   i64.add
   i64.const 1
   i64.sub
   global.get $assembly/memory-page/PAGE_SIZE_SHIFT
   i64.extend_i32_u
   i64.shr_u
   i64.const 16
   i64.mul
   local.set $gas
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=4
   local.get $14
   call $assembly/interpreter/Interpreter#get:gas
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   local.get $gas
   call $assembly/gas/GasCounter#sub@override
   if
    local.get $this
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    global.get $assembly/interpreter/Status.OOG
    call $assembly/interpreter/Interpreter#set:status
    i32.const 0
    local.set $14
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $14
    return
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/instructions-exe/RUN
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  local.get $instruction
  call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#__get
  local.tee $exe
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $args
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $assembly/interpreter/Interpreter#get:registers
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=4
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $assembly/interpreter/Interpreter#get:memory
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  i32.const 3
  global.set $~argumentsLength
  local.get $exe
  i32.load
  call_indirect (type $2)
  local.tee $outcome
  i32.store offset=24
  block $break|0
   block $case3|0
    block $case2|0
     block $case1|0
      block $case0|0
       local.get $outcome
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store
       local.get $14
       call $assembly/instructions/outcome/OutcomeData#get:outcome
       local.set $10
       local.get $10
       global.get $assembly/instructions/outcome/Outcome.DynamicJump
       i32.eq
       br_if $case0|0
       local.get $10
       global.get $assembly/instructions/outcome/Outcome.StaticJump
       i32.eq
       br_if $case1|0
       local.get $10
       global.get $assembly/instructions/outcome/Outcome.Result
       i32.eq
       br_if $case2|0
       local.get $10
       global.get $assembly/instructions/outcome/Outcome.Ok
       i32.eq
       br_if $case3|0
       br $break|0
      end
      global.get $~lib/memory/__stack_pointer
      local.get $this
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=8
      local.get $14
      call $assembly/interpreter/Interpreter#get:program
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=4
      local.get $14
      call $assembly/program/Program#get:jumpTable
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      local.get $outcome
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=4
      local.get $14
      call $assembly/instructions/outcome/OutcomeData#get:dJump
      call $assembly/interpreter/dJump
      local.tee $res
      i32.store offset=28
      local.get $res
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      call $assembly/interpreter/DjumpResult#get:status
      global.get $assembly/interpreter/DjumpStatus.HALT
      i32.eq
      if
       local.get $this
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store
       local.get $14
       global.get $assembly/interpreter/Status.HALT
       call $assembly/interpreter/Interpreter#set:status
       i32.const 1
       local.set $14
       global.get $~lib/memory/__stack_pointer
       i32.const 40
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $14
       return
      end
      local.get $res
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      call $assembly/interpreter/DjumpResult#get:status
      global.get $assembly/interpreter/DjumpStatus.PANIC
      i32.eq
      if
       local.get $this
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store
       local.get $14
       global.get $assembly/interpreter/Status.PANIC
       call $assembly/interpreter/Interpreter#set:status
       i32.const 0
       local.set $14
       global.get $~lib/memory/__stack_pointer
       i32.const 40
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $14
       return
      end
      global.get $~lib/memory/__stack_pointer
      local.get $this
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=8
      local.get $14
      call $assembly/interpreter/Interpreter#get:program
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=4
      local.get $14
      call $assembly/program/Program#get:basicBlocks
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      local.get $res
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=4
      local.get $14
      call $assembly/interpreter/DjumpResult#get:newPc
      i32.const 0
      call $assembly/interpreter/branch
      local.tee $branchResult
      i32.store offset=32
      local.get $branchResult
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      call $assembly/interpreter/BranchResult#get:isOkay
      i32.eqz
      if
       local.get $this
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store
       local.get $14
       global.get $assembly/interpreter/Status.PANIC
       call $assembly/interpreter/Interpreter#set:status
       i32.const 0
       local.set $14
       global.get $~lib/memory/__stack_pointer
       i32.const 40
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $14
       return
      end
      local.get $this
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      local.get $branchResult
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=4
      local.get $14
      call $assembly/interpreter/BranchResult#get:newPc
      call $assembly/interpreter/Interpreter#set:pc
      i32.const 1
      local.set $14
      global.get $~lib/memory/__stack_pointer
      i32.const 40
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $14
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=8
     local.get $14
     call $assembly/interpreter/Interpreter#get:program
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/program/Program#get:basicBlocks
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     local.get $pc
     local.get $outcome
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/instructions/outcome/OutcomeData#get:staticJump
     call $assembly/interpreter/branch
     local.tee $branchResult|13
     i32.store offset=36
     local.get $branchResult|13
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     call $assembly/interpreter/BranchResult#get:isOkay
     i32.eqz
     if
      local.get $this
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      global.get $assembly/interpreter/Status.PANIC
      call $assembly/interpreter/Interpreter#set:status
      i32.const 0
      local.set $14
      global.get $~lib/memory/__stack_pointer
      i32.const 40
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $14
      return
     end
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     local.get $branchResult|13
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/interpreter/BranchResult#get:newPc
     call $assembly/interpreter/Interpreter#set:pc
     i32.const 1
     local.set $14
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $14
     return
    end
    local.get $outcome
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/instructions/outcome/OutcomeData#get:result
    global.get $assembly/instructions/outcome/Result.HOST
    i32.eq
    if
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     global.get $assembly/interpreter/Status.HOST
     call $assembly/interpreter/Interpreter#set:status
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     local.get $outcome
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/instructions/outcome/OutcomeData#get:exitCode
     call $assembly/interpreter/Interpreter#set:exitCode
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/interpreter/Interpreter#get:pc
     i32.const 1
     i32.add
     local.get $skipBytes
     i32.add
     call $assembly/interpreter/Interpreter#set:nextPc
     i32.const 0
     local.set $14
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $14
     return
    end
    local.get $outcome
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/instructions/outcome/OutcomeData#get:result
    global.get $assembly/instructions/outcome/Result.FAULT
    i32.eq
    if
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/interpreter/Interpreter#get:gas
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     i64.const 1
     call $assembly/gas/GasCounter#sub@override
     drop
     local.get $outcome
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     call $assembly/instructions/outcome/OutcomeData#get:exitCode
     global.get $assembly/memory-page/RESERVED_MEMORY
     i32.lt_u
     if
      local.get $this
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      global.get $assembly/interpreter/Status.PANIC
      call $assembly/interpreter/Interpreter#set:status
     else
      local.get $this
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      global.get $assembly/interpreter/Status.FAULT
      call $assembly/interpreter/Interpreter#set:status
      local.get $this
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store
      local.get $14
      local.get $outcome
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $14
      i32.store offset=4
      local.get $14
      call $assembly/instructions/outcome/OutcomeData#get:exitCode
      call $assembly/interpreter/Interpreter#set:exitCode
     end
     i32.const 0
     local.set $14
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $14
     return
    end
    local.get $outcome
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/instructions/outcome/OutcomeData#get:result
    global.get $assembly/instructions/outcome/Result.FAULT_ACCESS
    i32.eq
    if
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/interpreter/Interpreter#get:gas
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     i64.const 1
     call $assembly/gas/GasCounter#sub@override
     drop
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     global.get $assembly/interpreter/Status.PANIC
     call $assembly/interpreter/Interpreter#set:status
     i32.const 0
     local.set $14
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $14
     return
    end
    local.get $outcome
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $14
    i32.store
    local.get $14
    call $assembly/instructions/outcome/OutcomeData#get:result
    global.get $assembly/instructions/outcome/Result.PANIC
    i32.eq
    if
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     global.get $assembly/interpreter/Status.PANIC
     call $assembly/interpreter/Interpreter#set:status
     local.get $this
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store
     local.get $14
     local.get $outcome
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=4
     local.get $14
     call $assembly/instructions/outcome/OutcomeData#get:exitCode
     call $assembly/interpreter/Interpreter#set:exitCode
     i32.const 0
     local.set $14
     global.get $~lib/memory/__stack_pointer
     i32.const 40
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $14
     return
    end
    i32.const 18704
    i32.const 18752
    i32.const 173
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store
   local.get $14
   local.get $this
   local.set $14
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=4
   local.get $14
   call $assembly/interpreter/Interpreter#get:pc
   i32.const 1
   local.get $skipBytes
   i32.add
   i32.add
   call $assembly/interpreter/Interpreter#set:pc
   i32.const 1
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  i32.const 0
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $assembly/api-debugger/nextStep (result i32)
  (local $0 i32)
  (local $int i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/api-debugger/interpreter
   local.tee $0
   i32.store
   local.get $0
   if (result i32)
    local.get $0
   else
    i32.const 9488
    i32.const 18336
    i32.const 69
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $int
   i32.store offset=4
   local.get $int
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   call $assembly/interpreter/Interpreter#nextStep
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/api-debugger/nSteps (param $steps i32) (result i32)
  (local $1 i32)
  (local $int i32)
  (local $isOk i32)
  (local $i i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/api-debugger/interpreter
   local.tee $1
   i32.store
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 9488
    i32.const 18336
    i32.const 77
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $int
   i32.store offset=4
   i32.const 1
   local.set $isOk
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $steps
    i32.lt_u
    if
     local.get $int
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=8
     local.get $5
     call $assembly/interpreter/Interpreter#nextStep
     local.set $isOk
     local.get $isOk
     i32.eqz
     if
      i32.const 0
      local.set $5
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $5
      return
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $isOk
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $assembly/api-debugger/getProgramCounter (result i32)
  (local $0 i32)
  (local $int i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $0
  i32.store
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 9488
   i32.const 18336
   i32.const 94
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=4
  local.get $int
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/interpreter/Interpreter#get:pc
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/api-debugger/setNextProgramCounter (param $pc i32)
  (local $1 i32)
  (local $int i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $1
  i32.store
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 9488
   i32.const 18336
   i32.const 102
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=4
  local.get $int
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $pc
  call $assembly/interpreter/Interpreter#set:nextPc
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-debugger/getStatus (result i32)
  (local $0 i32)
  (local $int i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   global.get $assembly/interpreter/Status.PANIC
   i32.const 255
   i32.and
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $0
  i32.store
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 9488
   i32.const 18336
   i32.const 110
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=4
  local.get $int
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/interpreter/Interpreter#get:status
  i32.const 255
  i32.and
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/api-debugger/getExitArg (result i32)
  (local $0 i32)
  (local $int i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $0
  i32.store
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 9488
   i32.const 18336
   i32.const 118
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=4
  local.get $int
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/interpreter/Interpreter#get:exitCode
  local.tee $2
  if (result i32)
   local.get $2
  else
   i32.const 0
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/api-debugger/getGasLeft (result i64)
  (local $0 i32)
  (local $int i32)
  (local $2 i32)
  (local $3 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   i64.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $0
  i32.store
  local.get $0
  if (result i32)
   local.get $0
  else
   i32.const 9488
   i32.const 18336
   i32.const 126
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=4
  local.get $int
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $assembly/interpreter/Interpreter#get:gas
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/gas/GasCounter#get@override
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/api-debugger/setGasLeft (param $gas i64)
  (local $1 i32)
  (local $int i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/api-debugger/interpreter
   local.tee $1
   i32.store
   local.get $1
   if (result i32)
    local.get $1
   else
    i32.const 9488
    i32.const 18336
    i32.const 132
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.tee $int
   i32.store offset=4
   local.get $int
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   local.get $3
   call $assembly/interpreter/Interpreter#get:gas
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   local.get $gas
   call $assembly/gas/GasCounter#set@override
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-debugger/getRegisters (result i32)
  (local $flat i32)
  (local $1 i32)
  (local $int i32)
  (local $i i32)
  (local $val i64)
  (local $j i32)
  (local $index i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  global.get $assembly/registers/NO_OF_REGISTERS
  global.get $assembly/registers/REG_SIZE_BYTES
  i32.mul
  call $~lib/typedarray/Uint8Array#constructor
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  i32.const 0
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#fill@varargs
  local.tee $flat
  i32.store offset=4
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   local.get $flat
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $1
  i32.store offset=8
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 9488
   i32.const 18336
   i32.const 143
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=12
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $int
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=16
   local.get $7
   call $assembly/interpreter/Interpreter#get:registers
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   call $~lib/staticarray/StaticArray<u64>#get:length
   i32.lt_s
   if
    local.get $int
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=16
    local.get $7
    call $assembly/interpreter/Interpreter#get:registers
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    local.get $i
    call $~lib/staticarray/StaticArray<u64>#__get
    local.set $val
    i32.const 0
    local.set $j
    loop $for-loop|1
     local.get $j
     global.get $assembly/registers/REG_SIZE_BYTES
     i32.lt_s
     if
      local.get $i
      global.get $assembly/registers/REG_SIZE_BYTES
      i32.mul
      local.get $j
      i32.add
      local.set $index
      local.get $flat
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $7
      local.get $index
      local.get $val
      i64.const 255
      i64.and
      i32.wrap_i64
      i32.const 255
      i32.and
      call $~lib/typedarray/Uint8Array#__set
      local.get $val
      i64.const 8
      i64.shr_u
      local.set $val
      local.get $j
      i32.const 1
      i32.add
      local.set $j
      br $for-loop|1
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $flat
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $assembly/api-debugger/setRegisters (param $flatRegisters i32)
  (local $1 i32)
  (local $int i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $1
  i32.store
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 9488
   i32.const 18336
   i32.const 160
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=4
  local.get $int
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  local.get $3
  call $assembly/interpreter/Interpreter#get:registers
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $flatRegisters
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $3
  call $assembly/api-debugger/fillRegisters
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/memory/Memory#pageDump (param $this i32) (param $index i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/memory/Memory#get:pages
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $index
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#has"
  i32.eqz
  if
   i32.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $assembly/memory/Memory#get:pages
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $index
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get"
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/memory-page/Page#get:raw
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/memory-page/RawPage#get:data
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/api-debugger/getPageDump (param $index i32) (result i32)
  (local $1 i32)
  (local $int i32)
  (local $page i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   i32.const 0
   global.get $assembly/memory-page/PAGE_SIZE
   call $~lib/typedarray/Uint8Array#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/typedarray/Uint8Array#fill@varargs
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $1
  i32.store offset=4
  local.get $1
  if (result i32)
   local.get $1
  else
   i32.const 9488
   i32.const 18336
   i32.const 168
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $int
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/interpreter/Interpreter#get:memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $index
  call $assembly/memory/Memory#pageDump
  local.tee $page
  i32.store offset=16
  local.get $page
  i32.const 0
  i32.eq
  if
   i32.const 0
   global.get $assembly/memory-page/PAGE_SIZE
   call $~lib/typedarray/Uint8Array#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   call $~lib/typedarray/Uint8Array#fill@varargs
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  local.get $page
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/api-debugger/setMemory (param $address i32) (param $data i32)
  (local $2 i32)
  (local $int i32)
  (local $end i32)
  (local $i i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $assembly/api-debugger/interpreter
  i32.const 0
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/api-debugger/interpreter
  local.tee $2
  i32.store
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 9488
   i32.const 18336
   i32.const 181
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.tee $int
  i32.store offset=4
  local.get $address
  local.get $data
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $~lib/typedarray/Uint8Array#get:length
  i32.add
  local.set $end
  local.get $address
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $end
   i32.lt_u
   if
    local.get $int
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    local.get $6
    call $assembly/interpreter/Interpreter#get:memory
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=8
    local.get $6
    local.get $i
    local.get $data
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    local.get $6
    local.get $i
    local.get $address
    i32.sub
    call $~lib/typedarray/Uint8Array#__get
    call $assembly/memory/Memory#setU8
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u64>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u64>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<u64>#__get (param $this i32) (param $index i32) (result i64)
  (local $value i64)
  (local $3 i32)
  (local $4 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u64>#get:length_
  i32.ge_u
  if
   i32.const 480
   i32.const 8128
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u64>#get:dataStart
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load
  local.set $value
  i32.const 0
  drop
  local.get $value
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/api-utils/prepareProgram (param $kind i32) (param $hasMetadata i32) (param $program i32) (param $initialRegisters i32) (param $initialPageMap i32) (param $initialMemory i32) (param $args i32) (result i32)
  (local $code i32)
  (local $metadata i32)
  (local $data i32)
  (local $program|10 i32)
  (local $builder i32)
  (local $memory i32)
  (local $registers i32)
  (local $r i32)
  (local $exe i32)
  (local $exe|16 i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $program
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  call $assembly/program/liftBytes
  local.tee $code
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $metadata
  i32.store offset=8
  local.get $hasMetadata
  global.get $assembly/api-utils/HasMetadata.Yes
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $code
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   call $assembly/program/extractCodeAndMetadata
   local.tee $data
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $data
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   call $assembly/program/CodeAndMetadata#get:code
   local.tee $code
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $data
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   call $assembly/program/CodeAndMetadata#get:metadata
   local.tee $metadata
   i32.store offset=8
  end
  local.get $kind
  global.get $assembly/api-utils/InputKind.Generic
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $code
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   call $assembly/program/deblob
   local.tee $program|10
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $assembly/memory/MemoryBuilder#constructor
   local.tee $builder
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $builder
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   local.get $initialPageMap
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=24
   local.get $17
   local.get $initialMemory
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=28
   local.get $17
   call $assembly/api-internal/buildMemory
   local.tee $memory
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   global.get $assembly/registers/NO_OF_REGISTERS
   call $~lib/staticarray/StaticArray<u64>#constructor
   local.tee $registers
   i32.store offset=36
   i32.const 0
   local.set $r
   loop $for-loop|0
    local.get $r
    local.get $initialRegisters
    local.set $17
    global.get $~lib/memory/__stack_pointer
    local.get $17
    i32.store
    local.get $17
    call $~lib/array/Array<u64>#get:length
    i32.lt_s
    if
     local.get $registers
     local.set $17
     global.get $~lib/memory/__stack_pointer
     local.get $17
     i32.store
     local.get $17
     local.get $r
     local.get $initialRegisters
     local.set $17
     global.get $~lib/memory/__stack_pointer
     local.get $17
     i32.store offset=24
     local.get $17
     local.get $r
     call $~lib/array/Array<u64>#__get
     call $~lib/staticarray/StaticArray<u64>#__set
     local.get $r
     i32.const 1
     i32.add
     local.set $r
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.get $program|10
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   local.get $memory
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=24
   local.get $17
   local.get $registers
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=28
   local.get $17
   call $assembly/spi/StandardProgram#constructor
   local.tee $exe
   i32.store offset=40
   local.get $exe
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   local.get $metadata
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=24
   local.get $17
   call $assembly/spi/StandardProgram#set:metadata
   local.get $exe
   local.set $17
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $17
   return
  end
  local.get $kind
  global.get $assembly/api-utils/InputKind.SPI
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $code
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   local.get $args
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=28
   local.get $17
   call $assembly/program/liftBytes
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=24
   local.get $17
   call $assembly/spi/decodeSpi
   local.tee $exe|16
   i32.store offset=44
   local.get $exe|16
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store
   local.get $17
   local.get $metadata
   local.set $17
   global.get $~lib/memory/__stack_pointer
   local.get $17
   i32.store offset=24
   local.get $17
   call $assembly/spi/StandardProgram#set:metadata
   local.get $exe|16
   local.set $17
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $17
   return
  end
  i32.const 18960
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store
  local.get $17
  local.get $kind
  i32.const 10
  call $~lib/number/I32#toString
  local.set $17
  global.get $~lib/memory/__stack_pointer
  local.get $17
  i32.store offset=24
  local.get $17
  call $~lib/string/String#concat
  i32.const 19008
  i32.const 81
  i32.const 3
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#constructor" (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 57
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:buckets"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 4
  i32.const 1
  i32.sub
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:bucketsMask"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 4
  block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.0" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.0"
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entries"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 4
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesCapacity"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesOffset"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesCount"
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#find" (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $taggedNext i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:buckets"
  local.get $hashCode
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:bucketsMask"
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load
  local.set $entry
  loop $while-continue|0
   local.get $entry
   if
    local.get $entry
    call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:taggedNext"
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:key"
     local.get $key
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $entry
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
  return
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#rehash" (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $oldEntry i32)
  (local $newEntry i32)
  (local $oldEntryKey i32)
  (local $newBucketIndex i32)
  (local $newBucketPtrBase i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.1" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.1"
  end
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store offset=4
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entries"
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesOffset"
  block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.2" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.2"
  end
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $newEntry
     local.get $oldEntry
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:key"
     local.set $oldEntryKey
     local.get $newEntry
     local.get $oldEntryKey
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:key"
     local.get $newEntry
     local.get $oldEntry
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:value"
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=8
     local.get $14
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:value"
     local.get $oldEntryKey
     call $~lib/util/hash/HASH<u32>
     local.get $newBucketsMask
     i32.and
     local.set $newBucketIndex
     local.get $newBuckets
     local.get $newBucketIndex
     i32.const 4
     i32.mul
     i32.add
     local.set $newBucketPtrBase
     local.get $newEntry
     local.get $newBucketPtrBase
     i32.load
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:taggedNext"
     local.get $newBucketPtrBase
     local.get $newPtr
     i32.store
     local.get $newPtr
     block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.3" (result i32)
      i32.const 12
      br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.3"
     end
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.4" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.4"
    end
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newBuckets
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:buckets"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newBucketsMask
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:bucketsMask"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newEntries
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entries"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $newEntriesCapacity
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesCapacity"
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=8
  local.get $14
  local.get $this
  local.set $14
  global.get $~lib/memory/__stack_pointer
  local.get $14
  i32.store offset=12
  local.get $14
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesCount"
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesOffset"
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set" (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $entries i32)
  (local $6 i32)
  (local $bucketPtrBase i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $key
  call $~lib/util/hash/HASH<u32>
  local.set $hashCode
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $key
  local.get $hashCode
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#find"
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:value"
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
  else
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesOffset"
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesCapacity"
   i32.eq
   if
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesCount"
    local.get $this
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesCapacity"
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:bucketsMask"
    else
     local.get $this
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:bucketsMask"
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#rehash"
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entries"
   local.tee $entries
   i32.store offset=8
   local.get $entries
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesOffset"
   local.tee $6
   i32.const 1
   i32.add
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesOffset"
   local.get $6
   block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.5" (result i32)
    i32.const 12
    br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.5"
   end
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:key"
   i32.const 0
   drop
   local.get $entry
   local.get $value
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:value"
   i32.const 1
   drop
   local.get $this
   local.get $value
   i32.const 1
   call $~lib/rt/itcms/__link
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesCount"
   i32.const 1
   i32.add
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set:entriesCount"
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:buckets"
   local.get $hashCode
   local.get $this
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:bucketsMask"
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $bucketPtrBase
   local.get $entry
   local.get $bucketPtrBase
   i32.load
   call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#set:taggedNext"
   local.get $bucketPtrBase
   local.get $entry
   i32.store
  end
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/gas-costs/BlockGasCost#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 54
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/gas-costs/BlockGasCost#set:pc
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  call $assembly/gas-costs/BlockGasCost#set:gas
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/gas-costs/computeGasCosts (param $p i32) (result i32)
  (local $len i32)
  (local $blocks i32)
  (local $currentBlock i32)
  (local $i i32)
  (local $instruction i32)
  (local $iData i32)
  (local $skipBytes i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  local.get $p
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  call $assembly/program/Program#get:code
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#constructor"
  local.tee $blocks
  i32.store offset=8
  i32.const 0
  local.set $currentBlock
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    local.get $p
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $assembly/program/Program#get:mask
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i
    call $assembly/program/Mask#isInstruction
    i32.eqz
    if
     i32.const 14512
     i32.const 19072
     i32.const 16
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $p
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $assembly/program/Program#get:code
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i
    call $~lib/typedarray/Uint8Array#__get
    local.set $instruction
    local.get $instruction
    global.get $assembly/instructions/INSTRUCTIONS
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    call $~lib/array/Array<assembly/instructions/Instruction>#get:length
    i32.const 255
    i32.and
    i32.ge_u
    if (result i32)
     global.get $assembly/instructions/MISSING_INSTRUCTION
    else
     global.get $assembly/instructions/INSTRUCTIONS
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $instruction
     call $~lib/array/Array<assembly/instructions/Instruction>#__get
    end
    local.set $iData
    local.get $p
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $assembly/program/Program#get:basicBlocks
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i
    call $assembly/program/BasicBlocks#isStart
    if
     local.get $currentBlock
     i32.const 0
     i32.ne
     if
      local.get $blocks
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store
      local.get $8
      local.get $currentBlock
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=12
      local.get $8
      call $assembly/gas-costs/BlockGasCost#get:pc
      local.get $currentBlock
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      local.get $8
      call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set"
      drop
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     call $assembly/gas-costs/BlockGasCost#constructor
     local.tee $currentBlock
     i32.store offset=16
     local.get $currentBlock
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $i
     call $assembly/gas-costs/BlockGasCost#set:pc
    end
    local.get $currentBlock
    i32.const 0
    i32.ne
    if
     local.get $currentBlock
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $currentBlock
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     call $assembly/gas-costs/BlockGasCost#get:gas
     local.get $iData
     call $assembly/instructions/Instruction#get:gas
     i64.add
     call $assembly/gas-costs/BlockGasCost#set:gas
    end
    local.get $p
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    call $assembly/program/Program#get:mask
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store
    local.get $8
    local.get $i
    call $assembly/program/Mask#skipBytesToNextInstruction
    local.set $skipBytes
    local.get $i
    local.get $skipBytes
    i32.add
    local.set $i
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $currentBlock
  i32.const 0
  i32.ne
  if
   local.get $blocks
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   local.get $currentBlock
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   call $assembly/gas-costs/BlockGasCost#get:pc
   local.get $currentBlock
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   local.get $8
   call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#set"
   drop
  end
  local.get $blocks
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 55
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8128
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 480
    i32.const 8128
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:dataStart
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $newLength
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#values" (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $values i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entries"
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesOffset"
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#constructor
  local.tee $values
  i32.store offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.6" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.6"
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $values
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:value"
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $8
     call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $length
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#set:length
  local.get $values
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $assembly/api-utils/getGasCosts (param $input i32) (param $kind i32) (param $withMetadata i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $program i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $kind
  local.get $withMetadata
  local.get $input
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  i32.const 0
  i32.const 3
  i32.const 56
  i32.const 18832
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  i32.const 0
  i32.const 2
  i32.const 49
  i32.const 18864
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $8
  i32.const 0
  i32.const 2
  i32.const 51
  i32.const 18896
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=12
  local.get $8
  i32.const 0
  i32.const 0
  i32.const 27
  i32.const 18928
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=16
  local.get $8
  call $assembly/api-utils/prepareProgram
  local.tee $program
  i32.store offset=20
  local.get $program
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $8
  call $assembly/spi/StandardProgram#get:program
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  call $assembly/gas-costs/computeGasCosts
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#values"
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/string/String#padStart (param $this i32) (param $length i32) (param $pad i32) (result i32)
  (local $thisSize i32)
  (local $targetSize i32)
  (local $padSize i32)
  (local $prependSize i32)
  (local $out i32)
  (local $repeatCount i32)
  (local $restBase i32)
  (local $restSize i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store
  local.get $11
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $thisSize
  local.get $length
  i32.const 1
  i32.shl
  local.set $targetSize
  local.get $pad
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store
  local.get $11
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $padSize
  local.get $targetSize
  local.get $thisSize
  i32.lt_u
  if (result i32)
   i32.const 1
  else
   local.get $padSize
   i32.eqz
  end
  if
   local.get $this
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $targetSize
  local.get $thisSize
  i32.sub
  local.set $prependSize
  global.get $~lib/memory/__stack_pointer
  local.get $targetSize
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store offset=4
  local.get $prependSize
  local.get $padSize
  i32.gt_u
  if
   local.get $prependSize
   i32.const 2
   i32.sub
   local.get $padSize
   i32.div_u
   local.set $repeatCount
   local.get $repeatCount
   local.get $padSize
   i32.mul
   local.set $restBase
   local.get $prependSize
   local.get $restBase
   i32.sub
   local.set $restSize
   local.get $out
   local.get $pad
   local.get $padSize
   local.get $repeatCount
   call $~lib/memory/memory.repeat
   local.get $out
   local.get $restBase
   i32.add
   local.get $pad
   local.get $restSize
   memory.copy
  else
   local.get $out
   local.get $pad
   local.get $prependSize
   memory.copy
  end
  local.get $out
  local.get $prependSize
  i32.add
  local.get $this
  local.get $thisSize
  memory.copy
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $assembly/api-utils/disassemble~anonymous|0 (param $acc i32) (param $x i32) (param $$2 i32) (param $$3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $acc
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $x
  i32.const 16
  call $~lib/number/U8#toString
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  i32.const 2
  i32.const 15056
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $~lib/string/String#padStart
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Uint8Array#reduce<~lib/string/String> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  block $"~lib/typedarray/REDUCE<~lib/typedarray/Uint8Array,u8,~lib/string/String>|inlined.0" (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $this
   local.tee $array
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $fn
   local.tee $fn|4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $initialValue
   local.tee $initialValue|5
   i32.store offset=8
   local.get $array
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   local.get $9
   call $~lib/arraybuffer/ArrayBufferView#get:dataStart
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   local.get $9
   call $~lib/typedarray/Uint8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $initialValue|5
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     local.get $9
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u
     local.get $i
     local.get $array
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=16
     local.get $9
     i32.const 4
     global.set $~argumentsLength
     local.get $fn|4
     i32.load
     call_indirect (type $5)
     local.tee $initialValue|5
     i32.store offset=8
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   local.get $initialValue|5
   br $"~lib/typedarray/REDUCE<~lib/typedarray/Uint8Array,u8,~lib/string/String>|inlined.0"
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/api-utils/disassemble (param $input i32) (param $kind i32) (param $withMetadata i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $program i32)
  (local $output i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $kind
  local.get $withMetadata
  local.get $input
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  i32.const 0
  i32.const 3
  i32.const 56
  i32.const 19136
  call $~lib/rt/__newArray
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  i32.const 0
  i32.const 2
  i32.const 49
  i32.const 19168
  call $~lib/rt/__newArray
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  i32.const 0
  i32.const 2
  i32.const 51
  i32.const 19200
  call $~lib/rt/__newArray
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=12
  local.get $9
  i32.const 0
  i32.const 0
  i32.const 27
  i32.const 19232
  call $~lib/rt/__newArray
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=16
  local.get $9
  call $assembly/api-utils/prepareProgram
  local.tee $program
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 14480
  local.tee $output
  i32.store offset=24
  local.get $withMetadata
  global.get $assembly/api-utils/HasMetadata.Yes
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 19264
   local.tee $output
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $output
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   i32.const 19312
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $~lib/string/String.__concat
   local.tee $output
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $output
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   local.get $program
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=28
   local.get $9
   call $assembly/spi/StandardProgram#get:metadata
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   i32.const 19344
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   local.get $9
   i32.const 14480
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=16
   local.get $9
   call $~lib/typedarray/Uint8Array#reduce<~lib/string/String>
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $~lib/string/String.__concat
   local.tee $output
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $output
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $9
   i32.const 19376
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   call $~lib/string/String.__concat
   local.tee $output
   i32.store offset=24
  end
  global.get $~lib/memory/__stack_pointer
  local.get $output
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store
  local.get $9
  local.get $program
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=12
  local.get $9
  call $assembly/spi/StandardProgram#get:program
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $assembly/api-internal/getAssembly
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $9
  call $~lib/string/String.__concat
  local.tee $output
  i32.store offset=24
  local.get $output
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
  return
 )
 (func $assembly/api-internal/VmInput#constructor (param $this i32) (param $program i32) (param $memory i32) (param $registers i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 60
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $program
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/api-internal/VmInput#set:program
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/api-internal/VmInput#set:memory
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/api-internal/VmInput#set:registers
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  call $assembly/api-internal/VmInput#set:pc
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i64.const 0
  call $assembly/api-internal/VmInput#set:gas
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/string/String#substring (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $finalStart i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $finalEnd i32)
  (local $14 i32)
  (local $15 i32)
  (local $fromPos i32)
  (local $17 i32)
  (local $18 i32)
  (local $toPos i32)
  (local $size i32)
  (local $out i32)
  (local $22 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $22
  global.get $~lib/memory/__stack_pointer
  local.get $22
  i32.store
  local.get $22
  call $~lib/string/String#get:length
  local.set $len
  local.get $start
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $6
  local.get $len
  local.tee $7
  local.get $6
  local.get $7
  i32.lt_s
  select
  local.set $finalStart
  local.get $end
  local.tee $9
  i32.const 0
  local.tee $10
  local.get $9
  local.get $10
  i32.gt_s
  select
  local.tee $11
  local.get $len
  local.tee $12
  local.get $11
  local.get $12
  i32.lt_s
  select
  local.set $finalEnd
  local.get $finalStart
  local.tee $14
  local.get $finalEnd
  local.tee $15
  local.get $14
  local.get $15
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $fromPos
  local.get $finalStart
  local.tee $17
  local.get $finalEnd
  local.tee $18
  local.get $17
  local.get $18
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $toPos
  local.get $toPos
  local.get $fromPos
  i32.sub
  local.set $size
  local.get $size
  i32.eqz
  if
   i32.const 14480
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  local.get $fromPos
  i32.eqz
  if (result i32)
   local.get $toPos
   local.get $len
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $22
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $22
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store offset=4
  local.get $out
  local.get $this
  local.get $fromPos
  i32.add
  local.get $size
  memory.copy
  local.get $out
  local.set $22
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $22
  return
 )
 (func $~lib/util/string/joinIntegerArray<u64> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $value i64)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value|9 i64)
  (local $i i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 14480
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i64.load
   local.set $value
   i32.const 0
   drop
   i32.const 8
   i32.const 4
   i32.le_u
   drop
   local.get $value
   i32.const 10
   call $~lib/util/number/utoa64
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store
  local.get $11
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 20
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 20
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store offset=4
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $lastIndex
   i32.lt_s
   if
    local.get $dataStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load
    local.set $value|9
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value|9
    call $~lib/util/number/itoa_buffered<u64>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 3
  i32.shl
  i32.add
  i64.load
  local.set $value|9
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value|9
  call $~lib/util/number/itoa_buffered<u64>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store
   local.get $11
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $~lib/staticarray/StaticArray<u64>#join (param $this i32) (param $separator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $this
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $~lib/staticarray/StaticArray<u64>#get:length
  local.get $separator
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/util/string/joinIntegerArray<u64>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/api-internal/executeProgram~anonymous|0 (param $x i64) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 19312
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $x
  i32.const 16
  call $~lib/number/U64#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String#concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/staticarray/StaticArray<u64>#map<~lib/string/String> (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $~lib/staticarray/StaticArray<u64>#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 61
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store offset=4
  local.get $out
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load
    local.get $i
    local.get $this
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load
    call_indirect (type $19)
    local.tee $result
    i32.store offset=8
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/array/Array<~lib/string/String>#join (param $this i32) (param $separator i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $ptr
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/array/Array<~lib/string/String>#get:length_
  local.set $len
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $ptr
  local.get $len
  local.get $separator
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  call $~lib/util/string/joinStringArray
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/api-internal/executeProgram~anonymous|1 (param $x i64) (param $$1 i32) (param $$2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 19312
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $x
  i32.const 16
  call $~lib/number/U64#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/string/String#concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/program/ResolvedArguments#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.const 63
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  call $assembly/program/ResolvedArguments#set:a
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  call $assembly/program/ResolvedArguments#set:b
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  call $assembly/program/ResolvedArguments#set:c
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  call $assembly/program/ResolvedArguments#set:d
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $assembly/arguments/Args#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  call $assembly/program/ResolvedArguments#set:decoded
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/program/resolveArguments (param $kind i32) (param $data i32) (param $lim i32) (param $registers i32) (result i32)
  (local $args i32)
  (local $resolved i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $kind
  local.get $data
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  local.get $lim
  call $assembly/program/decodeArguments
  local.tee $args
  i32.store offset=4
  local.get $args
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/program/ResolvedArguments#constructor
  local.tee $resolved
  i32.store offset=8
  local.get $resolved
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  local.get $args
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=12
  local.get $7
  call $assembly/program/ResolvedArguments#set:decoded
  block $case13|0
   block $case12|0
    block $case11|0
     block $case10|0
      block $case9|0
       block $case8|0
        block $case7|0
         block $case6|0
          block $case5|0
           block $case4|0
            block $case3|0
             block $case2|0
              block $case1|0
               block $case0|0
                local.get $kind
                local.set $6
                local.get $6
                global.get $assembly/arguments/Arguments.Zero
                i32.eq
                br_if $case0|0
                local.get $6
                global.get $assembly/arguments/Arguments.OneImm
                i32.eq
                br_if $case1|0
                local.get $6
                global.get $assembly/arguments/Arguments.TwoImm
                i32.eq
                br_if $case2|0
                local.get $6
                global.get $assembly/arguments/Arguments.OneOff
                i32.eq
                br_if $case3|0
                local.get $6
                global.get $assembly/arguments/Arguments.OneRegOneImm
                i32.eq
                br_if $case4|0
                local.get $6
                global.get $assembly/arguments/Arguments.OneRegOneExtImm
                i32.eq
                br_if $case5|0
                local.get $6
                global.get $assembly/arguments/Arguments.OneRegTwoImm
                i32.eq
                br_if $case6|0
                local.get $6
                global.get $assembly/arguments/Arguments.OneRegOneImmOneOff
                i32.eq
                br_if $case7|0
                local.get $6
                global.get $assembly/arguments/Arguments.TwoReg
                i32.eq
                br_if $case8|0
                local.get $6
                global.get $assembly/arguments/Arguments.TwoRegOneImm
                i32.eq
                br_if $case9|0
                local.get $6
                global.get $assembly/arguments/Arguments.TwoRegOneOff
                i32.eq
                br_if $case10|0
                local.get $6
                global.get $assembly/arguments/Arguments.TwoRegTwoImm
                i32.eq
                br_if $case11|0
                local.get $6
                global.get $assembly/arguments/Arguments.ThreeReg
                i32.eq
                br_if $case12|0
                br $case13|0
               end
               local.get $resolved
               local.set $7
               global.get $~lib/memory/__stack_pointer
               i32.const 20
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $7
               return
              end
              local.get $resolved
              local.set $7
              global.get $~lib/memory/__stack_pointer
              local.get $7
              i32.store
              local.get $7
              local.get $args
              local.set $7
              global.get $~lib/memory/__stack_pointer
              local.get $7
              i32.store offset=12
              local.get $7
              call $assembly/arguments/Args#get:a
              call $assembly/instructions/utils/u32SignExtend
              call $assembly/program/ResolvedArguments#set:a
              local.get $resolved
              local.set $7
              global.get $~lib/memory/__stack_pointer
              i32.const 20
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $7
              return
             end
             local.get $resolved
             local.set $7
             global.get $~lib/memory/__stack_pointer
             local.get $7
             i32.store
             local.get $7
             local.get $args
             local.set $7
             global.get $~lib/memory/__stack_pointer
             local.get $7
             i32.store offset=12
             local.get $7
             call $assembly/arguments/Args#get:a
             call $assembly/instructions/utils/u32SignExtend
             call $assembly/program/ResolvedArguments#set:a
             local.get $resolved
             local.set $7
             global.get $~lib/memory/__stack_pointer
             local.get $7
             i32.store
             local.get $7
             local.get $args
             local.set $7
             global.get $~lib/memory/__stack_pointer
             local.get $7
             i32.store offset=12
             local.get $7
             call $assembly/arguments/Args#get:b
             call $assembly/instructions/utils/u32SignExtend
             call $assembly/program/ResolvedArguments#set:b
             local.get $resolved
             local.set $7
             global.get $~lib/memory/__stack_pointer
             i32.const 20
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $7
             return
            end
            local.get $resolved
            local.set $7
            global.get $~lib/memory/__stack_pointer
            local.get $7
            i32.store
            local.get $7
            local.get $args
            local.set $7
            global.get $~lib/memory/__stack_pointer
            local.get $7
            i32.store offset=12
            local.get $7
            call $assembly/arguments/Args#get:a
            call $assembly/instructions/utils/u32SignExtend
            call $assembly/program/ResolvedArguments#set:a
            local.get $resolved
            local.set $7
            global.get $~lib/memory/__stack_pointer
            i32.const 20
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $7
            return
           end
           local.get $resolved
           local.set $7
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store
           local.get $7
           local.get $registers
           local.set $7
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store offset=12
           local.get $7
           local.get $args
           local.set $7
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store offset=16
           local.get $7
           call $assembly/arguments/Args#get:a
           i64.extend_i32_u
           call $assembly/instructions/utils/reg
           call $~lib/staticarray/StaticArray<u64>#__get
           call $assembly/program/ResolvedArguments#set:a
           local.get $resolved
           local.set $7
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store
           local.get $7
           local.get $args
           local.set $7
           global.get $~lib/memory/__stack_pointer
           local.get $7
           i32.store offset=12
           local.get $7
           call $assembly/arguments/Args#get:b
           call $assembly/instructions/utils/u32SignExtend
           call $assembly/program/ResolvedArguments#set:b
           local.get $resolved
           local.set $7
           global.get $~lib/memory/__stack_pointer
           i32.const 20
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $7
           return
          end
          local.get $resolved
          local.set $7
          global.get $~lib/memory/__stack_pointer
          local.get $7
          i32.store
          local.get $7
          local.get $registers
          local.set $7
          global.get $~lib/memory/__stack_pointer
          local.get $7
          i32.store offset=12
          local.get $7
          local.get $args
          local.set $7
          global.get $~lib/memory/__stack_pointer
          local.get $7
          i32.store offset=16
          local.get $7
          call $assembly/arguments/Args#get:a
          i64.extend_i32_u
          call $assembly/instructions/utils/reg
          call $~lib/staticarray/StaticArray<u64>#__get
          call $assembly/program/ResolvedArguments#set:a
          local.get $resolved
          local.set $7
          global.get $~lib/memory/__stack_pointer
          local.get $7
          i32.store
          local.get $7
          local.get $args
          local.set $7
          global.get $~lib/memory/__stack_pointer
          local.get $7
          i32.store offset=12
          local.get $7
          call $assembly/arguments/Args#get:a
          i64.extend_i32_u
          i64.const 32
          i64.shl
          local.get $args
          local.set $7
          global.get $~lib/memory/__stack_pointer
          local.get $7
          i32.store offset=12
          local.get $7
          call $assembly/arguments/Args#get:b
          i64.extend_i32_u
          i64.add
          call $assembly/program/ResolvedArguments#set:b
          local.get $resolved
          local.set $7
          global.get $~lib/memory/__stack_pointer
          i32.const 20
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $7
          return
         end
         local.get $resolved
         local.set $7
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store
         local.get $7
         local.get $registers
         local.set $7
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store offset=12
         local.get $7
         local.get $args
         local.set $7
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store offset=16
         local.get $7
         call $assembly/arguments/Args#get:a
         i64.extend_i32_u
         call $assembly/instructions/utils/reg
         call $~lib/staticarray/StaticArray<u64>#__get
         call $assembly/program/ResolvedArguments#set:a
         local.get $resolved
         local.set $7
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store
         local.get $7
         local.get $args
         local.set $7
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store offset=12
         local.get $7
         call $assembly/arguments/Args#get:b
         call $assembly/instructions/utils/u32SignExtend
         call $assembly/program/ResolvedArguments#set:b
         local.get $resolved
         local.set $7
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store
         local.get $7
         local.get $args
         local.set $7
         global.get $~lib/memory/__stack_pointer
         local.get $7
         i32.store offset=12
         local.get $7
         call $assembly/arguments/Args#get:c
         call $assembly/instructions/utils/u32SignExtend
         call $assembly/program/ResolvedArguments#set:c
         local.get $resolved
         local.set $7
         global.get $~lib/memory/__stack_pointer
         i32.const 20
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $7
         return
        end
        local.get $resolved
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store
        local.get $7
        local.get $registers
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store offset=12
        local.get $7
        local.get $args
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store offset=16
        local.get $7
        call $assembly/arguments/Args#get:a
        i64.extend_i32_u
        call $assembly/instructions/utils/reg
        call $~lib/staticarray/StaticArray<u64>#__get
        call $assembly/program/ResolvedArguments#set:a
        local.get $resolved
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store
        local.get $7
        local.get $args
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store offset=12
        local.get $7
        call $assembly/arguments/Args#get:b
        call $assembly/instructions/utils/u32SignExtend
        call $assembly/program/ResolvedArguments#set:b
        local.get $resolved
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store
        local.get $7
        local.get $args
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store offset=12
        local.get $7
        call $assembly/arguments/Args#get:c
        call $assembly/instructions/utils/u32SignExtend
        call $assembly/program/ResolvedArguments#set:c
        local.get $resolved
        local.set $7
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $7
        return
       end
       local.get $resolved
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store
       local.get $7
       local.get $registers
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=12
       local.get $7
       local.get $args
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=16
       local.get $7
       call $assembly/arguments/Args#get:a
       i64.extend_i32_u
       call $assembly/instructions/utils/reg
       call $~lib/staticarray/StaticArray<u64>#__get
       call $assembly/program/ResolvedArguments#set:a
       local.get $resolved
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store
       local.get $7
       local.get $registers
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=12
       local.get $7
       local.get $args
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=16
       local.get $7
       call $assembly/arguments/Args#get:b
       i64.extend_i32_u
       call $assembly/instructions/utils/reg
       call $~lib/staticarray/StaticArray<u64>#__get
       call $assembly/program/ResolvedArguments#set:b
       local.get $resolved
       local.set $7
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $7
       return
      end
      local.get $resolved
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $7
      local.get $registers
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=12
      local.get $7
      local.get $args
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=16
      local.get $7
      call $assembly/arguments/Args#get:a
      i64.extend_i32_u
      call $assembly/instructions/utils/reg
      call $~lib/staticarray/StaticArray<u64>#__get
      call $assembly/program/ResolvedArguments#set:a
      local.get $resolved
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $7
      local.get $registers
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=12
      local.get $7
      local.get $args
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=16
      local.get $7
      call $assembly/arguments/Args#get:b
      i64.extend_i32_u
      call $assembly/instructions/utils/reg
      call $~lib/staticarray/StaticArray<u64>#__get
      call $assembly/program/ResolvedArguments#set:b
      local.get $resolved
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $7
      local.get $args
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=12
      local.get $7
      call $assembly/arguments/Args#get:c
      call $assembly/instructions/utils/u32SignExtend
      call $assembly/program/ResolvedArguments#set:c
      local.get $resolved
      local.set $7
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $7
      return
     end
     local.get $resolved
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     local.get $registers
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     local.get $7
     local.get $args
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=16
     local.get $7
     call $assembly/arguments/Args#get:a
     i64.extend_i32_u
     call $assembly/instructions/utils/reg
     call $~lib/staticarray/StaticArray<u64>#__get
     call $assembly/program/ResolvedArguments#set:a
     local.get $resolved
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     local.get $registers
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     local.get $7
     local.get $args
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=16
     local.get $7
     call $assembly/arguments/Args#get:b
     i64.extend_i32_u
     call $assembly/instructions/utils/reg
     call $~lib/staticarray/StaticArray<u64>#__get
     call $assembly/program/ResolvedArguments#set:b
     local.get $resolved
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     local.get $args
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     local.get $7
     call $assembly/arguments/Args#get:c
     call $assembly/instructions/utils/u32SignExtend
     call $assembly/program/ResolvedArguments#set:c
     local.get $resolved
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     return
    end
    local.get $resolved
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    local.get $registers
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    local.get $args
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=16
    local.get $7
    call $assembly/arguments/Args#get:a
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    call $~lib/staticarray/StaticArray<u64>#__get
    call $assembly/program/ResolvedArguments#set:a
    local.get $resolved
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    local.get $registers
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    local.get $args
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=16
    local.get $7
    call $assembly/arguments/Args#get:b
    i64.extend_i32_u
    call $assembly/instructions/utils/reg
    call $~lib/staticarray/StaticArray<u64>#__get
    call $assembly/program/ResolvedArguments#set:b
    local.get $resolved
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    local.get $args
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    call $assembly/arguments/Args#get:c
    call $assembly/instructions/utils/u32SignExtend
    call $assembly/program/ResolvedArguments#set:c
    local.get $resolved
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    local.get $args
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    call $assembly/arguments/Args#get:d
    call $assembly/instructions/utils/u32SignExtend
    call $assembly/program/ResolvedArguments#set:d
    local.get $resolved
    local.set $7
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $7
    return
   end
   local.get $resolved
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   local.get $registers
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   local.get $7
   local.get $args
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=16
   local.get $7
   call $assembly/arguments/Args#get:a
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   call $assembly/program/ResolvedArguments#set:a
   local.get $resolved
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   local.get $registers
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   local.get $7
   local.get $args
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=16
   local.get $7
   call $assembly/arguments/Args#get:b
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   call $assembly/program/ResolvedArguments#set:b
   local.get $resolved
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store
   local.get $7
   local.get $registers
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   local.get $7
   local.get $args
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=16
   local.get $7
   call $assembly/arguments/Args#get:c
   i64.extend_i32_u
   call $assembly/instructions/utils/reg
   call $~lib/staticarray/StaticArray<u64>#__get
   call $assembly/program/ResolvedArguments#set:c
   local.get $resolved
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  i32.const 16864
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  local.get $kind
  i32.const 10
  call $~lib/number/I32#toString
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=12
  local.get $7
  call $~lib/string/String#concat
  i32.const 19936
  i32.const 332
  i32.const 7
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/api-internal/VmOutput#constructor (param $this i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 59
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/object/Object#constructor
  local.tee $this
  i32.store
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  global.get $assembly/interpreter/Status.OK
  call $assembly/api-internal/VmOutput#set:status
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 3
  i32.const 56
  i32.const 20272
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/api-internal/VmOutput#set:registers
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $assembly/api-internal/VmOutput#set:pc
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 2
  i32.const 51
  i32.const 20304
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  call $assembly/api-internal/VmOutput#set:memory
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i64.const 0
  call $assembly/api-internal/VmOutput#set:gas
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  call $assembly/api-internal/VmOutput#set:exitCode
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/staticarray/StaticArray<u64>#slice<~lib/array/Array<u64>> (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $length i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $sourceStart i32)
  (local $size i32)
  (local $out i32)
  (local $outStart i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store
  local.get $18
  call $~lib/staticarray/StaticArray<u64>#get:length
  local.set $length
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $length
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $length
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $length
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $length
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $length
  local.get $this
  local.get $start
  i32.const 3
  i32.shl
  i32.add
  local.set $sourceStart
  local.get $length
  i32.const 3
  i32.shl
  local.set $size
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.tee $out
  i32.store offset=4
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 3
  i32.const 56
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store offset=4
  local.get $out
  local.set $18
  global.get $~lib/memory/__stack_pointer
  local.get $18
  i32.store
  local.get $18
  call $~lib/array/Array<u64>#get:dataStart
  local.set $outStart
  i32.const 0
  drop
  local.get $outStart
  local.get $sourceStart
  local.get $size
  memory.copy
  local.get $out
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
  return
 )
 (func $~lib/staticarray/StaticArray<u64>#slice<~lib/array/Array<u64>>@varargs (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $start
   end
   global.get $~lib/builtins/i32.MAX_VALUE
   local.set $end
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  local.get $start
  local.get $end
  call $~lib/staticarray/StaticArray<u64>#slice<~lib/array/Array<u64>>
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<u32>#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 38
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<u32>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<u32>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<u32>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  i32.const 0
  call $~lib/array/Array<u32>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8128
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store offset=8
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $buffer
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $~lib/array/Array<u32>#set:buffer
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $buffer
  call $~lib/array/Array<u32>#set:dataStart
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $bufferSize
  call $~lib/array/Array<u32>#set:byteLength
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $length
  call $~lib/array/Array<u32>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<u32>#set:length (param $this i32) (param $newLength i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $newLength
  call $~lib/array/Array<u32>#set:length_
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#keys" (param $this i32) (result i32)
  (local $start i32)
  (local $size i32)
  (local $keys i32)
  (local $length i32)
  (local $i i32)
  (local $entry i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entries"
  local.set $start
  local.get $this
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesOffset"
  local.set $size
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $size
  call $~lib/array/Array<u32>#constructor
  local.tee $keys
  i32.store offset=4
  i32.const 0
  local.set $length
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $size
   i32.lt_s
   if
    local.get $start
    local.get $i
    block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.8" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.8"
    end
    i32.mul
    i32.add
    local.set $entry
    local.get $entry
    call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $keys
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $length
     local.tee $7
     i32.const 1
     i32.add
     local.set $length
     local.get $7
     local.get $entry
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:key"
     call $~lib/array/Array<u32>#__set
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $length
  call $~lib/array/Array<u32>#set:length
  local.get $keys
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  return
 )
 (func $~lib/array/Array<u32>#get:length (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u32>#get:length_
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  return
 )
 (func $~lib/array/Array<u8>#__set (param $this i32) (param $index i32) (param $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $index
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u8>#get:length_
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 480
    i32.const 8128
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 0
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<u8>#set:length_
  end
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u8>#get:dataStart
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  local.get $value
  i32.store8
  i32.const 0
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/api-internal/getOutputChunks (param $memory i32) (result i32)
  (local $1 i32)
  (local $chunks i32)
  (local $pages i32)
  (local $currentChunk i32)
  (local $i i32)
  (local $pageIdx i32)
  (local $page i32)
  (local $n i32)
  (local $v i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 51
  i32.const 20336
  call $~lib/rt/__newArray
  local.tee $chunks
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $memory
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=8
  local.get $11
  call $assembly/memory/Memory#get:pages
  local.set $11
  global.get $~lib/memory/__stack_pointer
  local.get $11
  i32.store offset=4
  local.get $11
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#keys"
  local.tee $pages
  i32.store offset=12
  i32.const 0
  local.set $currentChunk
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $pages
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $11
   call $~lib/array/Array<u32>#get:length
   i32.lt_s
   if
    block $for-continue|0
     local.get $pages
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     local.get $i
     call $~lib/array/Array<u32>#__get
     local.set $pageIdx
     global.get $~lib/memory/__stack_pointer
     local.get $memory
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=8
     local.get $11
     call $assembly/memory/Memory#get:pages
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     local.get $pageIdx
     call $"~lib/map/Map<u32,assembly/memory-page/Page>#get"
     local.tee $page
     i32.store offset=16
     local.get $page
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=8
     local.get $11
     call $assembly/memory-page/Page#get:raw
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     local.get $11
     call $assembly/memory-page/RawPage#get:page
     i32.const 0
     i32.eq
     if
      br $for-continue|0
     end
     i32.const 0
     local.set $n
     loop $for-loop|1
      local.get $n
      local.get $page
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=20
      local.get $11
      call $assembly/memory-page/Page#get:raw
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=8
      local.get $11
      call $assembly/memory-page/RawPage#get:data
      local.set $11
      global.get $~lib/memory/__stack_pointer
      local.get $11
      i32.store offset=4
      local.get $11
      call $~lib/typedarray/Uint8Array#get:length
      i32.lt_s
      if
       local.get $page
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=20
       local.get $11
       call $assembly/memory-page/Page#get:raw
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=8
       local.get $11
       call $assembly/memory-page/RawPage#get:data
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       local.get $11
       local.get $n
       call $~lib/typedarray/Uint8Array#__get
       local.set $v
       local.get $v
       i32.const 0
       i32.ne
       if
        local.get $currentChunk
        i32.const 0
        i32.ne
        if
         local.get $currentChunk
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=8
         local.get $11
         call $assembly/api-internal/InitialChunk#get:data
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=4
         local.get $11
         local.get $v
         call $~lib/array/Array<u8>#push
         drop
        else
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         call $assembly/api-internal/InitialChunk#constructor
         local.tee $currentChunk
         i32.store offset=24
         local.get $currentChunk
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=4
         local.get $11
         local.get $pageIdx
         global.get $assembly/memory-page/PAGE_SIZE
         i32.mul
         local.get $n
         i32.add
         call $assembly/api-internal/InitialChunk#set:address
         local.get $currentChunk
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=4
         local.get $11
         global.get $~lib/memory/__stack_pointer
         i32.const 1
         i32.const 0
         i32.const 27
         i32.const 0
         call $~lib/rt/__newArray
         local.tee $10
         i32.store offset=28
         local.get $10
         i32.const 0
         local.get $v
         call $~lib/array/Array<u8>#__set
         local.get $10
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=8
         local.get $11
         call $assembly/api-internal/InitialChunk#set:data
        end
       else
        local.get $currentChunk
        i32.const 0
        i32.ne
        if
         local.get $chunks
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=4
         local.get $11
         local.get $currentChunk
         local.set $11
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=8
         local.get $11
         call $~lib/array/Array<assembly/api-internal/InitialChunk>#push
         drop
         i32.const 0
         local.set $currentChunk
        end
       end
       local.get $n
       i32.const 1
       i32.add
       local.set $n
       br $for-loop|1
      end
     end
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $currentChunk
  i32.const 0
  i32.ne
  if
   local.get $chunks
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=4
   local.get $11
   local.get $currentChunk
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store offset=8
   local.get $11
   call $~lib/array/Array<assembly/api-internal/InitialChunk>#push
   drop
  end
  local.get $chunks
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
  return
 )
 (func $assembly/api-internal/executeProgram (param $int i32) (param $logs i32) (result i32)
  (local $isOk i32)
  (local $3 i32)
  (local $4 i32)
  (local $instruction i32)
  (local $iData i32)
  (local $skipBytes i32)
  (local $name i32)
  (local $9 i32)
  (local $10 i32)
  (local $args i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $output i32)
  (local $25 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 108
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 108
  memory.fill
  i32.const 1
  local.set $isOk
  block $for-break0
   loop $for-loop|0
    i32.const 1
    if
     local.get $isOk
     i32.eqz
     if
      local.get $logs
      if
       global.get $~lib/memory/__stack_pointer
       local.get $int
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=12
       local.get $25
       call $assembly/interpreter/Interpreter#get:registers
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 16800
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<u64>#join
       local.tee $3
       i32.store offset=16
       i32.const 19504
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 1
       local.get $3
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 19504
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 14480
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#join
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store
       local.get $25
       call $~lib/console/console.log
      end
      local.get $logs
      if
       global.get $~lib/memory/__stack_pointer
       local.get $int
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=24
       local.get $25
       call $assembly/interpreter/Interpreter#get:registers
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=12
       local.get $25
       i32.const 19568
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=20
       local.get $25
       call $~lib/staticarray/StaticArray<u64>#map<~lib/string/String>
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 16800
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/array/Array<~lib/string/String>#join
       local.tee $4
       i32.store offset=28
       i32.const 19536
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 1
       local.get $4
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 19536
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 14480
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#join
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store
       local.get $25
       call $~lib/console/console.log
      end
      local.get $logs
      if
       i32.const 19600
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       local.get $int
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=12
       local.get $25
       call $assembly/interpreter/Interpreter#get:status
       i32.const 10
       call $~lib/number/I32#toString
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/string/String#concat
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store
       local.get $25
       call $~lib/console/console.log
      end
      br $for-break0
     end
     local.get $logs
     if
      i32.const 19664
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=12
      local.get $25
      call $assembly/interpreter/Interpreter#get:pc
      i32.const 10
      call $~lib/number/U32#toString
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/string/String#concat
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/console/console.log
     end
     local.get $logs
     if
      i32.const 19696
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=20
      local.get $25
      call $assembly/interpreter/Interpreter#get:gas
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=12
      local.get $25
      call $assembly/gas/GasCounter#get@override
      i32.const 10
      call $~lib/number/I64#toString
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/string/String#concat
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/console/console.log
     end
     local.get $logs
     if
      i32.const 19728
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=12
      local.get $25
      call $assembly/interpreter/Interpreter#get:status
      i32.const 10
      call $~lib/number/I32#toString
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/string/String#concat
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/console/console.log
     end
     local.get $logs
     if
      i32.const 19408
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=24
      local.get $25
      call $assembly/interpreter/Interpreter#get:registers
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=12
      local.get $25
      i32.const 16800
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=20
      local.get $25
      call $~lib/staticarray/StaticArray<u64>#join
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/string/String#concat
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/console/console.log
     end
     local.get $logs
     if
      i32.const 19408
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=36
      local.get $25
      call $assembly/interpreter/Interpreter#get:registers
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=24
      local.get $25
      i32.const 19776
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=32
      local.get $25
      call $~lib/staticarray/StaticArray<u64>#map<~lib/string/String>
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=12
      local.get $25
      i32.const 16800
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=20
      local.get $25
      call $~lib/array/Array<~lib/string/String>#join
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/string/String#concat
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/console/console.log
     end
     local.get $logs
     if
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $assembly/interpreter/Interpreter#get:pc
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $assembly/interpreter/Interpreter#get:program
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      call $assembly/program/Program#get:code
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/typedarray/Uint8Array#get:length
      i32.lt_u
      if (result i32)
       local.get $int
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $assembly/interpreter/Interpreter#get:program
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/Program#get:code
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store
       local.get $25
       local.get $int
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/interpreter/Interpreter#get:pc
       call $~lib/typedarray/Uint8Array#__get
      else
       i32.const 0
      end
      local.set $instruction
      local.get $instruction
      global.get $assembly/instructions/INSTRUCTIONS
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/array/Array<assembly/instructions/Instruction>#get:length
      i32.const 255
      i32.and
      i32.ge_u
      if (result i32)
       global.get $assembly/instructions/MISSING_INSTRUCTION
      else
       global.get $assembly/instructions/INSTRUCTIONS
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store
       local.get $25
       local.get $instruction
       call $~lib/array/Array<assembly/instructions/Instruction>#__get
      end
      local.set $iData
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $assembly/interpreter/Interpreter#get:program
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      call $assembly/program/Program#get:mask
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      call $assembly/interpreter/Interpreter#get:pc
      call $assembly/program/Mask#skipBytesToNextInstruction
      local.set $skipBytes
      global.get $~lib/memory/__stack_pointer
      local.get $iData
      call $assembly/instructions/Instruction#get:namePtr
      local.tee $name
      i32.store offset=40
      global.get $~lib/memory/__stack_pointer
      local.get $name
      local.tee $9
      i32.store offset=44
      global.get $~lib/memory/__stack_pointer
      local.get $instruction
      i32.const 10
      call $~lib/number/U8#toString
      local.tee $10
      i32.store offset=48
      i32.const 19888
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      i32.const 1
      local.get $9
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
      i32.const 19888
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      i32.const 3
      local.get $10
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
      i32.const 19888
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      i32.const 14480
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $~lib/staticarray/StaticArray<~lib/string/String>#join
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      call $~lib/console/console.log
      global.get $~lib/memory/__stack_pointer
      local.get $iData
      call $assembly/instructions/Instruction#get:kind
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=20
      local.get $25
      call $assembly/interpreter/Interpreter#get:program
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=12
      local.get $25
      call $assembly/program/Program#get:code
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=12
      local.get $25
      call $assembly/interpreter/Interpreter#get:pc
      i32.const 1
      i32.add
      i32.const 1
      global.set $~argumentsLength
      i32.const 0
      call $~lib/typedarray/Uint8Array#subarray@varargs
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store
      local.get $25
      local.get $skipBytes
      local.get $int
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=8
      local.get $25
      call $assembly/interpreter/Interpreter#get:registers
      local.set $25
      global.get $~lib/memory/__stack_pointer
      local.get $25
      i32.store offset=4
      local.get $25
      call $assembly/program/resolveArguments
      local.tee $args
      i32.store offset=52
      local.get $args
      i32.const 0
      i32.ne
      if
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:a
       i32.const 10
       call $~lib/number/I64#toString
       local.tee $12
       i32.store offset=56
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $assembly/program/ResolvedArguments#get:decoded
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/arguments/Args#get:a
       i32.const 10
       call $~lib/number/U32#toString
       local.tee $13
       i32.store offset=60
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:a
       i32.const 16
       call $~lib/number/U64#toString
       local.tee $14
       i32.store offset=64
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:b
       i32.const 10
       call $~lib/number/I64#toString
       local.tee $15
       i32.store offset=68
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $assembly/program/ResolvedArguments#get:decoded
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/arguments/Args#get:b
       i32.const 10
       call $~lib/number/U32#toString
       local.tee $16
       i32.store offset=72
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:b
       i32.const 16
       call $~lib/number/U64#toString
       local.tee $17
       i32.store offset=76
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:c
       i32.const 10
       call $~lib/number/I64#toString
       local.tee $18
       i32.store offset=80
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $assembly/program/ResolvedArguments#get:decoded
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/arguments/Args#get:c
       i32.const 10
       call $~lib/number/U32#toString
       local.tee $19
       i32.store offset=84
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:c
       i32.const 16
       call $~lib/number/U64#toString
       local.tee $20
       i32.store offset=88
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:d
       i32.const 10
       call $~lib/number/I64#toString
       local.tee $21
       i32.store offset=92
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $assembly/program/ResolvedArguments#get:decoded
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/arguments/Args#get:d
       i32.const 10
       call $~lib/number/U32#toString
       local.tee $22
       i32.store offset=96
       global.get $~lib/memory/__stack_pointer
       local.get $args
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       call $assembly/program/ResolvedArguments#get:d
       i32.const 16
       call $~lib/number/U64#toString
       local.tee $23
       i32.store offset=100
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 1
       local.get $12
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 3
       local.get $13
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 5
       local.get $14
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 7
       local.get $15
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 9
       local.get $16
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 11
       local.get $17
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 13
       local.get $18
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 15
       local.get $19
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 17
       local.get $20
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 19
       local.get $21
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 21
       local.get $22
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 23
       local.get $23
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
       i32.const 20144
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=4
       local.get $25
       i32.const 14480
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store offset=8
       local.get $25
       call $~lib/staticarray/StaticArray<~lib/string/String>#join
       local.set $25
       global.get $~lib/memory/__stack_pointer
       local.get $25
       i32.store
       local.get $25
       call $~lib/console/console.log
      end
     end
     local.get $int
     local.set $25
     global.get $~lib/memory/__stack_pointer
     local.get $25
     i32.store
     local.get $25
     call $assembly/interpreter/Interpreter#nextStep
     local.set $isOk
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/api-internal/VmOutput#constructor
  local.tee $output
  i32.store offset=104
  local.get $output
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store
  local.get $25
  local.get $int
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=4
  local.get $25
  call $assembly/interpreter/Interpreter#get:status
  call $assembly/api-internal/VmOutput#set:status
  local.get $output
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store
  local.get $25
  local.get $int
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=12
  local.get $25
  call $assembly/interpreter/Interpreter#get:registers
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=8
  local.get $25
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/staticarray/StaticArray<u64>#slice<~lib/array/Array<u64>>@varargs
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=4
  local.get $25
  call $assembly/api-internal/VmOutput#set:registers
  local.get $output
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store
  local.get $25
  local.get $int
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=4
  local.get $25
  call $assembly/interpreter/Interpreter#get:pc
  call $assembly/api-internal/VmOutput#set:pc
  local.get $output
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store
  local.get $25
  local.get $int
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=8
  local.get $25
  call $assembly/interpreter/Interpreter#get:gas
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=4
  local.get $25
  call $assembly/gas/GasCounter#get@override
  call $assembly/api-internal/VmOutput#set:gas
  local.get $output
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store
  local.get $25
  local.get $int
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=12
  local.get $25
  call $assembly/interpreter/Interpreter#get:memory
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=8
  local.get $25
  call $assembly/api-internal/getOutputChunks
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=4
  local.get $25
  call $assembly/api-internal/VmOutput#set:memory
  local.get $output
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store
  local.get $25
  local.get $int
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=4
  local.get $25
  call $assembly/interpreter/Interpreter#get:exitCode
  call $assembly/api-internal/VmOutput#set:exitCode
  local.get $int
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store offset=4
  local.get $25
  call $assembly/interpreter/Interpreter#get:memory
  local.set $25
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.store
  local.get $25
  call $assembly/memory/Memory#free
  local.get $output
  local.set $25
  global.get $~lib/memory/__stack_pointer
  i32.const 108
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $25
  return
 )
 (func $assembly/api-internal/runVm (param $input i32) (param $logs i32) (param $useSbrkGas i32) (result i32)
  (local $int i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $input
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/api-internal/VmInput#get:program
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $input
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/api-internal/VmInput#get:registers
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $input
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  local.get $4
  call $assembly/api-internal/VmInput#get:memory
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/interpreter/Interpreter#constructor
  local.tee $int
  i32.store offset=16
  local.get $int
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $useSbrkGas
  call $assembly/interpreter/Interpreter#set:useSbrkGas
  local.get $int
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $input
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/api-internal/VmInput#get:pc
  call $assembly/interpreter/Interpreter#set:nextPc
  local.get $int
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/interpreter/Interpreter#get:gas
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $input
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $assembly/api-internal/VmInput#get:gas
  call $assembly/gas/GasCounter#set@override
  local.get $int
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $logs
  call $assembly/api-internal/executeProgram
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $assembly/api-utils/runProgram (param $program i32) (param $initialGas i64) (param $programCounter i32) (param $logs i32) (param $useSbrkGas i32) (result i32)
  (local $vmInput i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $program
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $assembly/spi/StandardProgram#get:program
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $program
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $assembly/spi/StandardProgram#get:memory
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  local.get $program
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=12
  local.get $6
  call $assembly/spi/StandardProgram#get:registers
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  call $assembly/api-internal/VmInput#constructor
  local.tee $vmInput
  i32.store offset=16
  local.get $vmInput
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $initialGas
  call $assembly/api-internal/VmInput#set:gas
  local.get $vmInput
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $programCounter
  call $assembly/api-internal/VmInput#set:pc
  local.get $vmInput
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $logs
  local.get $useSbrkGas
  call $assembly/api-internal/runVm
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
  return
 )
 (func $assembly/api-utils/runProgram@varargs (param $program i32) (param $initialGas i64) (param $programCounter i32) (param $logs i32) (param $useSbrkGas i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $4of4
   block $3of4
    block $2of4
     block $1of4
      block $0of4
       block $outOfRange
        global.get $~argumentsLength
        i32.const 1
        i32.sub
        br_table $0of4 $1of4 $2of4 $3of4 $4of4 $outOfRange
       end
       unreachable
      end
      i64.const 0
      local.set $initialGas
     end
     i32.const 0
     local.set $programCounter
    end
    i32.const 0
    local.set $logs
   end
   i32.const 0
   local.set $useSbrkGas
  end
  local.get $program
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $initialGas
  local.get $programCounter
  local.get $logs
  local.get $useSbrkGas
  call $assembly/api-utils/runProgram
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/gas/GasCounterU64#set (param $this i32) (param $g i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $g
  call $assembly/gas/GasCounterU64#set:gas
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/gas/GasCounterU64#sub (param $this i32) (param $g i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/gas/GasCounterU64#get:gas
  local.get $g
  i64.sub
  call $assembly/gas/GasCounterU64#set:gas
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $assembly/gas/GasCounterU64#get:gas
  i64.const 0
  i64.lt_s
  if
   local.get $this
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i64.const 0
   call $assembly/gas/GasCounterU64#set:gas
   i32.const 1
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $assembly/gas/GasCounterU64#get (param $this i32) (result i64)
  (local $1 i32)
  (local $2 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $assembly/gas/GasCounterU64#get:gas
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  return
 )
 (func $~lib/array/Array<i32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/array/Array<i32>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/function/Function<%28~lib/typedarray/Uint8Array%2Cu32%29=>assembly/arguments/Args>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/instructions/Instruction>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/array/Array<assembly/instructions/Instruction>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/memory-page/RawPage>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/memory-page/RawPage>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/memory-page/Page>#__visit" (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:buckets"
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entries"
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<u32,assembly/memory-page/Page>#get:entriesOffset"
  block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.9" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.9"
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 0
     drop
     i32.const 1
     drop
     local.get $entry
     call $"~lib/map/MapEntry<u32,assembly/memory-page/Page>#get:value"
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.10" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<u32,assembly/memory-page/Page>|inlined.10"
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/function/Function<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<%28assembly/arguments/Args%2C~lib/staticarray/StaticArray<u64>%2Cassembly/memory/Memory%29=>assembly/instructions/outcome/OutcomeData>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u8>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/array/Array<u8>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28u8%29=>u8>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/function/Function<%28u8%29=>u8>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/array/Array<u32>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/memory-page/Page>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/memory-page/Page>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/memory-page/Page>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/memory-page/Page>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/api-internal/InitialPage>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/api-internal/InitialPage>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/api-internal/InitialChunk>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/api-internal/InitialChunk>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<assembly/gas-costs/BlockGasCost>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<assembly/gas-costs/BlockGasCost>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u64>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 0
  drop
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/array/Array<u64>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#__visit" (param $this i32) (param $cookie i32)
  (local $entries i32)
  (local $cur i32)
  (local $end i32)
  (local $entry i32)
  (local $val i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:buckets"
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entries"
  local.set $entries
  i32.const 1
  drop
  local.get $entries
  local.set $cur
  local.get $cur
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $"~lib/map/Map<u32,assembly/gas-costs/BlockGasCost>#get:entriesOffset"
  block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.7" (result i32)
   i32.const 12
   br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.7"
  end
  i32.mul
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    local.set $entry
    local.get $entry
    call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:taggedNext"
    i32.const 1
    i32.and
    i32.eqz
    if
     i32.const 0
     drop
     i32.const 1
     drop
     local.get $entry
     call $"~lib/map/MapEntry<u32,assembly/gas-costs/BlockGasCost>#get:value"
     local.set $val
     i32.const 0
     drop
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    block $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.8" (result i32)
     i32.const 12
     br $"~lib/map/ENTRY_SIZE<u32,assembly/gas-costs/BlockGasCost>|inlined.8"
    end
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/function/Function<%28~lib/string/String%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>~lib/string/String>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $val i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 1
  drop
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:dataStart
  local.set $cur
  local.get $cur
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:length_
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   if
    local.get $cur
    i32.load
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<~lib/string/String>#get:buffer
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/staticarray/StaticArray<u64>%29=>~lib/string/String>#get:_env
  local.get $cookie
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/object/Object#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store
  end
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/rt/__newArray (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 1
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store offset=4
  local.get $array
  local.get $bufferSize
  i32.store offset=8
  local.get $array
  local.get $length
  i32.store offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $~lib/staticarray/StaticArray<u8>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  i32.const 1073741820
  i32.const 0
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8288
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 0
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 23
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 8176
   i32.const 8224
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $~lib/util/number/itoa32 (param $value i32) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|8 i32)
  (local $buffer|9 i32)
  (local $num|10 i32)
  (local $offset|11 i32)
  (local $val32 i32)
  (local $decimals|13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 14864
   i32.const 14992
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 15056
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   return
  end
  local.get $value
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $decimals
   global.get $~lib/memory/__stack_pointer
   local.get $decimals
   i32.const 1
   i32.shl
   local.get $sign
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store
   local.get $out
   local.get $sign
   i32.add
   local.set $buffer
   local.get $value
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|8
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|8
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|9
    local.get $value
    local.set $num|10
    local.get $decimals|8
    local.set $offset|11
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|9
    local.get $num|10
    i64.extend_i32_u
    local.get $offset|11
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.set $val32
    local.get $val32
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|13
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|13
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.get $val32
    i64.extend_i32_u
    local.get $decimals|13
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16
  end
  local.get $out
  local.set $14
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $14
  return
 )
 (func $~lib/util/number/utoa32 (param $value i32) (param $radix i32) (result i32)
  (local $out i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|7 i32)
  (local $buffer|8 i32)
  (local $num|9 i32)
  (local $offset|10 i32)
  (local $decimals|11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 14864
   i32.const 14992
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 15056
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $decimals
   global.get $~lib/memory/__stack_pointer
   local.get $decimals
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store
   local.get $out
   local.set $buffer
   local.get $value
   local.set $num
   local.get $decimals
   local.set $offset
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $buffer
   local.get $num
   local.get $offset
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|7
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|7
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.set $buffer|8
    local.get $value
    local.set $num|9
    local.get $decimals|7
    local.set $offset|10
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|8
    local.get $num|9
    i64.extend_i32_u
    local.get $offset|10
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|11
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|11
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $value
    i64.extend_i32_u
    local.get $decimals|11
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $out
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
  return
 )
 (func $~lib/staticarray/StaticArray<bool>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  i32.const 1073741820
  i32.const 0
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8288
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 0
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 39
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/util/number/utoa64 (param $value i64) (param $radix i32) (result i32)
  (local $out i32)
  (local $val32 i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|8 i32)
  (local $buffer|9 i32)
  (local $num|10 i64)
  (local $offset|11 i32)
  (local $decimals|12 i32)
  (local $buffer|13 i32)
  (local $num|14 i64)
  (local $offset|15 i32)
  (local $decimals|16 i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 14864
   i32.const 14992
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 15056
   local.set $17
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $17
   return
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $value
    i32.wrap_i64
    local.set $val32
    local.get $val32
    call $~lib/util/number/decimalCount32
    local.set $decimals
    global.get $~lib/memory/__stack_pointer
    local.get $decimals
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.set $buffer
    local.get $val32
    local.set $num
    local.get $decimals
    local.set $offset
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer
    local.get $num
    local.get $offset
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $value
    call $~lib/util/number/decimalCount64High
    local.set $decimals|8
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|8
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.set $buffer|9
    local.get $value
    local.set $num|10
    local.get $decimals|8
    local.set $offset|11
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|9
    local.get $num|10
    local.get $offset|11
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $value
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|12
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|12
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.set $buffer|13
    local.get $value
    local.set $num|14
    local.get $decimals|12
    local.set $offset|15
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|13
    local.get $num|14
    local.get $offset|15
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|16
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|16
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $value
    local.get $decimals|16
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $out
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
  return
 )
 (func $~lib/staticarray/StaticArray<u32>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8288
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 32
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/staticarray/StaticArray<u64>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  i32.const 1073741820
  i32.const 3
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8288
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 3
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 14
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/staticarray/StaticArray<i32>#constructor (param $this i32) (param $length i32) (result i32)
  (local $outSize i32)
  (local $out i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 8176
   i32.const 8288
   i32.const 51
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  i32.const 2
  i32.shl
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 35
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $out
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
  return
 )
 (func $~lib/util/number/itoa64 (param $value i64) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $val32 i32)
  (local $decimals i32)
  (local $buffer i32)
  (local $num i32)
  (local $offset i32)
  (local $decimals|9 i32)
  (local $buffer|10 i32)
  (local $num|11 i64)
  (local $offset|12 i32)
  (local $decimals|13 i32)
  (local $buffer|14 i32)
  (local $num|15 i64)
  (local $offset|16 i32)
  (local $decimals|17 i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 14864
   i32.const 14992
   i32.const 431
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 15056
   local.set $18
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $18
   return
  end
  local.get $value
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i64.const 0
   local.get $value
   i64.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $value
    i32.wrap_i64
    local.set $val32
    local.get $val32
    call $~lib/util/number/decimalCount32
    local.set $decimals
    global.get $~lib/memory/__stack_pointer
    local.get $decimals
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer
    local.get $val32
    local.set $num
    local.get $decimals
    local.set $offset
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer
    local.get $num
    local.get $offset
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $value
    call $~lib/util/number/decimalCount64High
    local.set $decimals|9
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|9
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|10
    local.get $value
    local.set $num|11
    local.get $decimals|9
    local.set $offset|12
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|10
    local.get $num|11
    local.get $offset|12
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $value
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $decimals|13
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|13
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.set $buffer|14
    local.get $value
    local.set $num|15
    local.get $decimals|13
    local.set $offset|16
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $buffer|14
    local.get $num|15
    local.get $offset|16
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $decimals|17
    global.get $~lib/memory/__stack_pointer
    local.get $decimals|17
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store
    local.get $out
    local.get $sign
    i32.add
    local.get $value
    local.get $decimals|17
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16
  end
  local.get $out
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
  return
 )
 (func $export:assembly/api-internal/getAssembly (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/api-internal/getAssembly
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/program-build/wrapAsProgram (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/program-build/wrapAsProgram
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/api-debugger/resetJAM@varargs (param $0 i32) (param $1 f64) (param $2 i64) (param $3 i32) (param $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/api-debugger/resetJAM@varargs
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/api-debugger/resetGeneric@varargs (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/api-debugger/resetGeneric@varargs
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/api-debugger/resetGenericWithMemory@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i64) (param $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  call $assembly/api-debugger/resetGenericWithMemory@varargs
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/api-debugger/setRegisters (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/api-debugger/setRegisters
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/api-debugger/setMemory (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $0
  local.get $1
  call $assembly/api-debugger/setMemory
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/api-utils/getGasCosts (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $assembly/api-utils/getGasCosts
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/api-utils/disassemble (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $assembly/api-utils/disassemble
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/api-utils/prepareProgram (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=16
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  call $assembly/api-utils/prepareProgram
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $export:assembly/api-utils/runProgram@varargs (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/api-utils/runProgram@varargs
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
)
